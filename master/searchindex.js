Search.setIndex({"docnames": ["extending", "graphtage", "graphtage.bounds", "graphtage.csv", "graphtage.expressions", "graphtage.fibonacci", "graphtage.formatter", "graphtage.json", "graphtage.levenshtein", "graphtage.matching", "graphtage.multiset", "graphtage.plist", "graphtage.printer", "graphtage.progress", "graphtage.pydiff", "graphtage.search", "graphtage.sequences", "graphtage.utils", "graphtage.version", "graphtage.xml", "graphtage.yaml", "howitworks", "index", "library", "package", "printing"], "filenames": ["extending.rst", "graphtage.rst", "graphtage.bounds.rst", "graphtage.csv.rst", "graphtage.expressions.rst", "graphtage.fibonacci.rst", "graphtage.formatter.rst", "graphtage.json.rst", "graphtage.levenshtein.rst", "graphtage.matching.rst", "graphtage.multiset.rst", "graphtage.plist.rst", "graphtage.printer.rst", "graphtage.progress.rst", "graphtage.pydiff.rst", "graphtage.search.rst", "graphtage.sequences.rst", "graphtage.utils.rst", "graphtage.version.rst", "graphtage.xml.rst", "graphtage.yaml.rst", "howitworks.rst", "index.rst", "library.rst", "package.rst", "printing.rst"], "titles": ["Extending Graphtage", "graphtage", "graphtage.bounds", "graphtage.csv", "graphtage.expressions", "graphtage.fibonacci", "graphtage.formatter", "graphtage.json", "graphtage.levenshtein", "graphtage.matching", "graphtage.multiset", "graphtage.plist", "graphtage.printer", "graphtage.progress", "graphtage.pydiff", "graphtage.search", "graphtage.sequences", "graphtage.utils", "graphtage.version", "graphtage.xml", "graphtage.yaml", "How Graphtage Works", "Graphtage Documentation", "Using Graphtage Programmatically", "Graphtage API", "Printing Protocol"], "terms": {"i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25], "design": [0, 6], "extens": [0, 1, 3, 4, 6, 7, 11, 12, 14, 16, 19, 20], "new": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 19, 20, 22, 23], "filetyp": [0, 3, 6, 7, 11, 19, 20, 22, 23, 24], "can": [0, 1, 2, 4, 5, 8, 9, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24], "easili": [0, 23], "defin": [0, 1, 3, 4, 6, 9, 10, 11, 14, 16, 17, 19], "well": [0, 1, 2, 3, 11, 14, 16, 19], "node": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 14, 16, 19, 20, 21, 22, 25], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "edit": [0, 3, 6, 7, 8, 10, 11, 14, 16, 19, 20, 21, 22, 24, 25], "formatt": [0, 1, 3, 7, 8, 10, 11, 14, 16, 19, 20, 22, 23, 24, 25], "printer": [0, 1, 3, 6, 7, 8, 10, 11, 13, 14, 16, 19, 20, 22, 23, 24, 25], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "section": [0, 6, 22, 23], "give": [0, 6], "some": [0, 6, 14, 17, 23], "exampl": [0, 1, 2, 3, 4, 6, 9, 10, 11, 14, 15, 16, 17, 19, 21, 22, 23], "how": [0, 1, 3, 6, 7, 9, 11, 14, 16, 19, 20, 23, 25], "implement": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 25], "each": [0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "print": [0, 1, 3, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22], "protocol": [0, 1, 2, 3, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24], "from_nod": [1, 8, 9, 10, 14, 16, 19, 23, 25], "to_nod": [1, 8, 9, 10, 14, 16, 19, 23], "none": [1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25], "constant_cost": [1, 14], "int": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20], "0": [1, 2, 3, 7, 9, 11, 14, 16, 17, 19, 20, 25], "cost_upper_bound": [1, 14], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20], "abc": [1, 6, 16], "abstract": [1, 4, 6, 9, 12, 16], "__init__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23], "construct": [1, 2, 3, 6, 8, 9, 10, 11, 14, 16, 17, 19, 20, 21, 23], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25], "transform": [1, 3, 8, 11, 14, 16, 19, 22], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "option": [1, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "lower": [1, 2, 8, 10, 14, 16, 19], "bound": [1, 3, 8, 9, 10, 11, 14, 15, 16, 17, 19, 21, 22, 24, 25], "cost": [1, 3, 8, 9, 10, 11, 14, 16, 19, 25], "an": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25], "upper": [1, 2, 6, 8, 10, 14, 16, 19], "__iter__": [1, 3, 4, 5, 8, 10, 14, 16, 17, 19], "iter": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25], "over": [1, 2, 3, 4, 5, 6, 8, 10, 11, 14, 15, 16, 17, 19], "": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 23, 25], "sub": [1, 3, 6, 7, 8, 10, 11, 14, 16, 19, 20], "result": [1, 3, 4, 7, 8, 9, 10, 14, 15, 16, 17, 19, 22], "__lt__": [1, 2, 8, 10, 14, 16, 19], "other": [1, 2, 6, 8, 9, 10, 14, 15, 16, 17, 19], "test": [1, 3, 6, 8, 10, 11, 14, 16, 19, 21], "whether": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23], "ar": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 21, 23, 25], "less": [1, 2, 5, 8, 9, 10, 14, 16, 19], "than": [1, 2, 4, 5, 8, 9, 10, 12, 14, 15, 16, 17, 19, 23], "rang": [1, 8, 9, 10, 14, 15, 16, 19, 22, 24], "default": [1, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 19, 20, 23], "provid": [1, 2, 3, 4, 5, 7, 10, 11, 12, 14, 16, 17, 19, 20], "when": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 19, 20, 23], "wa": [1, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 19, 20, 21, 23], "If": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25], "constructor": [1, 9, 10, 14, 16, 19], "self": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23], "total_s": [1, 3, 10, 11, 14, 16, 19], "1": [1, 4, 7, 8, 9, 10, 14, 16, 17, 19, 21, 23], "has_non_zero_cost": [1, 8, 10, 14, 16, 19], "bool": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20], "ha": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 23, 25], "non": [1, 2, 7, 8, 9, 10, 14, 16, 19, 25], "zero": [1, 2, 3, 8, 10, 14, 16, 17, 19, 25], "tighten": [1, 2, 8, 9, 10, 14, 15, 16, 19], "until": [1, 2, 8, 9, 10, 14, 15, 16, 19, 21], "either": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 19, 20], "its": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 19, 20, 22, 23], "greater": [1, 4, 8, 10, 14, 16, 17, 19], "definit": [1, 2, 8, 9, 10, 14, 15, 16, 19], "initial_bound": [1, 8, 10, 14, 15, 16, 19], "is_complet": [1, 8, 9, 10, 14, 16, 19], "complet": [1, 3, 6, 8, 9, 10, 11, 14, 16, 19, 21], "further": [1, 10, 14, 16, 19], "call": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 23, 25], "tighten_bound": [1, 2, 8, 9, 10, 14, 15, 16, 19], "chang": [1, 10, 14, 16, 18, 19, 21], "natur": [1, 6, 10, 14, 16, 19], "consid": [1, 3, 6, 10, 14, 16, 19, 21], "valid": [1, 3, 4, 8, 10, 11, 14, 16, 19], "abl": [1, 6, 9, 10, 12, 14, 16, 19], "discern": [1, 10, 14, 16, 19], "uniqu": [1, 4, 10, 14, 16, 19], "solut": [1, 9, 10, 14, 15, 16, 19], "even": [1, 3, 9, 10, 11, 14, 16, 17, 19, 21], "final": [1, 6, 8, 10, 12, 13, 14, 16, 19], "unknown": [1, 4, 10, 14, 15, 16, 19], "should": [1, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22], "reimplement": [1, 7, 10, 14, 16, 19, 20], "method": [1, 6, 9, 10, 12, 14, 16, 17, 19, 25], "check": [1, 2, 4, 5, 6, 8, 10, 14, 16, 19], "For": [1, 3, 4, 6, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 22, 23], "case": [1, 6, 10, 14, 16, 17, 19, 21], "onli": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19], "true": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "futur": [1, 9, 10, 14, 16, 19], "affect": [1, 6, 10, 14, 16, 18, 19], "subsequ": [1, 10, 14, 16, 19], "serv": [1, 10, 14, 16, 19], "semant": [1, 4, 5, 10, 14, 16, 19, 22], "on_diff": [1, 8, 10, 14, 16, 19], "callback": [1, 7, 8, 10, 11, 14, 16, 19, 20], "assign": [1, 6, 8, 9, 10, 14, 16, 17, 19], "diff": [1, 3, 8, 10, 11, 16, 19, 21, 22, 23, 24], "add": [1, 5, 8, 9, 10, 12, 14, 16, 17, 19], "recurs": [1, 3, 6, 8, 10, 11, 14, 16, 19], "all": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 16, 17, 19, 23], "edit_list": [1, 8, 10, 14, 16, 19], "append": [1, 8, 10, 12, 14, 16, 18, 19], "ad": [1, 6, 8, 10, 12, 14, 16, 19], "automat": [1, 2, 3, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 19, 20], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 23], "never": [1, 3, 6, 7, 11, 14, 16, 19, 20], "directli": [1, 14, 19, 23], "unless": [1, 3, 5, 11, 14, 16, 19, 21], "you": [1, 3, 6, 9, 11, 14, 15, 16, 19, 23], "realli": [1, 14, 19], "know": [1, 6, 14, 19], "what": [1, 14, 19, 22, 24], "re": [1, 14, 19], "do": [1, 3, 5, 9, 10, 14, 19, 22, 23, 24], "rais": [1, 2, 4, 5, 6, 7, 9, 14, 16, 17, 19, 25], "notimplementederror": [1, 14, 19, 25], "caus": [1, 14, 19, 23], "fall": [1, 6, 14, 19], "back": [1, 6, 12, 14, 19], "own": [1, 14, 19], "equival": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 19, 20], "possibl": [1, 3, 6, 8, 11, 14, 15, 16, 19, 21], "have": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 23], "been": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 19, 20, 23], "fals": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "properti": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20], "like": [1, 3, 4, 7, 9, 11, 12, 14, 16, 17, 19, 20, 21, 22, 23], "bool_lik": 1, "contain": [1, 3, 7, 9, 11, 14, 16, 17, 18, 19, 20, 23], "creat": [1, 5, 14, 15, 17], "given": [1, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17, 19, 20], "object": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 25], "obj": [1, 4, 10, 11, 17, 20], "underli": [1, 12], "python": [1, 3, 4, 5, 6, 7, 9, 11, 14, 16, 17, 19, 22], "wrap": [1, 2, 9, 12], "calculate_total_s": [1, 3, 11, 14, 16, 19], "By": [1, 3, 4, 7, 11, 14, 16, 19, 20], "leaf": [1, 3], "size": [1, 3, 4, 11, 12, 13, 14, 16, 19, 21, 22, 24], "equal": [1, 2, 4, 9, 10, 14, 17], "length": [1, 3, 4, 19], "string": [1, 3, 4, 6, 7, 8, 11, 12, 18, 19, 20], "represent": [1, 3, 6, 7, 11, 12, 14, 16, 19, 20, 21, 22], "len": [1, 3, 4, 11, 14, 16, 19], "str": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20], "howev": [1, 3, 4, 6, 11, 14, 15, 16, 18, 19, 21], "subclass": [1, 3, 6, 11, 14, 16, 19], "mai": [1, 13, 15], "overrid": [1, 4, 6, 9], "whatev": 1, "requir": [1, 3, 5, 7, 10, 14, 19, 20], "children": [1, 3, 5, 10, 11, 14, 16, 19], "collect": [1, 4, 5, 9, 10, 19, 22], "so": [1, 5, 6, 9, 16, 25], "alwai": [1, 2, 3, 4, 6, 9, 11, 14, 16, 18, 19], "empti": [1, 3, 4, 9, 17], "tupl": [1, 3, 4, 9, 11, 14, 16, 17, 18, 19], "df": [1, 3, 11, 14, 16, 19], "perform": [1, 3, 9, 11, 14, 16, 19, 21, 23], "depth": [1, 3, 11, 14, 16, 19], "first": [1, 3, 6, 9, 11, 14, 16, 17, 19, 23], "travers": [1, 3, 11, 14, 16, 19], "descend": [1, 3, 5, 11, 14, 16, 19], "includ": [1, 3, 4, 5, 11, 14, 16, 18, 19, 23], "yield": [1, 2, 3, 4, 5, 11, 14, 15, 16, 19], "stack": [1, 3, 4, 11, 14, 16, 19], "while": [1, 2, 3, 5, 9, 11, 14, 15, 16, 19], "pop": [1, 2, 3, 5, 9, 11, 14, 16, 17, 19], "extend": [1, 3, 6, 7, 11, 12, 14, 16, 19, 20], "revers": [1, 3, 4, 5, 6, 11, 14, 16, 19], "t": [1, 3, 5, 6, 7, 8, 9, 11, 14, 16, 17, 19, 20], "against": [1, 3, 6, 11, 14, 16, 19], "which": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23], "version": [1, 3, 7, 9, 11, 14, 16, 19, 20, 22, 23, 24], "being": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 16, 17, 19, 20, 22, 23], "union": [1, 3, 7, 9, 11, 14, 16, 17, 18, 19, 20], "edit_modifi": [1, 3, 11, 14, 16, 19], "list": [1, 3, 4, 6, 7, 9, 11, 12, 13, 14, 16, 17, 19, 20, 21], "callabl": [1, 3, 4, 5, 6, 7, 9, 11, 14, 16, 17, 19, 20], "editable_dict": [1, 3, 11, 14, 16, 19], "dict": [1, 3, 4, 7, 9, 11, 12, 14, 16, 17, 19, 21], "ani": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "copi": [1, 3, 9, 11, 14, 16, 17, 19], "__dict__": [1, 3, 4, 11, 14, 16, 19], "therein": [1, 11, 14, 19], "ret": [1, 3, 11, 14, 16, 19], "is_leaf": [1, 3, 11, 14, 16, 19], "kei": [1, 2, 5, 7, 10, 11, 12, 14, 17, 19, 21, 23], "valu": [1, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 19, 21, 23], "item": [1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 15, 16, 17, 19, 20, 21], "isinst": [1, 6, 11, 14, 19], "make_edit": [1, 3, 11, 14, 16, 19], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21], "wherea": [1, 3, 11, 14, 16, 19], "calcul": [1, 3, 8, 9, 11, 14, 16, 17, 19], "best": [1, 3, 6, 11, 14, 15, 16, 19], "get_all_edit_context": [1, 3, 11, 14, 16, 19], "context": [1, 3, 4, 7, 11, 12, 14, 16, 19, 20], "one": [1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22], "pair": [1, 3, 4, 9, 11, 14, 16, 17, 19, 21], "path": [1, 3, 7, 11, 14, 16, 17, 19, 20], "note": [1, 3, 6, 9, 11, 14, 16, 19], "explod": [1, 3, 11, 14, 16, 19], "sequenc": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20, 22, 23, 24], "get_all_edit": [1, 3, 11, 14, 16, 19, 23], "instanc": [1, 3, 6, 7, 9, 11, 12, 14, 16, 17, 19, 20], "also": [1, 3, 4, 5, 6, 7, 11, 14, 16, 17, 18, 19, 20, 23], "__class__": [1, 3, 6, 7, 11, 14, 16, 19, 20], "edited_typ": [1, 3, 11, 14, 16, 19], "therebi": [1, 3, 7, 11, 14, 16, 19], "mutabl": [1, 3, 11, 14, 16, 17, 19], "parent": [1, 3, 5, 6, 7, 11, 12, 14, 16, 19, 20, 23], "setter": [1, 3, 11, 14, 16, 19], "set": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20], "itself": [1, 3, 5, 7, 9, 11, 14, 15, 16, 19, 20, 23], "child": [1, 3, 5, 7, 11, 14, 16, 19, 20], "doe": [1, 2, 3, 4, 5, 9, 11, 12, 14, 16, 17, 19, 22, 24], "off": [1, 3, 11, 14, 16, 19], "must": [1, 3, 4, 9, 11, 13, 14, 16, 19], "repr": 1, "write": [1, 3, 6, 7, 11, 12, 13, 14, 16, 19, 20], "print_parent_context": [1, 3, 11, 14, 16, 19], "for_child": [1, 3, 11, 14, 16, 19], "repres": [1, 2, 3, 4, 10, 11, 14, 16, 19], "element": [1, 3, 5, 9, 10, 11, 12, 14, 16, 17, 18, 19, 21], "index": [1, 3, 7, 11, 14, 16, 17, 19, 20, 22], "3": [1, 3, 4, 9, 11, 14, 16, 17, 19, 21, 23], "might": [1, 3, 6, 11, 14, 15, 16, 19, 22], "expect": [1, 3, 9, 11, 14, 16, 19], "noth": [1, 3, 9, 11, 14, 16, 19], "to_obj": [1, 3, 11, 14, 16, 19], "arbitrari": [1, 3, 7, 9, 11, 14, 16, 17, 19, 23], "immut": [1, 3, 11, 14, 16, 19, 23], "time": [1, 3, 5, 7, 8, 9, 11, 14, 16, 17, 19, 20, 21], "memoiz": [1, 3, 9, 11, 14, 16, 19], "integ": [1, 2, 3, 4, 9, 11, 14, 15, 16, 19], "allow_key_edit": [1, 14, 19], "auto_match_kei": [1, 10, 14, 19], "allow_list_edit": [1, 3, 19], "allow_list_edits_when_same_length": [1, 3, 19], "kwarg": [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 16, 17, 19, 20], "pass": [1, 2, 3, 6, 7, 11, 12, 14, 15, 16, 19, 20], "tree": [1, 2, 3, 7, 11, 14, 19, 20, 22, 23], "build": [1, 3, 7, 11, 14, 18, 19, 20], "__getattr__": 1, "undefin": [1, 5, 9], "initi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20], "keyword": [1, 3, 6, 7, 11, 14, 16, 17, 19, 20], "attribut": [1, 4, 6, 12, 19], "specifi": [1, 4, 6, 12, 17], "arg": [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 16, 17, 19, 20], "compos": 1, "finit": [1, 2, 15], "neg": [1, 2, 17], "avail": [1, 4, 6], "determin": [1, 3, 4, 6, 7, 9, 11, 14, 15, 16, 18, 19, 20, 23, 25], "longer": 1, "regardless": [1, 9], "our": [1, 23], "fulli": [1, 2, 8, 9, 15], "whose": [1, 13], "known": [1, 15], "constant": [1, 2, 4, 5], "kwd": [1, 17], "all_children_are_leav": [1, 3, 11, 14, 16, 19], "leav": [1, 3, 11, 14, 16, 19], "c": [1, 3, 7, 9, 11, 14, 16, 17, 19, 20], "thei": [1, 2, 3, 5, 9, 11, 12, 14, 16, 17, 19, 21, 22], "pure": [1, 3, 5, 9, 11, 14, 16, 19], "map": [1, 3, 4, 8, 9, 11, 14, 16, 17, 19, 22], "sole": [1, 3, 4, 8, 10, 11, 14, 16, 19], "oper": [1, 2, 3, 5, 11, 14, 16, 19, 22, 23, 24], "commandlin": [1, 3, 11, 14, 16, 19, 22], "express": [1, 3, 11, 14, 16, 19, 22, 24], "evalu": [1, 3, 4, 11, 14, 16, 19], "dictionari": [1, 10, 17, 21], "multiset": [1, 9, 22, 24], "unlik": 1, "more": [1, 2, 3, 4, 6, 9, 10, 15, 17], "effici": [1, 9, 15, 17], "altern": 1, "support": [1, 4, 6, 17, 22], "duplic": [1, 14], "__contains__": [1, 14], "k": [1, 5, 14, 17, 23], "_": [1, 4, 7, 14], "run": [1, 14, 18], "worst": [1, 14], "linear": [1, 14], "sought": [1, 14], "exist": [1, 2, 10, 14, 15, 17, 21, 22, 24], "__getitem__": [1, 14, 17], "look": [1, 3, 6, 7, 11, 14, 16, 19, 20], "up": [1, 3, 6, 7, 11, 14, 15, 16, 17, 19, 20], "kvp": [1, 14], "keyerror": [1, 4, 9, 14, 17], "found": [1, 4, 6, 14, 15, 17], "container_typ": [1, 3, 4, 14, 16, 19], "hashablecount": [1, 10, 14, 22, 24], "store": [1, 4, 5, 9, 14, 16, 17], "sequencenod": [1, 3, 7, 8, 10, 11, 14, 19, 20, 22, 24], "_children": [1, 3, 14, 16, 19], "deep": [1, 14, 16], "n": [1, 3, 4, 9, 12, 13, 14, 16, 17, 19], "classmethod": [1, 9, 14, 17], "from_dict": [1, 14], "source_dict": [1, 14], "sourc": [1, 7, 8, 14, 17, 19, 20, 21, 23], "similar": [1, 14, 21], "sinc": [1, 2, 3, 9, 10, 14, 21, 23], "make_key_value_pair_nod": [1, 14], "sequenceformatt": [1, 3, 7, 11, 14, 19, 20, 22, 24], "dure": 1, "add_to_collect": 1, "gener": [1, 4, 5, 6, 9, 15, 16, 17, 21, 22, 23], "compris": [1, 8, 23], "mixin": 1, "In": [1, 2, 17, 21, 22], "practic": [1, 9, 22], "almost": [1, 9], "instanti": [1, 3, 6, 7, 11, 13, 14, 16, 19, 20], "edited_cost": 1, "appli": [1, 12, 22], "sum": [1, 3, 4, 9, 14, 16, 17, 19], "e": [1, 2, 4, 5, 6, 9, 12, 15, 17, 21], "upper_bound": [1, 2], "instead": [1, 12, 17], "type_nam": 1, "default_mimetyp": 1, "mimetyp": 1, "file": [1, 3, 6, 7, 11, 17, 19, 20, 21, 22, 23], "format": [1, 3, 7, 9, 11, 12, 14, 16, 19, 20, 21, 22, 24, 25], "registri": [1, 6], "inclus": [1, 2], "command": [1, 6, 12, 13, 18, 19, 23], "line": [1, 3, 12, 13, 18, 19, 21, 23], "argument": [1, 2, 3, 4, 6, 16], "mime": [1, 3, 7, 11, 19, 20], "auto": [1, 2, 4], "detect": 1, "short": 1, "name": [1, 4, 6, 12, 13, 22], "via": 1, "addit": [1, 4, 12, 18, 23], "associ": [1, 3, 4, 5, 6, 7, 11, 14, 16, 19, 20], "valueerror": [1, 2, 4, 5, 7, 9, 14, 16], "conflict": 1, "preexist": [1, 6], "build_tre": [1, 22, 23, 24], "intermedi": [1, 6, 7, 11, 16, 19, 20, 22], "pars": [1, 3, 7, 11, 19, 20, 22, 24], "root": [1, 3, 6, 7, 11, 12, 14, 16, 19, 20], "build_tree_handling_error": [1, 3, 7, 11, 19, 20], "same": [1, 3, 6, 7, 9, 11, 12, 14, 19, 20, 23], "human": [1, 3, 7, 11, 19, 20], "readabl": [1, 3, 6, 7, 11, 12, 13, 19, 20], "error": [1, 3, 4, 7, 11, 19, 20], "failur": [1, 3, 7, 11, 19, 20], "throw": [1, 3, 7, 11, 19, 20], "except": [1, 3, 4, 7, 11, 19, 20], "On": [1, 3, 7, 11, 19, 20], "success": [1, 3, 7, 8, 11, 19, 20], "messag": [1, 3, 4, 7, 11, 12, 13, 19, 20], "get_default_formatt": [1, 3, 7, 11, 19, 20], "namespac": [1, 6], "abcmeta": [1, 6], "metaclass": [1, 3, 6, 7, 11, 14, 16, 19, 20], "regist": [1, 6], "them": [1, 2, 7, 9, 17, 19, 20], "lookup": [1, 4, 6], "clsdict": [1, 6], "__instancecheck__": [1, 6], "cl": [1, 3, 6, 7, 11, 14, 16, 19, 20], "__subclasscheck__": [1, 6], "issubclass": [1, 6], "_abc_caches_clear": [1, 6], "clear": [1, 5, 6, 9, 17], "cach": [1, 4, 6], "debug": [1, 6, 23, 25], "_abc_registry_clear": [1, 6], "_dump_registri": [1, 6], "helper": [1, 6, 9], "mro": [1, 6], "resolut": [1, 6], "order": [1, 5, 6, 9, 15, 17, 22], "virtual": [1, 6], "allow": [1, 4, 6, 17, 19, 23], "usag": [1, 4, 6], "decor": [1, 2, 6, 12], "attempt": [1, 2, 9, 15], "two": [1, 6, 8, 9, 17, 22, 23], "share": 1, "most": [1, 4, 9, 15, 17, 21], "current": [1, 4, 14, 15, 19], "protect": [1, 4, 14, 16], "member": [1, 4, 5, 9, 14, 15, 16, 23], "__len__": [1, 3, 14, 16, 17, 19], "number": [1, 3, 4, 5, 6, 7, 12, 14, 15, 16, 17, 18, 19, 20], "total": [1, 3, 7, 14, 15, 16, 19, 20], "output": [1, 6, 9, 12, 13, 14, 17, 23], "sequenceedit": [1, 8, 10, 22, 24], "remaind": [1, 4, 16], "get_formatt": [1, 3, 7, 8, 10, 11, 14, 16, 19, 20, 22, 24, 25], "conveni": [1, 4, 6, 8, 10, 12, 16], "aid": [1, 8, 10, 16], "autom": [1, 6, 8, 10, 16], "It": [1, 4, 5, 6, 8, 9, 10, 16, 18], "cast": [1, 8, 10, 16], "float_lik": 1, "float": [1, 4, 7, 9], "default_inst": [1, 3, 6, 7, 11, 14, 16, 19, 20, 23], "formattercheck": [1, 3, 7, 11, 14, 16, 19, 20, 22, 24], "static": [1, 3, 4, 6, 7, 11, 12, 14, 16, 19, 20], "__new__": [1, 3, 6, 7, 11, 14, 16, 19, 20], "popul": [1, 3, 6, 7, 11, 14, 16, 17, 19, 20], "sub_formatt": [1, 3, 6, 7, 11, 14, 16, 19, 20], "base_formatt": [1, 3, 6, 7, 11, 14, 16, 19, 20], "is_parti": [1, 3, 6, 7, 11, 14, 16, 19, 20], "manual": [1, 3, 6, 7, 11, 13, 14, 16, 19, 20], "modifi": [1, 3, 5, 6, 7, 11, 14, 16, 19, 20, 21], "node_or_edit": [1, 3, 7, 11, 14, 16, 19, 20, 25], "with_edit": [1, 3, 7, 11, 14, 16, 19, 20, 25], "veri": [1, 3, 7, 11, 14, 16, 19, 20], "complex": [1, 3, 4, 7, 11, 14, 16, 19, 20, 22], "due": [1, 3, 7, 11, 14, 16, 19, 20], "see": [1, 3, 6, 7, 11, 13, 14, 16, 19, 20, 22, 23, 25], "detail": [1, 3, 7, 11, 14, 16, 19, 20], "descript": [1, 3, 7, 11, 14, 16, 19, 20], "sub_format_typ": [1, 3, 6, 7, 11, 14, 16, 19, 20], "correspond": [1, 3, 6, 7, 11, 14, 16, 17, 19, 20], "to_insert": [1, 10], "insert_into": 1, "penalti": [1, 8], "insert_str": 1, "int_lik": 1, "from_kvp": 1, "to_kvp": 1, "__eq__": [1, 9, 14], "anoth": [1, 2, 3, 4, 6, 8, 9, 10, 14, 17, 19, 21, 23], "keyvaluepair": [1, 14], "compar": [1, 2, 3, 5, 6, 9, 14, 19, 22], "otherwis": [1, 4, 14, 17, 25], "smaller": [1, 2, 14], "blue": [1, 7, 14], "follow": [1, 3, 4, 6, 7, 11, 14, 16, 17, 19, 20, 25], "bright": [1, 7, 12, 14], "white": [1, 14], "match_from": 1, "match_to": 1, "null": [1, 9], "initial_cost": 1, "compound": 1, "choos": [1, 25], "among": 1, "compet": 1, "chosen": [1, 25], "search": [1, 22, 24], "iterativetighteningsearch": [1, 22, 24], "One": [1, 2], "choic": 1, "best_poss": 1, "yet": [1, 6, 8, 15, 17], "to_remov": [1, 10], "remove_from": [1, 23], "remove_str": 1, "to_replac": 1, "replace_with": 1, "escap": [1, 3, 7, 12, 19, 20], "onc": [1, 7, 8, 19, 20], "charact": [1, 4, 7, 12, 19, 20], "is_quot": [1, 7, 19, 20], "print_stringedit": [1, 7, 19, 20], "print_stringnod": [1, 7, 11, 19, 20], "write_char": [1, 7, 19, 20], "num_edit": [1, 7, 19, 20], "There": [1, 4, 7, 12, 19, 20, 22, 23], "need": [1, 3, 7, 9, 19, 20, 23], "special": [1, 6, 7, 19, 20, 21, 25], "alreadi": [1, 2, 4, 5, 7, 9, 12, 19, 20], "configur": [1, 7, 19, 20], "prior": [1, 7, 9, 19, 20], "write_end_quot": [1, 7, 19, 20], "end": [1, 4, 7, 8, 11, 12, 14, 16, 17, 19, 20], "quot": [1, 7, 19, 20], "necessari": [1, 2, 6, 8, 9, 12, 19, 20], "write_start_quot": [1, 7, 19, 20], "start": [1, 4, 6, 7, 8, 11, 12, 14, 16, 19, 20, 21, 22], "string_lik": 1, "intend": [1, 2], "hand": 1, "respons": [1, 23], "dynam": [1, 6], "both": [1, 2, 6, 9, 17, 22, 23], "variabl": [1, 4, 6, 23], "new_nod": 1, "wrapped_tree_nod": 1, "Its": [1, 22], "accept": [1, 5, 9, 17, 19], "potenti": 1, "itertool": 1, "chain": 1, "els": [1, 6, 13, 17], "mime_typ": 1, "At": 1, "least": [1, 3, 7, 11, 14, 16, 17, 19, 20], "guess": 1, "guess_typ": 1, "could": [1, 6, 9, 18], "identifi": [1, 3, 4], "s1": 1, "s2": 1, "editdist": [1, 22, 24], "comput": [1, 4, 8, 9, 10, 12], "distanc": [1, 8, 21], "between": [1, 7, 8, 9, 11, 14, 16, 19, 20, 23], "list1": 1, "list2": 1, "insert_remove_penalti": [1, 8], "levenshtein": [1, 21, 22, 24], "modul": [2, 4, 9, 10, 12, 13, 15, 18, 19, 21, 22, 24], "import": [2, 6, 9, 17, 23], "p": [2, 3, 7, 11, 14, 16, 19, 20, 21, 23], "posit": [2, 3, 17], "10": [2, 4, 9], "20": [2, 9], "30": 2, "varieti": 2, "data": [2, 9, 17, 23], "structur": [2, 9, 17, 21, 22, 23], "algorithm": [2, 4, 5, 8, 9, 15, 21, 23], "g": [2, 4, 6, 12, 15, 21], "negative_infin": [2, 22, 24], "positive_infin": [2, 22, 24], "shrink": [2, 9, 15], "were": [2, 6, 9, 15], "suffici": 2, "distinct": [2, 9], "differenti": [2, 23], "domin": 2, "event": [2, 9], "ident": 2, "after": [2, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 19, 20], "id": [2, 4], "constitut": 2, "where": [2, 4, 6, 7, 12, 14], "infinit": 2, "primarili": 2, "unbound": [2, 8, 17, 21], "lower_bound": [2, 8, 25], "neither": [2, 10], "intersect": [2, 9, 17], "to_interv": 2, "interv": 2, "convert": [2, 4, 23], "intervaltre": 2, "packag": 2, "ensur": [2, 4], "overlap": [2, 9], "b": [2, 9, 15, 17], "smallest": [2, 5, 9, 15, 22, 24], "minimum": [2, 8, 9, 10, 17, 21], "func": [2, 12], "repeatedli": 2, "ignor": [2, 17], "heap": [2, 5], "fibonacciheap": [2, 22, 24], "push": [2, 5], "dif": [3, 6, 7, 11, 19, 20, 21, 22], "render": [3, 7, 11, 18, 19, 20, 23], "text": [3, 4, 7, 13, 19, 20], "buildopt": [3, 7, 11, 14, 19, 20, 22, 24], "treenod": [3, 6, 7, 8, 9, 10, 11, 14, 16, 19, 20, 22, 23, 24, 25], "graphtageformatt": [3, 7, 8, 10, 11, 14, 16, 19, 20, 22, 24, 25], "top": 3, "level": 3, "print_leafnod": [3, 7, 11, 19, 20], "leafnod": [3, 7, 11, 14, 19, 20, 22, 24], "column": [3, 17], "row": [3, 17], "writer": [3, 13, 22, 24], "writerow": 3, "json": [3, 6, 14, 16, 21, 22, 23, 24], "jsonformatt": [3, 14, 22, 23, 24], "listnod": [3, 7, 11, 14, 16, 19, 22, 23, 24], "remov": [3, 5, 7, 8, 9, 12, 15, 17, 19, 20, 22, 23, 24], "insert": [3, 4, 5, 7, 8, 17, 19, 20, 22, 24], "child_index": [3, 14, 19], "editedtreenod": [3, 8, 10, 11, 14, 16, 19, 22, 23, 24], "compoundedit": [3, 10, 11, 14, 16, 19, 22, 24], "containernod": [3, 7, 11, 14, 16, 19, 20, 22, 24], "mappingnod": [3, 7, 11, 14, 16, 19, 22, 24], "match": [3, 7, 8, 10, 11, 14, 16, 19, 20, 22, 24], "super": [3, 7, 8, 14], "edit_print": [3, 7, 11, 14, 16, 19, 20], "simpli": [3, 6, 7, 11, 14, 16, 19, 20], "deleg": [3, 7, 10, 11, 14, 16, 19, 20, 25], "partial": [3, 5, 7, 9, 11, 14, 16, 19, 20], "item_newlin": [3, 7, 11, 14, 16, 19, 20], "is_first": [3, 7, 11, 14, 16, 19, 20], "is_last": [3, 7, 11, 14, 16, 19, 20], "singl": 3, "items_ind": [3, 7, 11, 14, 16, 19, 20], "indent": [3, 7, 11, 12, 14, 16, 19, 20], "immedi": [3, 6, 7, 11, 14, 16, 19, 20], "start_symbol": [3, 7, 11, 14, 16, 19, 20], "befor": [3, 4, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20], "print_csvrow": 3, "print_sequencenod": [3, 7, 11, 14, 16, 19, 20], "With": [3, 11, 14, 16, 19, 20], "just": [3, 6, 11, 14, 16, 19, 20, 23], "newlin": [3, 6, 7, 11, 12, 13, 14, 16, 19, 20], "last": [3, 6, 7, 8, 11, 13, 14, 16, 17, 19, 20], "becaus": [3, 6, 9], "print_csvnod": 3, "reader": 3, "extra": [3, 7, 11, 12, 13, 14, 16, 19, 20], "safer": 4, "eval": 4, "infix": 4, "adjust": 4, "preced": [4, 6], "getitem": 4, "modicum": 4, "safeti": 4, "access": [4, 17], "programm": 4, "disallow": 4, "privat": 4, "here": [4, 6, 9, 18, 22, 23], "foo": [4, 6, 17, 21, 23], "bar": [4, 6, 13, 21, 23], "2": [4, 9, 17, 21, 23], "rpn": 4, "raw_str": 4, "op": 4, "5": [4, 9, 17, 21], "lambda": [4, 5, 7, 9, 11, 14, 16, 19, 20], "0x135057f80": 4, "multipl": 4, "4": [4, 9, 17, 21, 23], "0x135057d40": 4, "local": [4, 6], "40": 4, "1234": 4, "elid": 4, "trace": 4, "cannot": [4, 15, 21], "read": [4, 12, 13, 17, 22], "0x127808170": 4, "0x127805ef0": 4, "offset": [4, 12, 13], "15": [4, 21], "default_glob": [4, 22, 24], "global": [4, 6, 12, 15], "ab": 4, "ascii": 4, "bin": 4, "bytearrai": 4, "byte": [4, 7, 12, 13, 17], "chr": 4, "enumer": 4, "filter": 4, "frozenset": [4, 9], "hash": [4, 9, 17], "hex": 4, "max": [4, 17], "min": 4, "oct": 4, "ord": [4, 9], "round": 4, "slice": 4, "sort": [4, 5, 9, 15, 17, 21, 22, 24], "zip": 4, "operators_by_nam": [4, 22, 24], "identifier_byt": [4, 22, 24], "letter": 4, "plu": [4, 12, 17], "close": [4, 12, 13], "bracket": 4, "raw_text": 4, "raw": 4, "within": 4, "input": [4, 6, 9, 15, 17, 21, 23], "raw_token": 4, "origin": [4, 21, 23], "start_token_typ": 4, "alia": 4, "collection_typ": 4, "datastructur": [4, 9], "keep": [4, 12, 17], "track": [4, 12], "polish": 4, "notat": 4, "state": [4, 5], "omit": [4, 5, 7, 11, 12, 13, 14, 16, 17, 19, 20], "get_valu": 4, "liter": 4, "resolv": [4, 6], "numer": 4, "meta": 4, "inject": 4, "fix": 4, "ariti": 4, "indic": [4, 9, 23], "is_list": 4, "open": [4, 17], "discard": [4, 9], "delimit": [4, 7, 11, 14, 16, 18, 19, 20], "is_function_cal": 4, "enum": 4, "bitwise_and": 4, "9": 4, "bitwise_left_shift": 4, "6": [4, 21], "bitwise_not": 4, "bitwise_or": 4, "11": 4, "bitwise_right_shift": 4, "bitwise_xor": 4, "divis": 4, "8": 4, "function_cal": 4, "greater_than": 4, "7": [4, 21], "greater_than_equ": 4, "IN": 4, "int_divis": 4, "less_than": 4, "less_than_equ": 4, "logical_and": 4, "12": [4, 9], "logical_not": 4, "logical_or": 4, "13": 4, "member_access": 4, "not_equ": 4, "subtract": [4, 17], "ternary_condit": 4, "ternary_els": 4, "14": [4, 9], "unary_minu": 4, "unary_plu": 4, "prioriti": 4, "execut": [4, 21], "is_left_associ": 4, "include_in_global_operator_t": 4, "expand": [4, 6, 8], "three": [4, 18, 23], "consum": 4, "left_associ": 4, "left": [4, 5, 8], "programmat": [4, 14], "pari": 4, "runtimeerror": 4, "with_traceback": 4, "tb": 4, "__traceback__": 4, "stream": [4, 12, 13, 17, 23], "io": [4, 12, 13], "commenc": 4, "has_next": 4, "peek": [4, 5], "next": [4, 6, 8], "would": [4, 6, 23], "actual": [4, 5, 12, 25], "prev_token": 4, "previou": 4, "get": [4, 5, 17], "getattr": 4, "permit": [4, 7, 12, 20], "retriev": 4, "underscor": 4, "startswith": 4, "request": [4, 6], "api": [4, 12], "custom": [4, 7, 14, 20, 23], "behavior": [4, 5, 6, 9], "shunt": 4, "yard": 4, "expression_str": 4, "stream_or_str": 4, "mani": [5, 17], "we": [5, 6, 9, 15, 23, 25], "speedup": 5, "amort": 5, "function": [5, 10, 15, 16, 22, 23, 24], "decrease_kei": 5, "x": [5, 7, 11, 20], "decreas": [5, 8], "extract": 5, "comparison": [5, 23], "min_nod": 5, "without": [5, 12], "assum": [5, 7, 21], "delet": 5, "assumpt": [5, 15], "incorrect": [5, 15], "lead": 5, "corrupt": 5, "add_child": 5, "increment": 5, "degre": 5, "sibl": 5, "prevent": [5, 6], "manipul": 5, "mark": [5, 12], "remove_child": 5, "decrement": 5, "right": [5, 8], "wrapper": 5, "reusabl": 6, "textual": 6, "ti": 6, "easiest": 6, "problem": [6, 9, 15, 21], "capabl": [6, 9], "librari": [6, 17, 23], "yaml": [6, 22, 23, 24], "Or": [6, 17], "enabl": [6, 12, 15], "through": [6, 9, 12], "sai": 6, "develop": [6, 9, 18], "mean": 6, "user": 6, "deal": 6, "come": 6, "plai": 6, "magic": [6, 23], "wizardri": 6, "bit": 6, "infer": 6, "figur": 6, "out": [6, 12, 17], "specif": [6, 15, 22], "make": [6, 15], "stringformatt": [6, 7, 19, 20, 22, 24], "def": [6, 23], "print_str": 6, "f": [6, 17], "thing": 6, "registr": 6, "disabl": 6, "intformatt": 6, "print_int": 6, "1337": 6, "work": [6, 8, 9, 10, 23], "demonstr": 6, "inherit": 6, "fooformatt": 6, "print_foo": 6, "straightforward": 6, "enough": 6, "But": [6, 9], "separ": [6, 21], "handl": [6, 12], "barformatt": 6, "print_bar": 6, "cool": 6, "huh": 6, "collis": 6, "let": 6, "join": [6, 22], "oof": 6, "As": [6, 23], "prefer": 6, "got": 6, "lucki": 6, "printout": 6, "though": [6, 9, 17], "happen": 6, "That": 6, "desir": 6, "To": [6, 23], "compartment": 6, "insid": 6, "formtter": 6, "organ": 6, "hierarch": 6, "barstringformatt": 6, "now": 6, "invok": [6, 7, 14], "describ": 6, "proper": 6, "activ": 6, "abov": [6, 8], "__mro__": 6, "__name__": 6, "repeat": [6, 17], "process": 6, "subformatt": 6, "point": [6, 8, 21], "basic": [6, 12], "decid": 6, "everi": [6, 12], "begin": [6, 17], "print_": 6, "verifi": 6, "insofar": 6, "checker": 6, "typeerror": 6, "hint": [6, 12, 13], "node_typ": 6, "correct": 6, "made": [6, 13], "accord": 6, "applic": [7, 11, 19, 20], "javascript": 7, "symbol": [7, 11, 14, 16, 18, 19, 20], "end_symbol": [7, 11, 14, 16, 19, 20], "delimiter_callback": [7, 11, 14, 16, 19, 20], "print_mappingnod": [7, 11, 14, 19, 20], "print_multisetnod": [7, 11, 14, 19, 20], "multisetnod": [7, 9, 10, 14, 22, 24], "print_containernod": [7, 20], "fallback": [7, 20], "xml": [7, 20, 22, 24], "xmlelement": [7, 20, 22, 24], "print_keyvaluepairnod": [7, 11, 19, 20], "keyvaluepairnod": [7, 10, 11, 14, 19, 20, 22, 23, 24], "dump": 7, "print_xmlel": [7, 19], "print_listnod": [7, 11, 14, 19, 20], "stringedit": [7, 19, 20, 22, 23, 24], "stringnod": [7, 11, 14, 19, 20, 22, 23, 24], "python_obj": [7, 14], "force_leaf_nod": 7, "unsupport": [7, 14], "onlin": [8, 21], "metric": [8, 21], "improv": [8, 15, 21], "converg": [8, 15, 21], "optim": [8, 9, 15, 21], "discov": [8, 9, 21], "from_seq": 8, "to_seq": 8, "target": 8, "matrix": [8, 9, 17], "diagon": 8, "cell": [8, 17], "reconstruct": [8, 23], "updat": [8, 9, 17, 18], "observ": 8, "monoton": [8, 15], "abstractcompoundedit": [8, 10, 14, 16, 19, 22, 24], "incomplet": 8, "canon": [8, 21], "solv": [9, 15, 21], "variant": 9, "much": 9, "code": [9, 12], "nearli": 9, "karp": 9, "weight": [9, 21], "bipartit": [9, 21], "karp78": 9, "find": [9, 10, 15, 25], "minim": 9, "part": 9, "wai": 9, "scipi": [9, 17], "asymptot": 9, "inferior": 9, "superior": 9, "compil": 9, "compon": [9, 23], "interest": 9, "d": [9, 17], "edge_weight": 9, "97": 9, "99": 9, "101": 9, "103": 9, "105": 9, "from_nodes_index": 9, "matched_to_nodes_index": 9, "matched_edge_weight": 9, "16": 9, "18": 9, "richard": 9, "m": [9, 21], "o": 9, "mn": 9, "log": 9, "1978": 9, "cost_bar": 9, "cost_star": 9, "_from_iter": 9, "signatur": 9, "_hash": 9, "don": 9, "__hash__": 9, "hashabl": 9, "compat": [9, 13], "ought": 9, "freedom": 9, "built": 9, "effect": [9, 17, 21], "present": [9, 17], "shallow": [9, 17], "differ": [9, 15, 23], "difference_upd": 9, "intersection_upd": 9, "isdisjoint": 9, "issubset": 9, "report": 9, "issuperset": 9, "symmetric_differ": 9, "symmetr": 9, "exactli": 9, "symmetric_difference_upd": 9, "construct_edg": 9, "sorted_neighbor": 9, "matcher": 9, "direct": 9, "overridden": [9, 16], "flip_direct": 9, "path_to": 9, "from_any_of": 9, "is_speci": 9, "head": [9, 18], "tail": 9, "get_edg": 9, "atop": [9, 19], "select": 9, "graph": [9, 21, 22], "make_distinct": [9, 22, 24], "Then": 9, "multisetedit": [9, 22, 24], "dens": 9, "lazili": 9, "realiz": 9, "partwai": 9, "better": 9, "linear_sum_assign": 9, "faster": 9, "retain": 9, "ever": 9, "free_destin": 9, "free_sourc": 9, "min_valu": 9, "max_valu": 9, "dtype": 9, "numpi": 9, "w": [9, 17], "second": 9, "rest": 9, "nativ": [9, 17], "larger": [9, 10], "64": 9, "63": 9, "matched_to_node_index": 9, "boolean": 9, "dictnod": [10, 14, 22, 23, 24], "latter": [10, 22], "conta": 10, "from_set": 10, "to_set": 10, "unord": [10, 22], "weightedbipartitematch": [10, 22, 24], "These": 10, "typic": [10, 16, 18], "nor": 10, "enforc": 10, "signific": 10, "amount": 10, "abstractedit": [10, 14, 16, 19, 22, 24], "appl": 11, "print_boolnod": 11, "boolnod": [11, 22, 24], "print_floatnod": 11, "floatnod": [11, 22, 24], "print_integernod": 11, "integernod": [11, 22, 23, 24], "print_plistnod": 11, "write_obj": [11, 20], "sever": [12, 22], "reason": [12, 21, 22], "toggl": 12, "ansi": 12, "color": 12, "logic": 12, "pretti": 12, "concurr": 12, "statu": [12, 13], "tqdm": [12, 13], "html": [12, 22, 24], "rather": [12, 23], "default_print": [12, 22, 23, 24], "sy": [12, 13, 17], "stdout": [12, 13, 23], "fore": 12, "ansifor": 12, "ansiback": 12, "style": [12, 16], "ansistyl": 12, "termin": 12, "foreground": 12, "background": 12, "bg_color": 12, "foreground_color": 12, "dim": 12, "end_cod": 12, "is_appli": 12, "start_cod": 12, "combining_mark": 12, "combin": 12, "written": [12, 13], "__enter__": [12, 17], "interact": [12, 17, 19, 23], "flush": [12, 13], "buffer": [12, 13], "isatti": [12, 13], "tty": 12, "marks_str": 12, "raw_writ": 12, "modif": 12, "get_back": 12, "get_for": 12, "titl": 12, "out_stream": [12, 13], "ansi_color": 12, "quiet": [12, 13], "progress": [12, 22, 24], "suppress": [12, 13], "fileno": [12, 13], "along": [12, 13], "html_element": 12, "element_nam": 12, "inlin": 12, "step": [12, 23], "indent_str": 12, "four": [12, 17, 23], "space": [12, 15], "mode": [12, 13], "ellipsi": [12, 13], "anystr": [12, 13], "readlin": [12, 13], "limit": [12, 13], "seek": [12, 13], "whenc": [12, 13], "seekabl": [12, 13], "status_stream": [12, 13], "textio": [12, 13], "strike": 12, "tell": [12, 13], "trang": [12, 13], "truncat": [12, 13], "under_plu": 12, "underneath": 12, "writabl": [12, 13], "write_raw": [12, 13], "stderr": [12, 13], "writelin": [12, 13], "fake": 12, "emit": 12, "statuswrit": [12, 22, 24], "subset": 12, "full": 13, "lifetim": 13, "control": 13, "block": 13, "lost": 13, "memori": [14, 17, 22], "document": [14, 18, 23], "jsondictformatt": [14, 16, 22, 24], "jsonlistformatt": [14, 16, 22, 24], "class_nam": 14, "attr": 14, "from_obj": 14, "fixedkeydictnod": [14, 22, 24], "print_pyobj": 14, "print_pyobjattribut": 14, "red": 14, "light": 14, "print_pyobjfixedattribut": 14, "from_py_obj": 14, "to_py_obj": 14, "reveal": 15, "100": 15, "200": 15, "50": 15, "1000": 15, "60": 15, "500": 15, "guarante": 15, "toward": 15, "conform": 15, "150": 15, "160": 15, "155": 15, "153": 15, "about": 15, "rate": 15, "goal": 15, "computation": 15, "fewest": 15, "__bool__": 15, "good": 15, "greatli": 15, "speed": 15, "li": 15, "outsid": 15, "best_match": 15, "thu": 15, "feasibl": 15, "goal_test": 15, "remove_best": 15, "therefor": [15, 21, 23], "reach": 15, "your": 15, "produc": [15, 23], "interleav": 16, "counter": 17, "__add__": 17, "count": 17, "abbb": 17, "bcc": 17, "__and__": 17, "__delitem__": 17, "elem": 17, "miss": 17, "__iadd__": 17, "inplac": 17, "__iand__": 17, "__ior__": 17, "maximum": 17, "__isub__": 17, "abbbc": 17, "bccd": 17, "__missing__": 17, "__neg__": 17, "strip": 17, "flip": 17, "sign": 17, "__or__": 17, "__pos__": 17, "__sub__": 17, "_keep_posit": 17, "intern": [17, 25], "abcabc": 17, "knuth": 17, "prime": 17, "factor": 17, "1836": 17, "17": 17, "prime_factor": 17, "product": 17, "loop": 17, "multipli": 17, "fromkei": 17, "v": 17, "view": 17, "most_common": 17, "common": 17, "abracadabra": 17, "r": 17, "popitem": 17, "lifo": 17, "setdefault": 17, "replac": [17, 22, 24], "reduc": 17, "below": 17, "witch": 17, "watch": 17, "h": 17, "minu": 17, "ordereddict": 17, "rememb": 17, "encount": 17, "And": 17, "gallahad": 17, "od": 17, "move_to_end": 17, "move": 17, "fifo": 17, "num_row": 17, "num_col": 17, "default_valu": 17, "mutablemap": 17, "spars": 17, "matric": 17, "homogen": 17, "sparsematrixrow": 17, "row_num": 17, "col": 17, "indexerror": 17, "content": 17, "approxim": 17, "hold": 17, "shape": 17, "lack": 17, "footprint": 17, "matrox": 17, "num_filled_el": 17, "explicitli": 17, "prefix": 17, "suffix": 17, "temporari": 17, "clean": 17, "tmp": 17, "var": 17, "folder": 17, "hrvzrctx6tg2_j17gb6wckph0000gn": 17, "tmpkza5fvr_": 17, "__exit__": 17, "traceback": 17, "filenam": 17, "hasattr": 17, "measur": 17, "central": 18, "inform": 18, "setup": 18, "py": 18, "dev_build": [18, 22, 24], "coincid": 18, "releas": 18, "deploi": 18, "pypi": 18, "git": 18, "branch": 18, "__version__": [18, 22, 24], "major": 18, "minor": 18, "revis": 18, "version_str": [18, 22, 24], "codebas": 18, "ref": 18, "q": 18, "parser": 19, "etre": 19, "elementtre": 19, "xhtml": 19, "tag": 19, "attrib": 19, "attrib_edit": 19, "child_edit": 19, "tag_edit": 19, "text_edit": 19, "path_or_element_tre": 19, "vnd": 20, "has_newlin": 20, "polynomi": 21, "tractabl": 21, "restrict": 21, "class": [21, 22, 23, 24], "dag": 21, "forest": 21, "constraint": 21, "exploit": 21, "particular": 21, "challeng": 21, "extant": 21, "util": [21, 23, 24], "take": 21, "zab": 21, "woo": 21, "foobar": 21, "tool": 21, "canonic": 21, "per": 21, "tradit": 21, "cat": 21, "jq": 21, "u": 21, "Not": 21, "entir": 21, "particularli": 21, "larg": 21, "break": 21, "wagner": 21, "fischer": 21, "destin": 21, "http": 21, "en": 21, "wikipedia": 21, "org": 21, "wiki": 21, "graph_isomorphism_problem": 21, "directed_acyclic_graph": 21, "online_algorithm": 21, "constructive_proof": 21, "levenshtein_dist": [21, 22, 24], "e2": 21, "80": 21, "93fischer_algorithm": 21, "assignment_problem": 21, "np": 21, "purpos": 22, "merg": 22, "csv": [22, 24], "portmanteau": 22, "graftag": 22, "togeth": 22, "grow": 22, "why": [22, 24], "focus": 22, "instruct": 22, "github": 22, "page": 22, "footnot": 22, "constantcostedit": [22, 24], "editcollect": [22, 24], "editsequ": [22, 24], "filetypewatch": [22, 24], "fixedkeydictnodeedit": [22, 24], "keyvaluepairedit": [22, 24], "nullnod": [22, 24], "possibleedit": [22, 24], "treenodemeta": [22, 24], "explode_edit": [22, 24], "get_filetyp": [22, 24], "string_edit_dist": [22, 24], "boundedcompar": [22, 24], "constantbound": [22, 24], "infin": [22, 24], "min_bound": [22, 24], "repeat_until_tighten": [22, 24], "csvformatt": [22, 24], "csvnode": [22, 24], "csvrow": [22, 24], "csvrowformatt": [22, 24], "closebracket": [22, 24], "closeparen": [22, 24], "collectioninfo": [22, 24], "comma": [22, 24], "fixedsizecollect": [22, 24], "floattoken": [22, 24], "functioncal": [22, 24], "identifiertoken": [22, 24], "integertoken": [22, 24], "numerictoken": [22, 24], "openbracket": [22, 24], "openparen": [22, 24], "operatortoken": [22, 24], "pairedendtoken": [22, 24], "pairedstarttoken": [22, 24], "pairedtoken": [22, 24], "parenthesi": [22, 24], "parseerror": [22, 24], "stringtoken": [22, 24], "token": [22, 24], "get_memb": [22, 24], "infix_to_rpn": [22, 24], "fibonacci": [22, 24], "heapnod": [22, 24], "maxfibonacciheap": [22, 24], "reversedcompar": [22, 24], "basicformatt": [22, 24], "json5": [22, 24], "jsonstringformatt": [22, 24], "edg": [22, 24], "matchingfromnod": [22, 24], "matchingnod": [22, 24], "matchingtonod": [22, 24], "pathset": [22, 24], "queueelement": [22, 24], "sortededg": [22, 24], "weightedbipartitematcherpartial_implement": [22, 24], "get_dtyp": [22, 24], "min_weight_bipartite_match": [22, 24], "plist": [22, 24], "plistformatt": [22, 24], "plistnod": [22, 24], "plistsequenceformatt": [22, 24], "ansicontext": [22, 24], "combiningmarkcontext": [22, 24], "combiningmarkwrit": [22, 24], "htmlansicontext": [22, 24], "htmlprinter": [22, 24], "nullansicontext": [22, 24], "rawwrit": [22, 24], "only_ansi": [22, 24], "pydiff": [22, 23, 24], "pydictformatt": [22, 24], "pydiffformatt": [22, 24], "pylistformatt": [22, 24], "pyobj": [22, 24], "pyobjattribut": [22, 24], "pyobjedit": [22, 24], "pyobjfixedattribut": [22, 24], "pyobjformatt": [22, 24], "print_diff": [22, 23, 24], "fixedlengthsequenceedit": [22, 24], "orderedcount": [22, 24], "sparsematrix": [22, 24], "tempfil": [22, 24], "getsizeof": [22, 24], "largest": [22, 24], "git_branch": [22, 24], "xmlchildformatt": [22, 24], "xmlelementattribformatt": [22, 24], "xmlelementchildren": [22, 24], "xmlelementedit": [22, 24], "xmlelementobj": [22, 24], "xmlformatt": [22, 24], "xmlstringformatt": [22, 24], "yamldictformatt": [22, 24], "yamlformatt": [22, 23, 24], "yamlkeyvaluepairformatt": [22, 24], "yamllistformatt": [22, 24], "yamlstringformatt": [22, 24], "standard": 23, "from_tre": 23, "to_tre": 23, "maintain": 23, "characterist": 23, "instanceof": 23, "too": 23, "editeddictnod": 23, "editedkeyvaluepairnod": 23, "editedstringnod": 23, "editedlistnod": 23, "editedintegernod": 23, "chose": 23, "did": 23, "syntax": 23, "independ": 23, "thank": 23, "abil": 23, "quickli": 23, "obj1": 23, "obj2": 23, "baz": 23, "bak": 23, "ba": 23, "z": 23, "graphtag": 25, "try": 25, "fail": 25, "warn": 25}, "objects": {"": [[1, 0, 0, "-", "graphtage"]], "graphtage": [[1, 1, 1, "", "AbstractCompoundEdit"], [1, 1, 1, "", "AbstractEdit"], [1, 1, 1, "", "BoolNode"], [1, 1, 1, "", "BuildOptions"], [1, 1, 1, "", "CompoundEdit"], [1, 1, 1, "", "ConstantCostEdit"], [1, 1, 1, "", "ContainerNode"], [1, 1, 1, "", "DictNode"], [1, 1, 1, "", "Edit"], [1, 1, 1, "", "EditCollection"], [1, 1, 1, "", "EditSequence"], [1, 1, 1, "", "EditedTreeNode"], [1, 1, 1, "", "Filetype"], [1, 1, 1, "", "FiletypeWatcher"], [1, 1, 1, "", "FixedKeyDictNode"], [1, 1, 1, "", "FixedKeyDictNodeEdit"], [1, 1, 1, "", "FloatNode"], [1, 1, 1, "", "GraphtageFormatter"], [1, 1, 1, "", "Insert"], [1, 1, 1, "", "IntegerNode"], [1, 1, 1, "", "KeyValuePairEdit"], [1, 1, 1, "", "KeyValuePairNode"], [1, 1, 1, "", "LeafNode"], [1, 1, 1, "", "ListNode"], [1, 1, 1, "", "MappingNode"], [1, 1, 1, "", "Match"], [1, 1, 1, "", "MultiSetNode"], [1, 1, 1, "", "NullNode"], [1, 1, 1, "", "PossibleEdits"], [1, 1, 1, "", "Remove"], [1, 1, 1, "", "Replace"], [1, 1, 1, "", "StringEdit"], [1, 1, 1, "", "StringFormatter"], [1, 1, 1, "", "StringNode"], [1, 1, 1, "", "TreeNode"], [1, 1, 1, "", "TreeNodeMeta"], [2, 0, 0, "-", "bounds"], [3, 0, 0, "-", "csv"], [1, 5, 1, "", "explode_edits"], [4, 0, 0, "-", "expressions"], [5, 0, 0, "-", "fibonacci"], [6, 0, 0, "-", "formatter"], [1, 5, 1, "", "get_filetype"], [7, 0, 0, "-", "json"], [8, 0, 0, "-", "levenshtein"], [9, 0, 0, "-", "matching"], [10, 0, 0, "-", "multiset"], [11, 0, 0, "-", "plist"], [12, 0, 0, "-", "printer"], [13, 0, 0, "-", "progress"], [14, 0, 0, "-", "pydiff"], [15, 0, 0, "-", "search"], [16, 0, 0, "-", "sequences"], [1, 5, 1, "", "string_edit_distance"], [17, 0, 0, "-", "utils"], [18, 0, 0, "-", "version"], [19, 0, 0, "-", "xml"], [20, 0, 0, "-", "yaml"]], "graphtage.AbstractCompoundEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.AbstractEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.BoolNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.BuildOptions": [[1, 2, 1, "", "__getattr__"], [1, 2, 1, "", "__init__"]], "graphtage.CompoundEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.ConstantCostEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.ContainerNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.DictNode": [[1, 2, 1, "", "__contains__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "items"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "make_key_value_pair_node"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.Edit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "id0", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "id1", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.EditCollection": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.EditSequence": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.EditedTreeNode": [[1, 2, 1, "", "__init__"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_cost"]], "graphtage.Filetype": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "build_tree"], [1, 2, 1, "", "build_tree_handling_errors"], [1, 2, 1, "", "get_default_formatter"]], "graphtage.FiletypeWatcher": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__instancecheck__"], [1, 2, 1, "", "__subclasscheck__"], [1, 2, 1, "", "_abc_caches_clear"], [1, 2, 1, "", "_abc_registry_clear"], [1, 2, 1, "", "_dump_registry"], [1, 2, 1, "", "mro"], [1, 2, 1, "", "register"]], "graphtage.FixedKeyDictNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__len__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "items"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "make_key_value_pair_node"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.FixedKeyDictNodeEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 4, 1, "", "sequence"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.FloatNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.GraphtageFormatter": [[1, 3, 1, "", "DEFAULT_INSTANCE"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "get_formatter"], [1, 3, 1, "", "is_partial"], [1, 3, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 4, 1, "", "root"], [1, 3, 1, "", "sub_format_types"], [1, 3, 1, "", "sub_formatters"]], "graphtage.Insert": [[1, 3, 1, "", "INSERT_STRING"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 4, 1, "", "insert_into"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "to_insert"], [1, 4, 1, "", "valid"]], "graphtage.IntegerNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.KeyValuePairEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.KeyValuePairNode": [[1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.LeafNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.ListNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__len__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.MappingNode": [[1, 2, 1, "", "__contains__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "items"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "make_key_value_pair_node"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.Match": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.MultiSetNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.NullNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.PossibleEdits": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "best_possibility"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.Remove": [[1, 3, 1, "", "REMOVE_STRING"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.Replace": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.StringEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.StringFormatter": [[1, 3, 1, "", "DEFAULT_INSTANCE"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "context"], [1, 2, 1, "", "escape"], [1, 2, 1, "", "get_formatter"], [1, 3, 1, "", "is_partial"], [1, 3, 1, "", "is_quoted"], [1, 3, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_StringEdit"], [1, 2, 1, "", "print_StringNode"], [1, 4, 1, "", "root"], [1, 3, 1, "", "sub_format_types"], [1, 3, 1, "", "sub_formatters"], [1, 2, 1, "", "write_char"], [1, 2, 1, "", "write_end_quote"], [1, 2, 1, "", "write_start_quote"]], "graphtage.StringNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.TreeNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.TreeNodeMeta": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__instancecheck__"], [1, 2, 1, "", "__subclasscheck__"], [1, 2, 1, "", "_abc_caches_clear"], [1, 2, 1, "", "_abc_registry_clear"], [1, 2, 1, "", "_dump_registry"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "mro"], [1, 2, 1, "", "register"]], "graphtage.bounds": [[2, 1, 1, "", "Bounded"], [2, 1, 1, "", "BoundedComparator"], [2, 1, 1, "", "ConstantBound"], [2, 1, 1, "", "Infinity"], [2, 3, 1, "", "NEGATIVE_INFINITY"], [2, 3, 1, "", "POSITIVE_INFINITY"], [2, 1, 1, "", "Range"], [2, 5, 1, "", "make_distinct"], [2, 5, 1, "", "min_bounded"], [2, 5, 1, "", "repeat_until_tightened"], [2, 5, 1, "", "sort"]], "graphtage.bounds.Bounded": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "bounds"], [2, 2, 1, "", "tighten_bounds"]], "graphtage.bounds.BoundedComparator": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "__lt__"], [2, 3, 1, "", "bounded"]], "graphtage.bounds.ConstantBound": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "bounds"], [2, 2, 1, "", "tighten_bounds"]], "graphtage.bounds.Infinity": [[2, 2, 1, "", "__init__"], [2, 4, 1, "", "positive"]], "graphtage.bounds.Range": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "definitive"], [2, 2, 1, "", "dominates"], [2, 4, 1, "", "finite"], [2, 2, 1, "", "intersect"], [2, 3, 1, "", "lower_bound"], [2, 2, 1, "", "to_interval"], [2, 3, 1, "", "upper_bound"]], "graphtage.csv": [[3, 1, 1, "", "CSV"], [3, 1, 1, "", "CSVFormatter"], [3, 1, 1, "", "CSVNode"], [3, 1, 1, "", "CSVRow"], [3, 1, 1, "", "CSVRowFormatter"], [3, 1, 1, "", "CSVRows"], [3, 5, 1, "", "build_tree"]], "graphtage.csv.CSV": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "build_tree"], [3, 2, 1, "", "build_tree_handling_errors"], [3, 2, 1, "", "get_default_formatter"]], "graphtage.csv.CSVFormatter": [[3, 3, 1, "", "DEFAULT_INSTANCE"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__new__"], [3, 2, 1, "", "get_formatter"], [3, 3, 1, "", "is_partial"], [3, 3, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_LeafNode"], [3, 4, 1, "", "root"], [3, 3, 1, "", "sub_format_types"], [3, 3, 1, "", "sub_formatters"]], "graphtage.csv.CSVNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__len__"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 3, 1, "", "child_indexes"], [3, 2, 1, "", "children"], [3, 4, 1, "", "container_type"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 3, 1, "", "edit_modifiers"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.csv.CSVRow": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__len__"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 3, 1, "", "child_indexes"], [3, 2, 1, "", "children"], [3, 4, 1, "", "container_type"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 3, 1, "", "edit_modifiers"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.csv.CSVRowFormatter": [[3, 3, 1, "", "DEFAULT_INSTANCE"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__new__"], [3, 2, 1, "", "edit_print"], [3, 2, 1, "", "get_formatter"], [3, 3, 1, "", "is_partial"], [3, 2, 1, "", "item_newline"], [3, 2, 1, "", "items_indent"], [3, 3, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_CSVRow"], [3, 2, 1, "", "print_SequenceNode"], [3, 4, 1, "", "root"], [3, 3, 1, "", "sub_format_types"], [3, 3, 1, "", "sub_formatters"]], "graphtage.csv.CSVRows": [[3, 3, 1, "", "DEFAULT_INSTANCE"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__new__"], [3, 2, 1, "", "edit_print"], [3, 2, 1, "", "get_formatter"], [3, 3, 1, "", "is_partial"], [3, 2, 1, "", "item_newline"], [3, 2, 1, "", "items_indent"], [3, 3, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_CSVNode"], [3, 2, 1, "", "print_SequenceNode"], [3, 4, 1, "", "root"], [3, 3, 1, "", "sub_format_types"], [3, 3, 1, "", "sub_formatters"]], "graphtage.expressions": [[4, 1, 1, "", "CloseBracket"], [4, 1, 1, "", "CloseParen"], [4, 1, 1, "", "CollectionInfo"], [4, 1, 1, "", "Comma"], [4, 3, 1, "", "DEFAULT_GLOBALS"], [4, 1, 1, "", "Expression"], [4, 1, 1, "", "FixedSizeCollection"], [4, 1, 1, "", "FloatToken"], [4, 1, 1, "", "FunctionCall"], [4, 3, 1, "", "IDENTIFIER_BYTES"], [4, 1, 1, "", "IdentifierToken"], [4, 1, 1, "", "IntegerToken"], [4, 1, 1, "", "NumericToken"], [4, 3, 1, "", "OPERATORS_BY_NAME"], [4, 1, 1, "", "OpenBracket"], [4, 1, 1, "", "OpenParen"], [4, 1, 1, "", "Operator"], [4, 1, 1, "", "OperatorToken"], [4, 1, 1, "", "PairedEndToken"], [4, 1, 1, "", "PairedStartToken"], [4, 1, 1, "", "PairedToken"], [4, 1, 1, "", "Parenthesis"], [4, 1, 1, "", "ParseError"], [4, 1, 1, "", "StringToken"], [4, 1, 1, "", "Token"], [4, 1, 1, "", "Tokenizer"], [4, 5, 1, "", "get_member"], [4, 5, 1, "", "infix_to_rpn"], [4, 5, 1, "", "parse"], [4, 5, 1, "", "tokenize"]], "graphtage.expressions.CloseBracket": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "start_token_type"]], "graphtage.expressions.CloseParen": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "start_token_type"]], "graphtage.expressions.CollectionInfo": [[4, 2, 1, "", "__init__"]], "graphtage.expressions.Comma": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.Expression": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "eval"], [4, 2, 1, "", "get_value"]], "graphtage.expressions.FixedSizeCollection": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "container_type"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "size"]], "graphtage.expressions.FloatToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "value"]], "graphtage.expressions.FunctionCall": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 3, 1, "", "op"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.IdentifierToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.IntegerToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "value"]], "graphtage.expressions.NumericToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "value"]], "graphtage.expressions.OpenBracket": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "discard"], [4, 3, 1, "", "is_list"], [4, 3, 1, "", "name"], [4, 3, 1, "", "offset"], [4, 3, 1, "", "op"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.OpenParen": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "discard"], [4, 3, 1, "", "name"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.Operator": [[4, 3, 1, "", "ADDITION"], [4, 3, 1, "", "BITWISE_AND"], [4, 3, 1, "", "BITWISE_LEFT_SHIFT"], [4, 3, 1, "", "BITWISE_NOT"], [4, 3, 1, "", "BITWISE_OR"], [4, 3, 1, "", "BITWISE_RIGHT_SHIFT"], [4, 3, 1, "", "BITWISE_XOR"], [4, 3, 1, "", "DIVISION"], [4, 3, 1, "", "EQUALS"], [4, 3, 1, "", "FUNCTION_CALL"], [4, 3, 1, "", "GETITEM"], [4, 3, 1, "", "GREATER_THAN"], [4, 3, 1, "", "GREATER_THAN_EQUAL"], [4, 3, 1, "", "IN"], [4, 3, 1, "", "INT_DIVISION"], [4, 3, 1, "", "LESS_THAN"], [4, 3, 1, "", "LESS_THAN_EQUAL"], [4, 3, 1, "", "LOGICAL_AND"], [4, 3, 1, "", "LOGICAL_NOT"], [4, 3, 1, "", "LOGICAL_OR"], [4, 3, 1, "", "MEMBER_ACCESS"], [4, 3, 1, "", "MULTIPLICATION"], [4, 3, 1, "", "NOT_EQUAL"], [4, 3, 1, "", "REMAINDER"], [4, 3, 1, "", "SUBTRACTION"], [4, 3, 1, "", "TERNARY_CONDITIONAL"], [4, 3, 1, "", "TERNARY_ELSE"], [4, 3, 1, "", "UNARY_MINUS"], [4, 3, 1, "", "UNARY_PLUS"], [4, 2, 1, "", "__init__"], [4, 3, 1, "", "arity"], [4, 3, 1, "", "execute"], [4, 3, 1, "", "expand"], [4, 3, 1, "", "left_associative"], [4, 3, 1, "", "priority"], [4, 3, 1, "", "token"]], "graphtage.expressions.OperatorToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 3, 1, "", "op"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.PairedEndToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"], [4, 3, 1, "", "start_token_type"]], "graphtage.expressions.PairedStartToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "discard"], [4, 3, 1, "", "name"]], "graphtage.expressions.PairedToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"]], "graphtage.expressions.Parenthesis": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.ParseError": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "args"], [4, 2, 1, "", "with_traceback"]], "graphtage.expressions.StringToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.Token": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.Tokenizer": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__iter__"], [4, 2, 1, "", "has_next"], [4, 2, 1, "", "next"], [4, 2, 1, "", "peek"], [4, 3, 1, "", "prev_token"]], "graphtage.fibonacci": [[5, 1, 1, "", "FibonacciHeap"], [5, 1, 1, "", "HeapNode"], [5, 1, 1, "", "MaxFibonacciHeap"], [5, 1, 1, "", "ReversedComparator"]], "graphtage.fibonacci.FibonacciHeap": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "clear"], [5, 2, 1, "", "decrease_key"], [5, 3, 1, "", "key"], [5, 4, 1, "", "min_node"], [5, 2, 1, "", "nodes"], [5, 2, 1, "", "peek"], [5, 2, 1, "", "pop"], [5, 2, 1, "", "push"], [5, 2, 1, "", "remove"]], "graphtage.fibonacci.HeapNode": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "add_child"], [5, 3, 1, "", "child"], [5, 4, 1, "", "children"], [5, 3, 1, "", "degree"], [5, 3, 1, "", "deleted"], [5, 3, 1, "", "item"], [5, 3, 1, "", "key"], [5, 3, 1, "", "left"], [5, 3, 1, "", "mark"], [5, 3, 1, "", "parent"], [5, 2, 1, "", "remove_child"], [5, 3, 1, "", "right"], [5, 4, 1, "", "siblings"]], "graphtage.fibonacci.MaxFibonacciHeap": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "clear"], [5, 2, 1, "", "decrease_key"], [5, 3, 1, "", "key"], [5, 4, 1, "", "min_node"], [5, 2, 1, "", "nodes"], [5, 2, 1, "", "peek"], [5, 2, 1, "", "pop"], [5, 2, 1, "", "push"], [5, 2, 1, "", "remove"]], "graphtage.fibonacci.ReversedComparator": [[5, 2, 1, "", "__init__"]], "graphtage.formatter": [[6, 1, 1, "", "BasicFormatter"], [6, 1, 1, "", "Formatter"], [6, 1, 1, "", "FormatterChecker"], [6, 5, 1, "", "get_formatter"]], "graphtage.formatter.BasicFormatter": [[6, 3, 1, "", "DEFAULT_INSTANCE"], [6, 2, 1, "", "__init__"], [6, 2, 1, "", "__new__"], [6, 2, 1, "", "get_formatter"], [6, 3, 1, "", "is_partial"], [6, 3, 1, "", "parent"], [6, 2, 1, "", "print"], [6, 4, 1, "", "root"], [6, 3, 1, "", "sub_format_types"], [6, 3, 1, "", "sub_formatters"]], "graphtage.formatter.Formatter": [[6, 3, 1, "", "DEFAULT_INSTANCE"], [6, 2, 1, "", "__init__"], [6, 2, 1, "", "__new__"], [6, 2, 1, "", "get_formatter"], [6, 3, 1, "", "is_partial"], [6, 3, 1, "", "parent"], [6, 2, 1, "", "print"], [6, 4, 1, "", "root"], [6, 3, 1, "", "sub_format_types"], [6, 3, 1, "", "sub_formatters"]], "graphtage.formatter.FormatterChecker": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "__instancecheck__"], [6, 2, 1, "", "__subclasscheck__"], [6, 2, 1, "", "_abc_caches_clear"], [6, 2, 1, "", "_abc_registry_clear"], [6, 2, 1, "", "_dump_registry"], [6, 2, 1, "", "mro"], [6, 2, 1, "", "register"]], "graphtage.json": [[7, 1, 1, "", "JSON"], [7, 1, 1, "", "JSON5"], [7, 1, 1, "", "JSONDictFormatter"], [7, 1, 1, "", "JSONFormatter"], [7, 1, 1, "", "JSONListFormatter"], [7, 1, 1, "", "JSONStringFormatter"], [7, 5, 1, "", "build_tree"]], "graphtage.json.JSON": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "build_tree"], [7, 2, 1, "", "build_tree_handling_errors"], [7, 2, 1, "", "get_default_formatter"]], "graphtage.json.JSON5": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "build_tree"], [7, 2, 1, "", "build_tree_handling_errors"], [7, 2, 1, "", "get_default_formatter"]], "graphtage.json.JSONDictFormatter": [[7, 3, 1, "", "DEFAULT_INSTANCE"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__new__"], [7, 2, 1, "", "edit_print"], [7, 2, 1, "", "get_formatter"], [7, 3, 1, "", "is_partial"], [7, 2, 1, "", "item_newline"], [7, 2, 1, "", "items_indent"], [7, 3, 1, "", "parent"], [7, 2, 1, "", "print"], [7, 2, 1, "", "print_MappingNode"], [7, 2, 1, "", "print_MultiSetNode"], [7, 2, 1, "", "print_SequenceNode"], [7, 4, 1, "", "root"], [7, 3, 1, "", "sub_format_types"], [7, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONFormatter": [[7, 3, 1, "", "DEFAULT_INSTANCE"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__new__"], [7, 2, 1, "", "get_formatter"], [7, 3, 1, "", "is_partial"], [7, 3, 1, "", "parent"], [7, 2, 1, "", "print"], [7, 2, 1, "", "print_ContainerNode"], [7, 2, 1, "", "print_KeyValuePairNode"], [7, 2, 1, "", "print_LeafNode"], [7, 2, 1, "", "print_XMLElement"], [7, 4, 1, "", "root"], [7, 3, 1, "", "sub_format_types"], [7, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONListFormatter": [[7, 3, 1, "", "DEFAULT_INSTANCE"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__new__"], [7, 2, 1, "", "edit_print"], [7, 2, 1, "", "get_formatter"], [7, 3, 1, "", "is_partial"], [7, 2, 1, "", "item_newline"], [7, 2, 1, "", "items_indent"], [7, 3, 1, "", "parent"], [7, 2, 1, "", "print"], [7, 2, 1, "", "print_ListNode"], [7, 2, 1, "", "print_SequenceNode"], [7, 4, 1, "", "root"], [7, 3, 1, "", "sub_format_types"], [7, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONStringFormatter": [[7, 3, 1, "", "DEFAULT_INSTANCE"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__new__"], [7, 2, 1, "", "context"], [7, 2, 1, "", "escape"], [7, 2, 1, "", "get_formatter"], [7, 3, 1, "", "is_partial"], [7, 3, 1, "", "is_quoted"], [7, 3, 1, "", "parent"], [7, 2, 1, "", "print"], [7, 2, 1, "", "print_StringEdit"], [7, 2, 1, "", "print_StringNode"], [7, 4, 1, "", "root"], [7, 3, 1, "", "sub_format_types"], [7, 3, 1, "", "sub_formatters"], [7, 2, 1, "", "write_char"], [7, 2, 1, "", "write_end_quote"], [7, 2, 1, "", "write_start_quote"]], "graphtage.levenshtein": [[8, 1, 1, "", "EditDistance"], [8, 5, 1, "", "levenshtein_distance"]], "graphtage.levenshtein.EditDistance": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "__iter__"], [8, 2, 1, "", "__lt__"], [8, 2, 1, "", "bounds"], [8, 2, 1, "", "edits"], [8, 3, 1, "", "from_node"], [8, 2, 1, "", "has_non_zero_cost"], [8, 3, 1, "", "initial_bounds"], [8, 2, 1, "", "is_complete"], [8, 2, 1, "", "on_diff"], [8, 2, 1, "", "print"], [8, 4, 1, "", "sequence"], [8, 2, 1, "", "tighten_bounds"], [8, 4, 1, "", "valid"]], "graphtage.matching": [[9, 1, 1, "", "Edge"], [9, 1, 1, "", "Matching"], [9, 1, 1, "", "MatchingFromNode"], [9, 1, 1, "", "MatchingNode"], [9, 1, 1, "", "MatchingToNode"], [9, 1, 1, "", "PathSet"], [9, 1, 1, "", "QueueElement"], [9, 1, 1, "", "SortedEdges"], [9, 1, 1, "", "WeightedBipartiteMatcher"], [9, 1, 1, "", "WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION"], [9, 5, 1, "", "get_dtype"], [9, 5, 1, "", "min_weight_bipartite_matching"]], "graphtage.matching.Edge": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "bounds"], [9, 4, 1, "", "cost_bar"], [9, 4, 1, "", "cost_star"], [9, 2, 1, "", "tighten_bounds"]], "graphtage.matching.Matching": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "_from_iterable"], [9, 2, 1, "", "_hash"], [9, 2, 1, "", "add"], [9, 2, 1, "", "bounds"], [9, 2, 1, "", "clear"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "difference"], [9, 2, 1, "", "difference_update"], [9, 2, 1, "", "discard"], [9, 2, 1, "", "intersection"], [9, 2, 1, "", "intersection_update"], [9, 2, 1, "", "isdisjoint"], [9, 2, 1, "", "issubset"], [9, 2, 1, "", "issuperset"], [9, 2, 1, "", "pop"], [9, 2, 1, "", "remove"], [9, 2, 1, "", "symmetric_difference"], [9, 2, 1, "", "symmetric_difference_update"], [9, 2, 1, "", "tighten_bounds"], [9, 2, 1, "", "union"], [9, 2, 1, "", "update"]], "graphtage.matching.MatchingFromNode": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "construct_edges"], [9, 2, 1, "", "edges"], [9, 4, 1, "", "sorted_neighbors"]], "graphtage.matching.MatchingNode": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "construct_edges"], [9, 2, 1, "", "edges"]], "graphtage.matching.MatchingToNode": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "construct_edges"], [9, 2, 1, "", "edges"]], "graphtage.matching.PathSet": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "_from_iterable"], [9, 2, 1, "", "_hash"], [9, 2, 1, "", "add"], [9, 2, 1, "", "bounds"], [9, 2, 1, "", "clear"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "difference"], [9, 2, 1, "", "difference_update"], [9, 2, 1, "", "discard"], [9, 2, 1, "", "intersection"], [9, 2, 1, "", "intersection_update"], [9, 2, 1, "", "isdisjoint"], [9, 2, 1, "", "issubset"], [9, 2, 1, "", "issuperset"], [9, 2, 1, "", "path_to"], [9, 2, 1, "", "pop"], [9, 2, 1, "", "remove"], [9, 2, 1, "", "symmetric_difference"], [9, 2, 1, "", "symmetric_difference_update"], [9, 2, 1, "", "tighten_bounds"], [9, 2, 1, "", "union"], [9, 2, 1, "", "update"]], "graphtage.matching.QueueElement": [[9, 2, 1, "", "__init__"]], "graphtage.matching.SortedEdges": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "head"], [9, 2, 1, "", "tail"]], "graphtage.matching.WeightedBipartiteMatcher": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "bounds"], [9, 4, 1, "", "edges"], [9, 2, 1, "", "is_complete"], [9, 4, 1, "", "matching"], [9, 2, 1, "", "tighten_bounds"]], "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "bounds"], [9, 2, 1, "", "free_destinations"], [9, 2, 1, "", "free_sources"], [9, 2, 1, "", "tighten_bounds"]], "graphtage.multiset": [[10, 1, 1, "", "MultiSetEdit"]], "graphtage.multiset.MultiSetEdit": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "__iter__"], [10, 2, 1, "", "__lt__"], [10, 2, 1, "", "bounds"], [10, 2, 1, "", "edits"], [10, 3, 1, "", "from_node"], [10, 2, 1, "", "has_non_zero_cost"], [10, 3, 1, "", "initial_bounds"], [10, 2, 1, "", "is_complete"], [10, 2, 1, "", "on_diff"], [10, 2, 1, "", "print"], [10, 4, 1, "", "sequence"], [10, 2, 1, "", "tighten_bounds"], [10, 3, 1, "", "to_insert"], [10, 3, 1, "", "to_remove"], [10, 4, 1, "", "valid"]], "graphtage.plist": [[11, 1, 1, "", "PLIST"], [11, 1, 1, "", "PLISTFormatter"], [11, 1, 1, "", "PLISTNode"], [11, 1, 1, "", "PLISTSequenceFormatter"], [11, 5, 1, "", "build_tree"]], "graphtage.plist.PLIST": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "build_tree"], [11, 2, 1, "", "build_tree_handling_errors"], [11, 2, 1, "", "get_default_formatter"]], "graphtage.plist.PLISTFormatter": [[11, 3, 1, "", "DEFAULT_INSTANCE"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "__new__"], [11, 2, 1, "", "get_formatter"], [11, 3, 1, "", "is_partial"], [11, 3, 1, "", "parent"], [11, 2, 1, "", "print"], [11, 2, 1, "", "print_BoolNode"], [11, 2, 1, "", "print_FloatNode"], [11, 2, 1, "", "print_IntegerNode"], [11, 2, 1, "", "print_LeafNode"], [11, 2, 1, "", "print_PLISTNode"], [11, 2, 1, "", "print_StringNode"], [11, 4, 1, "", "root"], [11, 3, 1, "", "sub_format_types"], [11, 3, 1, "", "sub_formatters"], [11, 2, 1, "", "write_obj"]], "graphtage.plist.PLISTNode": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "all_children_are_leaves"], [11, 2, 1, "", "calculate_total_size"], [11, 2, 1, "", "children"], [11, 2, 1, "", "dfs"], [11, 2, 1, "", "diff"], [11, 3, 1, "", "edit_modifiers"], [11, 2, 1, "", "editable_dict"], [11, 4, 1, "", "edited"], [11, 2, 1, "", "edits"], [11, 2, 1, "", "get_all_edit_contexts"], [11, 2, 1, "", "get_all_edits"], [11, 4, 1, "", "is_leaf"], [11, 2, 1, "", "make_edited"], [11, 4, 1, "", "parent"], [11, 2, 1, "", "print"], [11, 2, 1, "", "print_parent_context"], [11, 2, 1, "", "to_obj"], [11, 4, 1, "", "total_size"]], "graphtage.plist.PLISTSequenceFormatter": [[11, 3, 1, "", "DEFAULT_INSTANCE"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "__new__"], [11, 2, 1, "", "edit_print"], [11, 2, 1, "", "get_formatter"], [11, 3, 1, "", "is_partial"], [11, 2, 1, "", "item_newline"], [11, 2, 1, "", "items_indent"], [11, 3, 1, "", "parent"], [11, 2, 1, "", "print"], [11, 2, 1, "", "print_KeyValuePairNode"], [11, 2, 1, "", "print_ListNode"], [11, 2, 1, "", "print_MappingNode"], [11, 2, 1, "", "print_MultiSetNode"], [11, 2, 1, "", "print_SequenceNode"], [11, 4, 1, "", "root"], [11, 3, 1, "", "sub_format_types"], [11, 3, 1, "", "sub_formatters"]], "graphtage.printer": [[12, 1, 1, "", "ANSIContext"], [12, 1, 1, "", "CombiningMarkContext"], [12, 1, 1, "", "CombiningMarkWriter"], [12, 3, 1, "", "DEFAULT_PRINTER"], [12, 1, 1, "", "HTMLANSIContext"], [12, 1, 1, "", "HTMLPrinter"], [12, 1, 1, "", "NullANSIContext"], [12, 1, 1, "", "Printer"], [12, 1, 1, "", "RawWriter"], [12, 1, 1, "", "Writer"], [12, 5, 1, "", "only_ansi"]], "graphtage.printer.ANSIContext": [[12, 2, 1, "", "__init__"], [12, 4, 1, "", "back"], [12, 2, 1, "", "background"], [12, 2, 1, "", "bright"], [12, 2, 1, "", "color"], [12, 2, 1, "", "dim"], [12, 4, 1, "", "end_code"], [12, 4, 1, "", "fore"], [12, 3, 1, "", "is_applied"], [12, 4, 1, "", "parent"], [12, 4, 1, "", "root"], [12, 4, 1, "", "start_code"], [12, 4, 1, "", "style"]], "graphtage.printer.CombiningMarkContext": [[12, 2, 1, "", "__init__"]], "graphtage.printer.CombiningMarkWriter": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "add"], [12, 2, 1, "", "context"], [12, 3, 1, "", "enabled"], [12, 2, 1, "", "flush"], [12, 2, 1, "", "isatty"], [12, 4, 1, "", "marks"], [12, 4, 1, "", "marks_str"], [12, 3, 1, "", "parent"], [12, 2, 1, "", "raw_write"], [12, 2, 1, "", "remove"], [12, 2, 1, "", "write"]], "graphtage.printer.HTMLANSIContext": [[12, 2, 1, "", "__init__"], [12, 4, 1, "", "back"], [12, 2, 1, "", "background"], [12, 2, 1, "", "bright"], [12, 2, 1, "", "color"], [12, 2, 1, "", "dim"], [12, 4, 1, "", "end_code"], [12, 4, 1, "", "fore"], [12, 2, 1, "", "get_back"], [12, 2, 1, "", "get_fore"], [12, 3, 1, "", "is_applied"], [12, 4, 1, "", "parent"], [12, 4, 1, "", "root"], [12, 4, 1, "", "start_code"], [12, 3, 1, "", "stream"], [12, 4, 1, "", "style"]], "graphtage.printer.HTMLPrinter": [[12, 2, 1, "", "__init__"], [12, 4, 1, "", "ansi_color"], [12, 2, 1, "", "background"], [12, 2, 1, "", "bright"], [12, 2, 1, "", "close"], [12, 4, 1, "", "closed"], [12, 2, 1, "", "color"], [12, 2, 1, "", "context"], [12, 2, 1, "", "dim"], [12, 2, 1, "", "fileno"], [12, 2, 1, "", "flush"], [12, 2, 1, "", "html_element"], [12, 2, 1, "", "indent"], [12, 3, 1, "", "indent_str"], [12, 3, 1, "", "indents"], [12, 2, 1, "", "isatty"], [12, 4, 1, "", "mode"], [12, 4, 1, "", "name"], [12, 2, 1, "", "newline"], [12, 3, 1, "", "out_stream"], [12, 3, 1, "", "quiet"], [12, 2, 1, "", "raw_write"], [12, 2, 1, "", "read"], [12, 2, 1, "", "readable"], [12, 2, 1, "", "readline"], [12, 2, 1, "", "readlines"], [12, 2, 1, "", "seek"], [12, 2, 1, "", "seekable"], [12, 3, 1, "", "status_stream"], [12, 2, 1, "", "strike"], [12, 2, 1, "", "tell"], [12, 2, 1, "", "tqdm"], [12, 2, 1, "", "trange"], [12, 2, 1, "", "truncate"], [12, 2, 1, "", "under_plus"], [12, 2, 1, "", "writable"], [12, 2, 1, "", "write"], [12, 3, 1, "", "write_raw"], [12, 2, 1, "", "writelines"]], "graphtage.printer.NullANSIContext": [[12, 2, 1, "", "__init__"]], "graphtage.printer.Printer": [[12, 2, 1, "", "__init__"], [12, 4, 1, "", "ansi_color"], [12, 2, 1, "", "background"], [12, 2, 1, "", "bright"], [12, 2, 1, "", "close"], [12, 4, 1, "", "closed"], [12, 2, 1, "", "color"], [12, 2, 1, "", "context"], [12, 2, 1, "", "dim"], [12, 2, 1, "", "fileno"], [12, 2, 1, "", "flush"], [12, 2, 1, "", "indent"], [12, 3, 1, "", "indent_str"], [12, 3, 1, "", "indents"], [12, 2, 1, "", "isatty"], [12, 4, 1, "", "mode"], [12, 4, 1, "", "name"], [12, 2, 1, "", "newline"], [12, 3, 1, "", "out_stream"], [12, 3, 1, "", "quiet"], [12, 2, 1, "", "raw_write"], [12, 2, 1, "", "read"], [12, 2, 1, "", "readable"], [12, 2, 1, "", "readline"], [12, 2, 1, "", "readlines"], [12, 2, 1, "", "seek"], [12, 2, 1, "", "seekable"], [12, 3, 1, "", "status_stream"], [12, 2, 1, "", "strike"], [12, 2, 1, "", "tell"], [12, 2, 1, "", "tqdm"], [12, 2, 1, "", "trange"], [12, 2, 1, "", "truncate"], [12, 2, 1, "", "under_plus"], [12, 2, 1, "", "writable"], [12, 2, 1, "", "write"], [12, 3, 1, "", "write_raw"], [12, 2, 1, "", "writelines"]], "graphtage.printer.RawWriter": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "flush"], [12, 2, 1, "", "isatty"], [12, 2, 1, "", "raw_write"], [12, 2, 1, "", "write"]], "graphtage.printer.Writer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "flush"], [12, 2, 1, "", "isatty"], [12, 2, 1, "", "write"]], "graphtage.progress": [[13, 1, 1, "", "StatusWriter"]], "graphtage.progress.StatusWriter": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "close"], [13, 4, 1, "", "closed"], [13, 2, 1, "", "fileno"], [13, 2, 1, "", "flush"], [13, 2, 1, "", "isatty"], [13, 4, 1, "", "mode"], [13, 4, 1, "", "name"], [13, 3, 1, "", "quiet"], [13, 2, 1, "", "read"], [13, 2, 1, "", "readable"], [13, 2, 1, "", "readline"], [13, 2, 1, "", "readlines"], [13, 2, 1, "", "seek"], [13, 2, 1, "", "seekable"], [13, 3, 1, "", "status_stream"], [13, 2, 1, "", "tell"], [13, 2, 1, "", "tqdm"], [13, 2, 1, "", "trange"], [13, 2, 1, "", "truncate"], [13, 2, 1, "", "writable"], [13, 2, 1, "", "write"], [13, 3, 1, "", "write_raw"], [13, 2, 1, "", "writelines"]], "graphtage.pydiff": [[14, 1, 1, "", "PyDictFormatter"], [14, 1, 1, "", "PyDiffFormatter"], [14, 1, 1, "", "PyListFormatter"], [14, 1, 1, "", "PyObj"], [14, 1, 1, "", "PyObjAttribute"], [14, 1, 1, "", "PyObjAttributes"], [14, 1, 1, "", "PyObjEdit"], [14, 1, 1, "", "PyObjFixedAttributes"], [14, 1, 1, "", "PyObjFormatter"], [14, 5, 1, "", "build_tree"], [14, 5, 1, "", "diff"], [14, 5, 1, "", "print_diff"]], "graphtage.pydiff.PyDictFormatter": [[14, 3, 1, "", "DEFAULT_INSTANCE"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 3, 1, "", "delimiter_callback"], [14, 2, 1, "", "edit_print"], [14, 2, 1, "", "get_formatter"], [14, 3, 1, "", "is_partial"], [14, 2, 1, "", "item_newline"], [14, 2, 1, "", "items_indent"], [14, 3, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_MappingNode"], [14, 2, 1, "", "print_MultiSetNode"], [14, 2, 1, "", "print_SequenceNode"], [14, 4, 1, "", "root"], [14, 3, 1, "", "sub_format_types"], [14, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyDiffFormatter": [[14, 3, 1, "", "DEFAULT_INSTANCE"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 2, 1, "", "get_formatter"], [14, 3, 1, "", "is_partial"], [14, 3, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 4, 1, "", "root"], [14, 3, 1, "", "sub_format_types"], [14, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyListFormatter": [[14, 3, 1, "", "DEFAULT_INSTANCE"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 3, 1, "", "delimiter_callback"], [14, 2, 1, "", "edit_print"], [14, 2, 1, "", "get_formatter"], [14, 3, 1, "", "is_partial"], [14, 2, 1, "", "item_newline"], [14, 2, 1, "", "items_indent"], [14, 3, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_ListNode"], [14, 2, 1, "", "print_SequenceNode"], [14, 4, 1, "", "root"], [14, 3, 1, "", "sub_format_types"], [14, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyObj": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "all_children_are_leaves"], [14, 2, 1, "", "calculate_total_size"], [14, 2, 1, "", "children"], [14, 2, 1, "", "dfs"], [14, 2, 1, "", "diff"], [14, 3, 1, "", "edit_modifiers"], [14, 2, 1, "", "editable_dict"], [14, 4, 1, "", "edited"], [14, 2, 1, "", "edits"], [14, 2, 1, "", "get_all_edit_contexts"], [14, 2, 1, "", "get_all_edits"], [14, 4, 1, "", "is_leaf"], [14, 2, 1, "", "make_edited"], [14, 4, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_parent_context"], [14, 2, 1, "", "to_obj"], [14, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjAttribute": [[14, 2, 1, "", "__eq__"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__lt__"], [14, 2, 1, "", "all_children_are_leaves"], [14, 2, 1, "", "calculate_total_size"], [14, 2, 1, "", "children"], [14, 2, 1, "", "dfs"], [14, 2, 1, "", "diff"], [14, 3, 1, "", "edit_modifiers"], [14, 2, 1, "", "editable_dict"], [14, 4, 1, "", "edited"], [14, 2, 1, "", "edits"], [14, 2, 1, "", "get_all_edit_contexts"], [14, 2, 1, "", "get_all_edits"], [14, 4, 1, "", "is_leaf"], [14, 2, 1, "", "make_edited"], [14, 4, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_parent_context"], [14, 2, 1, "", "to_obj"], [14, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjAttributes": [[14, 2, 1, "", "__contains__"], [14, 2, 1, "", "__getitem__"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "all_children_are_leaves"], [14, 2, 1, "", "calculate_total_size"], [14, 3, 1, "", "child_indexes"], [14, 2, 1, "", "children"], [14, 4, 1, "", "container_type"], [14, 2, 1, "", "dfs"], [14, 2, 1, "", "diff"], [14, 3, 1, "", "edit_modifiers"], [14, 2, 1, "", "editable_dict"], [14, 4, 1, "", "edited"], [14, 2, 1, "", "edits"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "get_all_edit_contexts"], [14, 2, 1, "", "get_all_edits"], [14, 4, 1, "", "is_leaf"], [14, 2, 1, "", "items"], [14, 2, 1, "", "make_edited"], [14, 2, 1, "", "make_key_value_pair_node"], [14, 4, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_parent_context"], [14, 2, 1, "", "to_obj"], [14, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjEdit": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__iter__"], [14, 2, 1, "", "__lt__"], [14, 2, 1, "", "bounds"], [14, 2, 1, "", "edits"], [14, 3, 1, "", "from_node"], [14, 2, 1, "", "has_non_zero_cost"], [14, 3, 1, "", "initial_bounds"], [14, 2, 1, "", "is_complete"], [14, 2, 1, "", "on_diff"], [14, 2, 1, "", "print"], [14, 2, 1, "", "tighten_bounds"], [14, 4, 1, "", "valid"]], "graphtage.pydiff.PyObjFixedAttributes": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "__len__"], [14, 2, 1, "", "all_children_are_leaves"], [14, 2, 1, "", "calculate_total_size"], [14, 3, 1, "", "child_indexes"], [14, 2, 1, "", "children"], [14, 4, 1, "", "container_type"], [14, 2, 1, "", "dfs"], [14, 2, 1, "", "diff"], [14, 3, 1, "", "edit_modifiers"], [14, 2, 1, "", "editable_dict"], [14, 4, 1, "", "edited"], [14, 2, 1, "", "edits"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "get_all_edit_contexts"], [14, 2, 1, "", "get_all_edits"], [14, 4, 1, "", "is_leaf"], [14, 2, 1, "", "items"], [14, 2, 1, "", "make_edited"], [14, 2, 1, "", "make_key_value_pair_node"], [14, 4, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_parent_context"], [14, 2, 1, "", "to_obj"], [14, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjFormatter": [[14, 3, 1, "", "DEFAULT_INSTANCE"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 2, 1, "", "edit_print"], [14, 2, 1, "", "get_formatter"], [14, 3, 1, "", "is_partial"], [14, 2, 1, "", "item_newline"], [14, 2, 1, "", "items_indent"], [14, 3, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_PyObj"], [14, 2, 1, "", "print_PyObjAttribute"], [14, 2, 1, "", "print_PyObjAttributes"], [14, 2, 1, "", "print_PyObjFixedAttributes"], [14, 2, 1, "", "print_SequenceNode"], [14, 4, 1, "", "root"], [14, 3, 1, "", "sub_format_types"], [14, 3, 1, "", "sub_formatters"]], "graphtage.search": [[15, 1, 1, "", "IterativeTighteningSearch"]], "graphtage.search.IterativeTighteningSearch": [[15, 2, 1, "", "__bool__"], [15, 2, 1, "", "__init__"], [15, 4, 1, "", "best_match"], [15, 2, 1, "", "bounds"], [15, 2, 1, "", "goal_test"], [15, 2, 1, "", "remove_best"], [15, 2, 1, "", "search"], [15, 2, 1, "", "tighten_bounds"]], "graphtage.sequences": [[16, 1, 1, "", "FixedLengthSequenceEdit"], [16, 1, 1, "", "SequenceEdit"], [16, 1, 1, "", "SequenceFormatter"], [16, 1, 1, "", "SequenceNode"]], "graphtage.sequences.FixedLengthSequenceEdit": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "__iter__"], [16, 2, 1, "", "__lt__"], [16, 2, 1, "", "bounds"], [16, 2, 1, "", "edits"], [16, 3, 1, "", "from_node"], [16, 2, 1, "", "has_non_zero_cost"], [16, 3, 1, "", "initial_bounds"], [16, 2, 1, "", "is_complete"], [16, 2, 1, "", "on_diff"], [16, 2, 1, "", "print"], [16, 4, 1, "", "sequence"], [16, 2, 1, "", "tighten_bounds"], [16, 4, 1, "", "valid"]], "graphtage.sequences.SequenceEdit": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "__iter__"], [16, 2, 1, "", "__lt__"], [16, 2, 1, "", "bounds"], [16, 2, 1, "", "edits"], [16, 3, 1, "", "from_node"], [16, 2, 1, "", "has_non_zero_cost"], [16, 3, 1, "", "initial_bounds"], [16, 2, 1, "", "is_complete"], [16, 2, 1, "", "on_diff"], [16, 2, 1, "", "print"], [16, 4, 1, "", "sequence"], [16, 2, 1, "", "tighten_bounds"], [16, 4, 1, "", "valid"]], "graphtage.sequences.SequenceFormatter": [[16, 3, 1, "", "DEFAULT_INSTANCE"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "__new__"], [16, 2, 1, "", "edit_print"], [16, 2, 1, "", "get_formatter"], [16, 3, 1, "", "is_partial"], [16, 2, 1, "", "item_newline"], [16, 2, 1, "", "items_indent"], [16, 3, 1, "", "parent"], [16, 2, 1, "", "print"], [16, 2, 1, "", "print_SequenceNode"], [16, 4, 1, "", "root"], [16, 3, 1, "", "sub_format_types"], [16, 3, 1, "", "sub_formatters"]], "graphtage.sequences.SequenceNode": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "__iter__"], [16, 2, 1, "", "__len__"], [16, 2, 1, "", "all_children_are_leaves"], [16, 2, 1, "", "calculate_total_size"], [16, 2, 1, "", "children"], [16, 4, 1, "", "container_type"], [16, 2, 1, "", "dfs"], [16, 2, 1, "", "diff"], [16, 3, 1, "", "edit_modifiers"], [16, 2, 1, "", "editable_dict"], [16, 4, 1, "", "edited"], [16, 2, 1, "", "edits"], [16, 2, 1, "", "get_all_edit_contexts"], [16, 2, 1, "", "get_all_edits"], [16, 4, 1, "", "is_leaf"], [16, 2, 1, "", "make_edited"], [16, 4, 1, "", "parent"], [16, 2, 1, "", "print"], [16, 2, 1, "", "print_parent_context"], [16, 2, 1, "", "to_obj"], [16, 4, 1, "", "total_size"]], "graphtage.utils": [[17, 1, 1, "", "HashableCounter"], [17, 1, 1, "", "OrderedCounter"], [17, 1, 1, "", "Sized"], [17, 1, 1, "", "SparseMatrix"], [17, 1, 1, "", "Tempfile"], [17, 5, 1, "", "getsizeof"], [17, 5, 1, "", "largest"], [17, 5, 1, "", "smallest"]], "graphtage.utils.HashableCounter": [[17, 2, 1, "", "__add__"], [17, 2, 1, "", "__and__"], [17, 2, 1, "", "__delitem__"], [17, 2, 1, "", "__iadd__"], [17, 2, 1, "", "__iand__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "__ior__"], [17, 2, 1, "", "__isub__"], [17, 2, 1, "", "__missing__"], [17, 2, 1, "", "__neg__"], [17, 2, 1, "", "__or__"], [17, 2, 1, "", "__pos__"], [17, 2, 1, "", "__sub__"], [17, 2, 1, "", "_keep_positive"], [17, 2, 1, "", "clear"], [17, 2, 1, "", "copy"], [17, 2, 1, "", "elements"], [17, 2, 1, "", "fromkeys"], [17, 2, 1, "", "get"], [17, 2, 1, "", "items"], [17, 2, 1, "", "keys"], [17, 2, 1, "", "most_common"], [17, 2, 1, "", "pop"], [17, 2, 1, "", "popitem"], [17, 2, 1, "", "setdefault"], [17, 2, 1, "", "subtract"], [17, 2, 1, "", "update"], [17, 2, 1, "", "values"]], "graphtage.utils.OrderedCounter": [[17, 2, 1, "", "__add__"], [17, 2, 1, "", "__and__"], [17, 2, 1, "", "__delitem__"], [17, 2, 1, "", "__iadd__"], [17, 2, 1, "", "__iand__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "__ior__"], [17, 2, 1, "", "__isub__"], [17, 2, 1, "", "__missing__"], [17, 2, 1, "", "__neg__"], [17, 2, 1, "", "__or__"], [17, 2, 1, "", "__pos__"], [17, 2, 1, "", "__sub__"], [17, 2, 1, "", "_keep_positive"], [17, 2, 1, "", "clear"], [17, 2, 1, "", "copy"], [17, 2, 1, "", "elements"], [17, 2, 1, "", "fromkeys"], [17, 2, 1, "", "get"], [17, 2, 1, "", "items"], [17, 2, 1, "", "keys"], [17, 2, 1, "", "most_common"], [17, 2, 1, "", "move_to_end"], [17, 2, 1, "", "pop"], [17, 2, 1, "", "popitem"], [17, 2, 1, "", "setdefault"], [17, 2, 1, "", "subtract"], [17, 2, 1, "", "update"], [17, 2, 1, "", "values"]], "graphtage.utils.Sized": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "getsizeof"]], "graphtage.utils.SparseMatrix": [[17, 1, 1, "", "SparseMatrixRow"], [17, 2, 1, "", "__getitem__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "__len__"], [17, 2, 1, "", "clear"], [17, 3, 1, "", "default_value"], [17, 2, 1, "", "get"], [17, 2, 1, "", "getsizeof"], [17, 2, 1, "", "items"], [17, 2, 1, "", "keys"], [17, 3, 1, "", "num_cols"], [17, 2, 1, "", "num_filled_elements"], [17, 3, 1, "", "num_rows"], [17, 3, 1, "", "rows"], [17, 2, 1, "", "shape"], [17, 2, 1, "", "values"]], "graphtage.utils.SparseMatrix.SparseMatrixRow": [[17, 2, 1, "", "__getitem__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "__iter__"], [17, 2, 1, "", "__len__"], [17, 2, 1, "", "clear"], [17, 3, 1, "", "default_value"], [17, 2, 1, "", "get"], [17, 2, 1, "", "getsizeof"], [17, 2, 1, "", "items"], [17, 2, 1, "", "keys"], [17, 3, 1, "", "num_cols"], [17, 2, 1, "", "pop"], [17, 2, 1, "", "popitem"], [17, 3, 1, "", "row"], [17, 3, 1, "", "row_num"], [17, 2, 1, "", "setdefault"], [17, 2, 1, "", "shape"], [17, 2, 1, "", "update"], [17, 2, 1, "", "values"]], "graphtage.utils.Tempfile": [[17, 2, 1, "", "__enter__"], [17, 2, 1, "", "__exit__"], [17, 2, 1, "", "__init__"]], "graphtage.version": [[18, 3, 1, "", "DEV_BUILD"], [18, 3, 1, "", "VERSION_STRING"], [18, 3, 1, "", "__version__"], [18, 5, 1, "", "git_branch"]], "graphtage.xml": [[19, 1, 1, "", "HTML"], [19, 1, 1, "", "XML"], [19, 1, 1, "", "XMLChildFormatter"], [19, 1, 1, "", "XMLElement"], [19, 1, 1, "", "XMLElementAttribFormatter"], [19, 1, 1, "", "XMLElementChildren"], [19, 1, 1, "", "XMLElementEdit"], [19, 1, 1, "", "XMLElementObj"], [19, 1, 1, "", "XMLFormatter"], [19, 1, 1, "", "XMLStringFormatter"], [19, 5, 1, "", "build_tree"]], "graphtage.xml.HTML": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "build_tree"], [19, 2, 1, "", "build_tree_handling_errors"], [19, 2, 1, "", "get_default_formatter"]], "graphtage.xml.XML": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "build_tree"], [19, 2, 1, "", "build_tree_handling_errors"], [19, 2, 1, "", "get_default_formatter"]], "graphtage.xml.XMLChildFormatter": [[19, 3, 1, "", "DEFAULT_INSTANCE"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__new__"], [19, 3, 1, "", "delimiter_callback"], [19, 2, 1, "", "edit_print"], [19, 2, 1, "", "get_formatter"], [19, 3, 1, "", "is_partial"], [19, 2, 1, "", "item_newline"], [19, 2, 1, "", "items_indent"], [19, 3, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_ListNode"], [19, 2, 1, "", "print_SequenceNode"], [19, 4, 1, "", "root"], [19, 3, 1, "", "sub_format_types"], [19, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLElement": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "all_children_are_leaves"], [19, 2, 1, "", "calculate_total_size"], [19, 2, 1, "", "children"], [19, 2, 1, "", "dfs"], [19, 2, 1, "", "diff"], [19, 3, 1, "", "edit_modifiers"], [19, 2, 1, "", "editable_dict"], [19, 4, 1, "", "edited"], [19, 2, 1, "", "edits"], [19, 2, 1, "", "get_all_edit_contexts"], [19, 2, 1, "", "get_all_edits"], [19, 4, 1, "", "is_leaf"], [19, 2, 1, "", "make_edited"], [19, 4, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_parent_context"], [19, 3, 1, "", "tag"], [19, 3, 1, "", "text"], [19, 2, 1, "", "to_obj"], [19, 4, 1, "", "total_size"]], "graphtage.xml.XMLElementAttribFormatter": [[19, 3, 1, "", "DEFAULT_INSTANCE"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__new__"], [19, 3, 1, "", "delimiter_callback"], [19, 2, 1, "", "edit_print"], [19, 2, 1, "", "get_formatter"], [19, 3, 1, "", "is_partial"], [19, 2, 1, "", "item_newline"], [19, 2, 1, "", "items_indent"], [19, 3, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_KeyValuePairNode"], [19, 2, 1, "", "print_MappingNode"], [19, 2, 1, "", "print_MultiSetNode"], [19, 2, 1, "", "print_SequenceNode"], [19, 4, 1, "", "root"], [19, 3, 1, "", "sub_format_types"], [19, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLElementChildren": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "__iter__"], [19, 2, 1, "", "__len__"], [19, 2, 1, "", "all_children_are_leaves"], [19, 2, 1, "", "calculate_total_size"], [19, 3, 1, "", "child_indexes"], [19, 2, 1, "", "children"], [19, 4, 1, "", "container_type"], [19, 2, 1, "", "dfs"], [19, 2, 1, "", "diff"], [19, 3, 1, "", "edit_modifiers"], [19, 2, 1, "", "editable_dict"], [19, 4, 1, "", "edited"], [19, 2, 1, "", "edits"], [19, 2, 1, "", "get_all_edit_contexts"], [19, 2, 1, "", "get_all_edits"], [19, 4, 1, "", "is_leaf"], [19, 2, 1, "", "make_edited"], [19, 4, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_parent_context"], [19, 2, 1, "", "to_obj"], [19, 4, 1, "", "total_size"]], "graphtage.xml.XMLElementEdit": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "__iter__"], [19, 2, 1, "", "__lt__"], [19, 3, 1, "", "attrib_edit"], [19, 2, 1, "", "bounds"], [19, 3, 1, "", "child_edit"], [19, 2, 1, "", "edits"], [19, 3, 1, "", "from_node"], [19, 2, 1, "", "has_non_zero_cost"], [19, 3, 1, "", "initial_bounds"], [19, 2, 1, "", "is_complete"], [19, 2, 1, "", "on_diff"], [19, 2, 1, "", "print"], [19, 3, 1, "", "tag_edit"], [19, 3, 1, "", "text_edit"], [19, 2, 1, "", "tighten_bounds"], [19, 4, 1, "", "valid"]], "graphtage.xml.XMLElementObj": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "attrib"], [19, 3, 1, "", "children"], [19, 3, 1, "", "tag"], [19, 3, 1, "", "text"]], "graphtage.xml.XMLFormatter": [[19, 3, 1, "", "DEFAULT_INSTANCE"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__new__"], [19, 2, 1, "", "get_formatter"], [19, 3, 1, "", "is_partial"], [19, 3, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_LeafNode"], [19, 2, 1, "", "print_XMLElement"], [19, 4, 1, "", "root"], [19, 3, 1, "", "sub_format_types"], [19, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLStringFormatter": [[19, 3, 1, "", "DEFAULT_INSTANCE"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__new__"], [19, 2, 1, "", "context"], [19, 2, 1, "", "escape"], [19, 2, 1, "", "get_formatter"], [19, 3, 1, "", "is_partial"], [19, 3, 1, "", "is_quoted"], [19, 3, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_StringEdit"], [19, 2, 1, "", "print_StringNode"], [19, 4, 1, "", "root"], [19, 3, 1, "", "sub_format_types"], [19, 3, 1, "", "sub_formatters"], [19, 2, 1, "", "write_char"], [19, 2, 1, "", "write_end_quote"], [19, 2, 1, "", "write_start_quote"]], "graphtage.yaml": [[20, 1, 1, "", "YAML"], [20, 1, 1, "", "YAMLDictFormatter"], [20, 1, 1, "", "YAMLFormatter"], [20, 1, 1, "", "YAMLKeyValuePairFormatter"], [20, 1, 1, "", "YAMLListFormatter"], [20, 1, 1, "", "YAMLStringFormatter"], [20, 5, 1, "", "build_tree"]], "graphtage.yaml.YAML": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "build_tree"], [20, 2, 1, "", "build_tree_handling_errors"], [20, 2, 1, "", "get_default_formatter"]], "graphtage.yaml.YAMLDictFormatter": [[20, 3, 1, "", "DEFAULT_INSTANCE"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__new__"], [20, 3, 1, "", "delimiter_callback"], [20, 2, 1, "", "edit_print"], [20, 2, 1, "", "get_formatter"], [20, 3, 1, "", "is_partial"], [20, 2, 1, "", "item_newline"], [20, 2, 1, "", "items_indent"], [20, 3, 1, "", "parent"], [20, 2, 1, "", "print"], [20, 2, 1, "", "print_MappingNode"], [20, 2, 1, "", "print_MultiSetNode"], [20, 2, 1, "", "print_SequenceNode"], [20, 4, 1, "", "root"], [20, 3, 1, "", "sub_format_types"], [20, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLFormatter": [[20, 3, 1, "", "DEFAULT_INSTANCE"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__new__"], [20, 2, 1, "", "get_formatter"], [20, 3, 1, "", "is_partial"], [20, 3, 1, "", "parent"], [20, 2, 1, "", "print"], [20, 2, 1, "", "print_ContainerNode"], [20, 2, 1, "", "print_LeafNode"], [20, 4, 1, "", "root"], [20, 3, 1, "", "sub_format_types"], [20, 3, 1, "", "sub_formatters"], [20, 2, 1, "", "write_obj"]], "graphtage.yaml.YAMLKeyValuePairFormatter": [[20, 3, 1, "", "DEFAULT_INSTANCE"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__new__"], [20, 2, 1, "", "get_formatter"], [20, 3, 1, "", "is_partial"], [20, 3, 1, "", "parent"], [20, 2, 1, "", "print"], [20, 2, 1, "", "print_KeyValuePairNode"], [20, 4, 1, "", "root"], [20, 3, 1, "", "sub_format_types"], [20, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLListFormatter": [[20, 3, 1, "", "DEFAULT_INSTANCE"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__new__"], [20, 3, 1, "", "delimiter_callback"], [20, 2, 1, "", "edit_print"], [20, 2, 1, "", "get_formatter"], [20, 3, 1, "", "is_partial"], [20, 2, 1, "", "item_newline"], [20, 2, 1, "", "items_indent"], [20, 3, 1, "", "parent"], [20, 2, 1, "", "print"], [20, 2, 1, "", "print_ListNode"], [20, 2, 1, "", "print_SequenceNode"], [20, 4, 1, "", "root"], [20, 3, 1, "", "sub_format_types"], [20, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLStringFormatter": [[20, 3, 1, "", "DEFAULT_INSTANCE"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__new__"], [20, 2, 1, "", "context"], [20, 2, 1, "", "escape"], [20, 2, 1, "", "get_formatter"], [20, 3, 1, "", "has_newline"], [20, 3, 1, "", "is_partial"], [20, 3, 1, "", "is_quoted"], [20, 3, 1, "", "parent"], [20, 2, 1, "", "print"], [20, 2, 1, "", "print_StringEdit"], [20, 2, 1, "", "print_StringNode"], [20, 4, 1, "", "root"], [20, 3, 1, "", "sub_format_types"], [20, 3, 1, "", "sub_formatters"], [20, 2, 1, "", "write_char"], [20, 2, 1, "", "write_end_quote"], [20, 2, 1, "", "write_start_quote"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"extend": [0, 22], "graphtag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20], "abstractcompoundedit": 1, "abstractedit": 1, "boolnod": 1, "buildopt": 1, "compoundedit": 1, "constantcostedit": 1, "containernod": 1, "dictnod": 1, "edit": [1, 23], "editcollect": 1, "editsequ": 1, "editedtreenod": 1, "filetyp": 1, "filetypewatch": 1, "fixedkeydictnod": 1, "fixedkeydictnodeedit": 1, "floatnod": 1, "graphtageformatt": 1, "insert": 1, "integernod": 1, "keyvaluepairedit": 1, "keyvaluepairnod": 1, "leafnod": 1, "listnod": 1, "mappingnod": 1, "match": [1, 9, 21], "multisetnod": 1, "nullnod": 1, "possibleedit": 1, "remov": 1, "replac": 1, "stringedit": 1, "stringformatt": 1, "stringnod": 1, "treenod": 1, "treenodemeta": 1, "function": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 17, 18, 19, 20], "explode_edit": 1, "get_filetyp": 1, "string_edit_dist": 1, "bound": 2, "boundedcompar": 2, "constantbound": 2, "infin": 2, "rang": 2, "make_distinct": 2, "min_bound": 2, "repeat_until_tighten": 2, "sort": 2, "csv": 3, "csvformatt": 3, "csvnode": 3, "csvrow": 3, "csvrowformatt": 3, "build_tre": [3, 7, 11, 14, 19, 20], "express": 4, "closebracket": 4, "closeparen": 4, "collectioninfo": 4, "comma": 4, "fixedsizecollect": 4, "floattoken": 4, "functioncal": 4, "identifiertoken": 4, "integertoken": 4, "numerictoken": 4, "openbracket": 4, "openparen": 4, "oper": 4, "operatortoken": 4, "pairedendtoken": 4, "pairedstarttoken": 4, "pairedtoken": 4, "parenthesi": 4, "parseerror": 4, "stringtoken": 4, "token": 4, "get_memb": 4, "todo": 4, "infix_to_rpn": 4, "pars": 4, "fibonacci": 5, "fibonacciheap": 5, "heapnod": 5, "maxfibonacciheap": 5, "reversedcompar": 5, "formatt": 6, "why": [6, 21], "doe": 6, "modul": 6, "exist": 6, "what": 6, "can": 6, "do": 6, "format": [6, 23], "protocol": [6, 25], "basicformatt": 6, "formattercheck": 6, "get_formatt": 6, "json": 7, "json5": 7, "jsondictformatt": 7, "jsonformatt": 7, "jsonlistformatt": 7, "jsonstringformatt": 7, "levenshtein": 8, "editdist": 8, "levenshtein_dist": 8, "edg": 9, "matchingfromnod": 9, "matchingnod": 9, "matchingtonod": 9, "pathset": 9, "queueelement": 9, "sortededg": 9, "weightedbipartitematch": 9, "weightedbipartitematcherpartial_implement": 9, "get_dtyp": 9, "min_weight_bipartite_match": 9, "multiset": 10, "multisetedit": 10, "plist": 11, "plistformatt": 11, "plistnod": 11, "plistsequenceformatt": 11, "printer": 12, "ansicontext": 12, "combiningmarkcontext": 12, "combiningmarkwrit": 12, "htmlansicontext": 12, "htmlprinter": 12, "nullansicontext": 12, "rawwrit": 12, "writer": 12, "only_ansi": 12, "progress": 13, "statuswrit": 13, "pydiff": 14, "pydictformatt": 14, "pydiffformatt": 14, "pylistformatt": 14, "pyobj": 14, "pyobjattribut": 14, "pyobjedit": 14, "pyobjfixedattribut": 14, "pyobjformatt": 14, "diff": 14, "print_diff": 14, "search": 15, "iterativetighteningsearch": 15, "sequenc": [16, 21], "fixedlengthsequenceedit": 16, "sequenceedit": 16, "sequenceformatt": 16, "sequencenod": 16, "util": [17, 22], "hashablecount": 17, "orderedcount": 17, "size": 17, "sparsematrix": 17, "tempfil": 17, "getsizeof": 17, "largest": 17, "smallest": 17, "version": 18, "git_branch": 18, "xml": 19, "html": 19, "xmlchildformatt": 19, "xmlelement": 19, "xmlelementattribformatt": 19, "xmlelementchildren": 19, "xmlelementedit": 19, "xmlelementobj": 19, "xmlformatt": 19, "xmlstringformatt": 19, "yaml": 20, "yamldictformatt": 20, "yamlformatt": 20, "yamlkeyvaluepairformatt": 20, "yamllistformatt": 20, "yamlstringformatt": 20, "how": [21, 22], "work": [21, 22], "map": 21, "tree": 21, "i": 21, "complex": 21, "order": 21, "unord": 21, "collect": 21, "footnot": 21, "document": 22, "you": 22, "want": 22, "learn": 22, "us": [22, 23], "command": 22, "line": 22, "programmat": [22, 23], "interact": 22, "librari": 22, "modifi": 22, "ar": 22, "alreadi": 22, "familiar": 22, "just": 22, "need": 22, "an": 22, "api": [22, 24], "refer": 22, "curiou": 22, "more": 22, "about": 22, "content": 22, "indic": 22, "tabl": 22, "The": 23, "intermedi": 23, "represent": 23, "transform": 23, "node": 23, "appli": 23, "print": [23, 25], "result": 23, "dif": 23, "In": 23, "memori": 23, "python": 23, "object": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Extending Graphtage": [[0, "extending-graphtage"]], "graphtage": [[1, "module-graphtage"]], "graphtage classes": [[1, "graphtage-classes"]], "AbstractCompoundEdit": [[1, "abstractcompoundedit"]], "AbstractEdit": [[1, "abstractedit"]], "BoolNode": [[1, "boolnode"]], "BuildOptions": [[1, "buildoptions"]], "CompoundEdit": [[1, "compoundedit"]], "ConstantCostEdit": [[1, "constantcostedit"]], "ContainerNode": [[1, "containernode"]], "DictNode": [[1, "dictnode"]], "Edit": [[1, "edit"]], "EditCollection": [[1, "editcollection"]], "EditSequence": [[1, "editsequence"]], "EditedTreeNode": [[1, "editedtreenode"]], "Filetype": [[1, "filetype"]], "FiletypeWatcher": [[1, "filetypewatcher"]], "FixedKeyDictNode": [[1, "fixedkeydictnode"]], "FixedKeyDictNodeEdit": [[1, "fixedkeydictnodeedit"]], "FloatNode": [[1, "floatnode"]], "GraphtageFormatter": [[1, "graphtageformatter"]], "Insert": [[1, "insert"]], "IntegerNode": [[1, "integernode"]], "KeyValuePairEdit": [[1, "keyvaluepairedit"]], "KeyValuePairNode": [[1, "keyvaluepairnode"]], "LeafNode": [[1, "leafnode"]], "ListNode": [[1, "listnode"]], "MappingNode": [[1, "mappingnode"]], "Match": [[1, "match"]], "MultiSetNode": [[1, "multisetnode"]], "NullNode": [[1, "nullnode"]], "PossibleEdits": [[1, "possibleedits"]], "Remove": [[1, "remove"]], "Replace": [[1, "replace"]], "StringEdit": [[1, "stringedit"]], "StringFormatter": [[1, "stringformatter"]], "StringNode": [[1, "stringnode"]], "TreeNode": [[1, "treenode"]], "TreeNodeMeta": [[1, "treenodemeta"]], "graphtage functions": [[1, "graphtage-functions"]], "explode_edits": [[1, "explode-edits"]], "get_filetype": [[1, "get-filetype"]], "string_edit_distance": [[1, "string-edit-distance"]], "graphtage.bounds": [[2, "module-graphtage.bounds"]], "bounds classes": [[2, "bounds-classes"]], "Bounded": [[2, "bounded"]], "BoundedComparator": [[2, "boundedcomparator"]], "ConstantBound": [[2, "constantbound"]], "Infinity": [[2, "infinity"]], "Range": [[2, "range"]], "bounds functions": [[2, "bounds-functions"]], "make_distinct": [[2, "make-distinct"]], "min_bounded": [[2, "min-bounded"]], "repeat_until_tightened": [[2, "repeat-until-tightened"]], "sort": [[2, "sort"]], "graphtage.csv": [[3, "module-graphtage.csv"]], "csv classes": [[3, "csv-classes"]], "CSV": [[3, "csv"]], "CSVFormatter": [[3, "csvformatter"]], "CSVNode": [[3, "csvnode"]], "CSVRow": [[3, "csvrow"]], "CSVRowFormatter": [[3, "csvrowformatter"]], "CSVRows": [[3, "csvrows"]], "csv functions": [[3, "csv-functions"]], "build_tree": [[3, "build-tree"], [7, "build-tree"], [11, "build-tree"], [14, "build-tree"], [19, "build-tree"], [20, "build-tree"]], "graphtage.expressions": [[4, "module-graphtage.expressions"]], "expressions classes": [[4, "expressions-classes"]], "CloseBracket": [[4, "closebracket"]], "CloseParen": [[4, "closeparen"]], "CollectionInfo": [[4, "collectioninfo"]], "Comma": [[4, "comma"]], "Expression": [[4, "expression"]], "FixedSizeCollection": [[4, "fixedsizecollection"]], "FloatToken": [[4, "floattoken"]], "FunctionCall": [[4, "functioncall"]], "IdentifierToken": [[4, "identifiertoken"]], "IntegerToken": [[4, "integertoken"]], "NumericToken": [[4, "numerictoken"]], "OpenBracket": [[4, "openbracket"]], "OpenParen": [[4, "openparen"]], "Operator": [[4, "operator"]], "OperatorToken": [[4, "operatortoken"]], "PairedEndToken": [[4, "pairedendtoken"]], "PairedStartToken": [[4, "pairedstarttoken"]], "PairedToken": [[4, "pairedtoken"]], "Parenthesis": [[4, "parenthesis"]], "ParseError": [[4, "parseerror"]], "StringToken": [[4, "stringtoken"]], "Token": [[4, "token"]], "Tokenizer": [[4, "tokenizer"]], "expressions functions": [[4, "expressions-functions"]], "get_member": [[4, "get-member"]], "Todo": [[4, "id1"]], "infix_to_rpn": [[4, "infix-to-rpn"]], "parse": [[4, "parse"]], "tokenize": [[4, "tokenize"]], "graphtage.fibonacci": [[5, "module-graphtage.fibonacci"]], "fibonacci classes": [[5, "fibonacci-classes"]], "FibonacciHeap": [[5, "fibonacciheap"]], "HeapNode": [[5, "heapnode"]], "MaxFibonacciHeap": [[5, "maxfibonacciheap"]], "ReversedComparator": [[5, "reversedcomparator"]], "graphtage.formatter": [[6, "module-graphtage.formatter"]], "Why does the formatter module exist?": [[6, "why-does-the-formatter-module-exist"]], "What the formatter module can do": [[6, "what-the-formatter-module-can-do"]], "Formatting Protocol": [[6, "formatting-protocol"]], "formatter classes": [[6, "formatter-classes"]], "BasicFormatter": [[6, "basicformatter"]], "Formatter": [[6, "formatter"]], "FormatterChecker": [[6, "formatterchecker"]], "formatter functions": [[6, "formatter-functions"]], "get_formatter": [[6, "get-formatter"]], "graphtage.json": [[7, "module-graphtage.json"]], "json classes": [[7, "json-classes"]], "JSON": [[7, "json"]], "JSON5": [[7, "json5"]], "JSONDictFormatter": [[7, "jsondictformatter"]], "JSONFormatter": [[7, "jsonformatter"]], "JSONListFormatter": [[7, "jsonlistformatter"]], "JSONStringFormatter": [[7, "jsonstringformatter"]], "json functions": [[7, "json-functions"]], "graphtage.levenshtein": [[8, "module-graphtage.levenshtein"]], "levenshtein classes": [[8, "levenshtein-classes"]], "EditDistance": [[8, "editdistance"]], "levenshtein functions": [[8, "levenshtein-functions"]], "levenshtein_distance": [[8, "levenshtein-distance"]], "graphtage.matching": [[9, "module-graphtage.matching"]], "matching classes": [[9, "matching-classes"]], "Edge": [[9, "edge"]], "Matching": [[9, "matching"]], "MatchingFromNode": [[9, "matchingfromnode"]], "MatchingNode": [[9, "matchingnode"]], "MatchingToNode": [[9, "matchingtonode"]], "PathSet": [[9, "pathset"]], "QueueElement": [[9, "queueelement"]], "SortedEdges": [[9, "sortededges"]], "WeightedBipartiteMatcher": [[9, "weightedbipartitematcher"]], "WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION": [[9, "weightedbipartitematcherpartial-implementation"]], "matching functions": [[9, "matching-functions"]], "get_dtype": [[9, "get-dtype"]], "min_weight_bipartite_matching": [[9, "min-weight-bipartite-matching"]], "graphtage.multiset": [[10, "module-graphtage.multiset"]], "multiset classes": [[10, "multiset-classes"]], "MultiSetEdit": [[10, "multisetedit"]], "graphtage.plist": [[11, "module-graphtage.plist"]], "plist classes": [[11, "plist-classes"]], "PLIST": [[11, "plist"]], "PLISTFormatter": [[11, "plistformatter"]], "PLISTNode": [[11, "plistnode"]], "PLISTSequenceFormatter": [[11, "plistsequenceformatter"]], "plist functions": [[11, "plist-functions"]], "graphtage.printer": [[12, "module-graphtage.printer"]], "printer classes": [[12, "printer-classes"]], "ANSIContext": [[12, "ansicontext"]], "CombiningMarkContext": [[12, "combiningmarkcontext"]], "CombiningMarkWriter": [[12, "combiningmarkwriter"]], "HTMLANSIContext": [[12, "htmlansicontext"]], "HTMLPrinter": [[12, "htmlprinter"]], "NullANSIContext": [[12, "nullansicontext"]], "Printer": [[12, "printer"]], "RawWriter": [[12, "rawwriter"]], "Writer": [[12, "writer"]], "printer functions": [[12, "printer-functions"]], "only_ansi": [[12, "only-ansi"]], "graphtage.progress": [[13, "module-graphtage.progress"]], "progress classes": [[13, "progress-classes"]], "StatusWriter": [[13, "statuswriter"]], "graphtage.pydiff": [[14, "module-graphtage.pydiff"]], "pydiff classes": [[14, "pydiff-classes"]], "PyDictFormatter": [[14, "pydictformatter"]], "PyDiffFormatter": [[14, "pydiffformatter"]], "PyListFormatter": [[14, "pylistformatter"]], "PyObj": [[14, "pyobj"]], "PyObjAttribute": [[14, "pyobjattribute"]], "PyObjAttributes": [[14, "pyobjattributes"]], "PyObjEdit": [[14, "pyobjedit"]], "PyObjFixedAttributes": [[14, "pyobjfixedattributes"]], "PyObjFormatter": [[14, "pyobjformatter"]], "pydiff functions": [[14, "pydiff-functions"]], "diff": [[14, "diff"]], "print_diff": [[14, "print-diff"]], "graphtage.search": [[15, "module-graphtage.search"]], "search classes": [[15, "search-classes"]], "IterativeTighteningSearch": [[15, "iterativetighteningsearch"]], "graphtage.sequences": [[16, "module-graphtage.sequences"]], "sequences classes": [[16, "sequences-classes"]], "FixedLengthSequenceEdit": [[16, "fixedlengthsequenceedit"]], "SequenceEdit": [[16, "sequenceedit"]], "SequenceFormatter": [[16, "sequenceformatter"]], "SequenceNode": [[16, "sequencenode"]], "graphtage.utils": [[17, "module-graphtage.utils"]], "utils classes": [[17, "utils-classes"]], "HashableCounter": [[17, "hashablecounter"]], "OrderedCounter": [[17, "orderedcounter"]], "Sized": [[17, "sized"]], "SparseMatrix": [[17, "sparsematrix"]], "Tempfile": [[17, "tempfile"]], "utils functions": [[17, "utils-functions"]], "getsizeof": [[17, "getsizeof"]], "largest": [[17, "largest"]], "smallest": [[17, "smallest"]], "graphtage.version": [[18, "module-graphtage.version"]], "version functions": [[18, "version-functions"]], "git_branch": [[18, "git-branch"]], "graphtage.xml": [[19, "module-graphtage.xml"]], "xml classes": [[19, "xml-classes"]], "HTML": [[19, "html"]], "XML": [[19, "xml"]], "XMLChildFormatter": [[19, "xmlchildformatter"]], "XMLElement": [[19, "xmlelement"]], "XMLElementAttribFormatter": [[19, "xmlelementattribformatter"]], "XMLElementChildren": [[19, "xmlelementchildren"]], "XMLElementEdit": [[19, "xmlelementedit"]], "XMLElementObj": [[19, "xmlelementobj"]], "XMLFormatter": [[19, "xmlformatter"]], "XMLStringFormatter": [[19, "xmlstringformatter"]], "xml functions": [[19, "xml-functions"]], "graphtage.yaml": [[20, "module-graphtage.yaml"]], "yaml classes": [[20, "yaml-classes"]], "YAML": [[20, "yaml"]], "YAMLDictFormatter": [[20, "yamldictformatter"]], "YAMLFormatter": [[20, "yamlformatter"]], "YAMLKeyValuePairFormatter": [[20, "yamlkeyvaluepairformatter"]], "YAMLListFormatter": [[20, "yamllistformatter"]], "YAMLStringFormatter": [[20, "yamlstringformatter"]], "yaml functions": [[20, "yaml-functions"]], "How Graphtage Works": [[21, "how-graphtage-works"]], "Why Mapping Trees is Complex": [[21, "why-mapping-trees-is-complex"]], "Matching Ordered Sequences": [[21, "matching-ordered-sequences"]], "Matching Unordered Collections": [[21, "matching-unordered-collections"]], "Footnotes": [[21, "footnotes"]], "Graphtage Documentation": [[22, "graphtage-documentation"]], "You want to learn how to use Graphtage as a command line utility.": [[22, null]], "You want to programmatically interact with Graphtage as a library.": [[22, null]], "You want to modify or extend Graphtage.": [[22, null]], "You are already familiar with Graphtage and just need an API reference.": [[22, null]], "You are curious and want to learn more about how Graphtage works.": [[22, null]], "Contents:": [[22, null]], "Indices and tables": [[22, "indices-and-tables"]], "Using Graphtage Programmatically": [[23, "using-graphtage-programmatically"]], "The Intermediate Representation": [[23, "the-intermediate-representation"]], "Transforming Nodes with Edits": [[23, "transforming-nodes-with-edits"]], "Applying Edits to Nodes": [[23, "applying-edits-to-nodes"]], "Formatting and Printing Results": [[23, "formatting-and-printing-results"]], "Diffing In-Memory Python Objects": [[23, "diffing-in-memory-python-objects"]], "Graphtage API": [[24, "graphtage-api"]], "Printing Protocol": [[25, "printing-protocol"]]}, "indexentries": {"abstractcompoundedit (class in graphtage)": [[1, "graphtage.AbstractCompoundEdit"]], "abstractedit (class in graphtage)": [[1, "graphtage.AbstractEdit"]], "boolnode (class in graphtage)": [[1, "graphtage.BoolNode"]], "buildoptions (class in graphtage)": [[1, "graphtage.BuildOptions"]], "compoundedit (class in graphtage)": [[1, "graphtage.CompoundEdit"]], "constantcostedit (class in graphtage)": [[1, "graphtage.ConstantCostEdit"]], "containernode (class in graphtage)": [[1, "graphtage.ContainerNode"]], "default_instance (graphtage.graphtageformatter attribute)": [[1, "graphtage.GraphtageFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.DEFAULT_INSTANCE"]], "dictnode (class in graphtage)": [[1, "graphtage.DictNode"]], "edit (class in graphtage)": [[1, "graphtage.Edit"]], "editcollection (class in graphtage)": [[1, "graphtage.EditCollection"]], "editsequence (class in graphtage)": [[1, "graphtage.EditSequence"]], "editedtreenode (class in graphtage)": [[1, "graphtage.EditedTreeNode"]], "filetype (class in graphtage)": [[1, "graphtage.Filetype"]], "filetypewatcher (class in graphtage)": [[1, "graphtage.FiletypeWatcher"]], "fixedkeydictnode (class in graphtage)": [[1, "graphtage.FixedKeyDictNode"]], "fixedkeydictnodeedit (class in graphtage)": [[1, "graphtage.FixedKeyDictNodeEdit"]], "floatnode (class in graphtage)": [[1, "graphtage.FloatNode"]], "graphtageformatter (class in graphtage)": [[1, "graphtage.GraphtageFormatter"]], "insert_string (graphtage.insert attribute)": [[1, "graphtage.Insert.INSERT_STRING"]], "insert (class in graphtage)": [[1, "graphtage.Insert"]], "integernode (class in graphtage)": [[1, "graphtage.IntegerNode"]], "keyvaluepairedit (class in graphtage)": [[1, "graphtage.KeyValuePairEdit"]], "keyvaluepairnode (class in graphtage)": [[1, "graphtage.KeyValuePairNode"]], "leafnode (class in graphtage)": [[1, "graphtage.LeafNode"]], "listnode (class in graphtage)": [[1, "graphtage.ListNode"]], "mappingnode (class in graphtage)": [[1, "graphtage.MappingNode"]], "match (class in graphtage)": [[1, "graphtage.Match"]], "multisetnode (class in graphtage)": [[1, "graphtage.MultiSetNode"]], "nullnode (class in graphtage)": [[1, "graphtage.NullNode"]], "possibleedits (class in graphtage)": [[1, "graphtage.PossibleEdits"]], "remove_string (graphtage.remove attribute)": [[1, "graphtage.Remove.REMOVE_STRING"]], "remove (class in graphtage)": [[1, "graphtage.Remove"]], "replace (class in graphtage)": [[1, "graphtage.Replace"]], "stringedit (class in graphtage)": [[1, "graphtage.StringEdit"]], "stringformatter (class in graphtage)": [[1, "graphtage.StringFormatter"]], "stringnode (class in graphtage)": [[1, "graphtage.StringNode"]], "treenode (class in graphtage)": [[1, "graphtage.TreeNode"]], "treenodemeta (class in graphtage)": [[1, "graphtage.TreeNodeMeta"]], "__contains__() (graphtage.dictnode method)": [[1, "graphtage.DictNode.__contains__"]], "__contains__() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.__contains__"]], "__eq__() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.__eq__"]], "__getattr__() (graphtage.buildoptions method)": [[1, "graphtage.BuildOptions.__getattr__"]], "__getitem__() (graphtage.dictnode method)": [[1, "graphtage.DictNode.__getitem__"]], "__getitem__() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.__getitem__"]], "__init__() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.__init__"]], "__init__() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.__init__"]], "__init__() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.__init__"]], "__init__() (graphtage.buildoptions method)": [[1, "graphtage.BuildOptions.__init__"]], "__init__() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.__init__"]], "__init__() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.__init__"]], "__init__() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.__init__"]], "__init__() (graphtage.dictnode method)": [[1, "graphtage.DictNode.__init__"]], "__init__() (graphtage.edit method)": [[1, "graphtage.Edit.__init__"]], "__init__() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.__init__"]], "__init__() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.__init__"]], "__init__() (graphtage.editedtreenode method)": [[1, "graphtage.EditedTreeNode.__init__"]], "__init__() (graphtage.filetype method)": [[1, "graphtage.Filetype.__init__"]], "__init__() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher.__init__"]], "__init__() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.__init__"]], "__init__() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.__init__"]], "__init__() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.__init__"]], "__init__() (graphtage.graphtageformatter method)": [[1, "graphtage.GraphtageFormatter.__init__"]], "__init__() (graphtage.insert method)": [[1, "graphtage.Insert.__init__"]], "__init__() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.__init__"]], "__init__() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.__init__"]], "__init__() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.__init__"]], "__init__() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.__init__"]], "__init__() (graphtage.listnode method)": [[1, "graphtage.ListNode.__init__"]], "__init__() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.__init__"]], "__init__() (graphtage.match method)": [[1, "graphtage.Match.__init__"]], "__init__() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.__init__"]], "__init__() (graphtage.nullnode method)": [[1, "graphtage.NullNode.__init__"]], "__init__() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.__init__"]], "__init__() (graphtage.remove method)": [[1, "graphtage.Remove.__init__"]], "__init__() (graphtage.replace method)": [[1, "graphtage.Replace.__init__"]], "__init__() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.__init__"]], "__init__() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.__init__"]], "__init__() (graphtage.stringnode method)": [[1, "graphtage.StringNode.__init__"]], "__init__() (graphtage.treenode method)": [[1, "graphtage.TreeNode.__init__"]], "__init__() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.__init__"]], "__instancecheck__() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher.__instancecheck__"]], "__instancecheck__() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.__instancecheck__"]], "__iter__() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.__iter__"]], "__iter__() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.__iter__"]], "__iter__() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.__iter__"]], "__iter__() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.__iter__"]], "__iter__() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.__iter__"]], "__iter__() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.__iter__"]], "__iter__() (graphtage.listnode method)": [[1, "graphtage.ListNode.__iter__"]], "__iter__() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.__iter__"]], "__iter__() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.__iter__"]], "__len__() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.__len__"]], "__len__() (graphtage.listnode method)": [[1, "graphtage.ListNode.__len__"]], "__lt__() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.__lt__"]], "__lt__() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.__lt__"]], "__lt__() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.__lt__"]], "__lt__() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.__lt__"]], "__lt__() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.__lt__"]], "__lt__() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.__lt__"]], "__lt__() (graphtage.insert method)": [[1, "graphtage.Insert.__lt__"]], "__lt__() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.__lt__"]], "__lt__() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.__lt__"]], "__lt__() (graphtage.match method)": [[1, "graphtage.Match.__lt__"]], "__lt__() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.__lt__"]], "__lt__() (graphtage.remove method)": [[1, "graphtage.Remove.__lt__"]], "__lt__() (graphtage.replace method)": [[1, "graphtage.Replace.__lt__"]], "__lt__() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.__lt__"]], "__new__() (graphtage.graphtageformatter static method)": [[1, "graphtage.GraphtageFormatter.__new__"]], "__new__() (graphtage.stringformatter static method)": [[1, "graphtage.StringFormatter.__new__"]], "__subclasscheck__() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher.__subclasscheck__"]], "__subclasscheck__() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.__subclasscheck__"]], "_abc_caches_clear() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher._abc_caches_clear"]], "_abc_caches_clear() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta._abc_caches_clear"]], "_abc_registry_clear() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher._abc_registry_clear"]], "_abc_registry_clear() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta._abc_registry_clear"]], "_dump_registry() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher._dump_registry"]], "_dump_registry() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta._dump_registry"]], "all_children_are_leaves() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.dictnode method)": [[1, "graphtage.DictNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.listnode method)": [[1, "graphtage.ListNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.all_children_are_leaves"]], "best_possibility() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.best_possibility"]], "bounds() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.bounds"]], "bounds() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.bounds"]], "bounds() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.bounds"]], "bounds() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.bounds"]], "bounds() (graphtage.edit method)": [[1, "graphtage.Edit.bounds"]], "bounds() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.bounds"]], "bounds() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.bounds"]], "bounds() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.bounds"]], "bounds() (graphtage.insert method)": [[1, "graphtage.Insert.bounds"]], "bounds() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.bounds"]], "bounds() (graphtage.match method)": [[1, "graphtage.Match.bounds"]], "bounds() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.bounds"]], "bounds() (graphtage.remove method)": [[1, "graphtage.Remove.bounds"]], "bounds() (graphtage.replace method)": [[1, "graphtage.Replace.bounds"]], "bounds() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.bounds"]], "build_tree() (graphtage.filetype method)": [[1, "graphtage.Filetype.build_tree"]], "build_tree_handling_errors() (graphtage.filetype method)": [[1, "graphtage.Filetype.build_tree_handling_errors"]], "calculate_total_size() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.calculate_total_size"]], "calculate_total_size() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.calculate_total_size"]], "calculate_total_size() (graphtage.dictnode method)": [[1, "graphtage.DictNode.calculate_total_size"]], "calculate_total_size() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.calculate_total_size"]], "calculate_total_size() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.calculate_total_size"]], "calculate_total_size() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.calculate_total_size"]], "calculate_total_size() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.calculate_total_size"]], "calculate_total_size() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.calculate_total_size"]], "calculate_total_size() (graphtage.listnode method)": [[1, "graphtage.ListNode.calculate_total_size"]], "calculate_total_size() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.calculate_total_size"]], "calculate_total_size() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.calculate_total_size"]], "calculate_total_size() (graphtage.nullnode method)": [[1, "graphtage.NullNode.calculate_total_size"]], "calculate_total_size() (graphtage.stringnode method)": [[1, "graphtage.StringNode.calculate_total_size"]], "calculate_total_size() (graphtage.treenode method)": [[1, "graphtage.TreeNode.calculate_total_size"]], "children() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.children"]], "children() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.children"]], "children() (graphtage.dictnode method)": [[1, "graphtage.DictNode.children"]], "children() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.children"]], "children() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.children"]], "children() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.children"]], "children() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.children"]], "children() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.children"]], "children() (graphtage.listnode method)": [[1, "graphtage.ListNode.children"]], "children() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.children"]], "children() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.children"]], "children() (graphtage.nullnode method)": [[1, "graphtage.NullNode.children"]], "children() (graphtage.stringnode method)": [[1, "graphtage.StringNode.children"]], "children() (graphtage.treenode method)": [[1, "graphtage.TreeNode.children"]], "container_type (graphtage.dictnode property)": [[1, "graphtage.DictNode.container_type"]], "container_type (graphtage.fixedkeydictnode property)": [[1, "graphtage.FixedKeyDictNode.container_type"]], "container_type (graphtage.listnode property)": [[1, "graphtage.ListNode.container_type"]], "container_type (graphtage.multisetnode property)": [[1, "graphtage.MultiSetNode.container_type"]], "context() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.context"]], "dfs() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.dfs"]], "dfs() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.dfs"]], "dfs() (graphtage.dictnode method)": [[1, "graphtage.DictNode.dfs"]], "dfs() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.dfs"]], "dfs() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.dfs"]], "dfs() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.dfs"]], "dfs() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.dfs"]], "dfs() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.dfs"]], "dfs() (graphtage.listnode method)": [[1, "graphtage.ListNode.dfs"]], "dfs() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.dfs"]], "dfs() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.dfs"]], "dfs() (graphtage.nullnode method)": [[1, "graphtage.NullNode.dfs"]], "dfs() (graphtage.stringnode method)": [[1, "graphtage.StringNode.dfs"]], "dfs() (graphtage.treenode method)": [[1, "graphtage.TreeNode.dfs"]], "diff() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.diff"]], "diff() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.diff"]], "diff() (graphtage.dictnode method)": [[1, "graphtage.DictNode.diff"]], "diff() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.diff"]], "diff() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.diff"]], "diff() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.diff"]], "diff() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.diff"]], "diff() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.diff"]], "diff() (graphtage.listnode method)": [[1, "graphtage.ListNode.diff"]], "diff() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.diff"]], "diff() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.diff"]], "diff() (graphtage.nullnode method)": [[1, "graphtage.NullNode.diff"]], "diff() (graphtage.stringnode method)": [[1, "graphtage.StringNode.diff"]], "diff() (graphtage.treenode method)": [[1, "graphtage.TreeNode.diff"]], "edit_modifiers (graphtage.boolnode attribute)": [[1, "graphtage.BoolNode.edit_modifiers"]], "edit_modifiers (graphtage.containernode attribute)": [[1, "graphtage.ContainerNode.edit_modifiers"]], "edit_modifiers (graphtage.dictnode attribute)": [[1, "graphtage.DictNode.edit_modifiers"]], "edit_modifiers (graphtage.fixedkeydictnode attribute)": [[1, "graphtage.FixedKeyDictNode.edit_modifiers"]], "edit_modifiers (graphtage.floatnode attribute)": [[1, "graphtage.FloatNode.edit_modifiers"]], "edit_modifiers (graphtage.integernode attribute)": [[1, "graphtage.IntegerNode.edit_modifiers"]], "edit_modifiers (graphtage.keyvaluepairnode attribute)": [[1, "graphtage.KeyValuePairNode.edit_modifiers"]], "edit_modifiers (graphtage.leafnode attribute)": [[1, "graphtage.LeafNode.edit_modifiers"]], "edit_modifiers (graphtage.listnode attribute)": [[1, "graphtage.ListNode.edit_modifiers"]], "edit_modifiers (graphtage.mappingnode attribute)": [[1, "graphtage.MappingNode.edit_modifiers"]], "edit_modifiers (graphtage.multisetnode attribute)": [[1, "graphtage.MultiSetNode.edit_modifiers"]], "edit_modifiers (graphtage.nullnode attribute)": [[1, "graphtage.NullNode.edit_modifiers"]], "edit_modifiers (graphtage.stringnode attribute)": [[1, "graphtage.StringNode.edit_modifiers"]], "edit_modifiers (graphtage.treenode attribute)": [[1, "graphtage.TreeNode.edit_modifiers"]], "editable_dict() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.editable_dict"]], "editable_dict() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.editable_dict"]], "editable_dict() (graphtage.dictnode method)": [[1, "graphtage.DictNode.editable_dict"]], "editable_dict() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.editable_dict"]], "editable_dict() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.editable_dict"]], "editable_dict() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.editable_dict"]], "editable_dict() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.editable_dict"]], "editable_dict() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.editable_dict"]], "editable_dict() (graphtage.listnode method)": [[1, "graphtage.ListNode.editable_dict"]], "editable_dict() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.editable_dict"]], "editable_dict() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.editable_dict"]], "editable_dict() (graphtage.nullnode method)": [[1, "graphtage.NullNode.editable_dict"]], "editable_dict() (graphtage.stringnode method)": [[1, "graphtage.StringNode.editable_dict"]], "editable_dict() (graphtage.treenode method)": [[1, "graphtage.TreeNode.editable_dict"]], "edited (graphtage.boolnode property)": [[1, "graphtage.BoolNode.edited"]], "edited (graphtage.containernode property)": [[1, "graphtage.ContainerNode.edited"]], "edited (graphtage.dictnode property)": [[1, "graphtage.DictNode.edited"]], "edited (graphtage.editedtreenode property)": [[1, "graphtage.EditedTreeNode.edited"]], "edited (graphtage.fixedkeydictnode property)": [[1, "graphtage.FixedKeyDictNode.edited"]], "edited (graphtage.floatnode property)": [[1, "graphtage.FloatNode.edited"]], "edited (graphtage.integernode property)": [[1, "graphtage.IntegerNode.edited"]], "edited (graphtage.keyvaluepairnode property)": [[1, "graphtage.KeyValuePairNode.edited"]], "edited (graphtage.leafnode property)": [[1, "graphtage.LeafNode.edited"]], "edited (graphtage.listnode property)": [[1, "graphtage.ListNode.edited"]], "edited (graphtage.mappingnode property)": [[1, "graphtage.MappingNode.edited"]], "edited (graphtage.multisetnode property)": [[1, "graphtage.MultiSetNode.edited"]], "edited (graphtage.nullnode property)": [[1, "graphtage.NullNode.edited"]], "edited (graphtage.stringnode property)": [[1, "graphtage.StringNode.edited"]], "edited (graphtage.treenode property)": [[1, "graphtage.TreeNode.edited"]], "edited_cost() (graphtage.editedtreenode method)": [[1, "graphtage.EditedTreeNode.edited_cost"]], "edited_type() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.edited_type"]], "edits() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.edits"]], "edits() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.edits"]], "edits() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.edits"]], "edits() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.edits"]], "edits() (graphtage.dictnode method)": [[1, "graphtage.DictNode.edits"]], "edits() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.edits"]], "edits() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.edits"]], "edits() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.edits"]], "edits() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.edits"]], "edits() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.edits"]], "edits() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.edits"]], "edits() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.edits"]], "edits() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.edits"]], "edits() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.edits"]], "edits() (graphtage.listnode method)": [[1, "graphtage.ListNode.edits"]], "edits() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.edits"]], "edits() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.edits"]], "edits() (graphtage.nullnode method)": [[1, "graphtage.NullNode.edits"]], "edits() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.edits"]], "edits() (graphtage.stringnode method)": [[1, "graphtage.StringNode.edits"]], "edits() (graphtage.treenode method)": [[1, "graphtage.TreeNode.edits"]], "escape() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.escape"]], "explode_edits() (in module graphtage)": [[1, "graphtage.explode_edits"]], "from_dict() (graphtage.dictnode class method)": [[1, "graphtage.DictNode.from_dict"]], "from_dict() (graphtage.fixedkeydictnode class method)": [[1, "graphtage.FixedKeyDictNode.from_dict"]], "from_dict() (graphtage.mappingnode class method)": [[1, "graphtage.MappingNode.from_dict"]], "from_node (graphtage.abstractcompoundedit attribute)": [[1, "graphtage.AbstractCompoundEdit.from_node"]], "from_node (graphtage.abstractedit attribute)": [[1, "graphtage.AbstractEdit.from_node"]], "from_node (graphtage.compoundedit attribute)": [[1, "graphtage.CompoundEdit.from_node"]], "from_node (graphtage.constantcostedit attribute)": [[1, "graphtage.ConstantCostEdit.from_node"]], "from_node (graphtage.edit attribute)": [[1, "graphtage.Edit.from_node"], [1, "id0"]], "from_node (graphtage.editcollection attribute)": [[1, "graphtage.EditCollection.from_node"]], "from_node (graphtage.editsequence attribute)": [[1, "graphtage.EditSequence.from_node"]], "from_node (graphtage.fixedkeydictnodeedit attribute)": [[1, "graphtage.FixedKeyDictNodeEdit.from_node"]], "from_node (graphtage.insert attribute)": [[1, "graphtage.Insert.from_node"]], "from_node (graphtage.keyvaluepairedit attribute)": [[1, "graphtage.KeyValuePairEdit.from_node"]], "from_node (graphtage.match attribute)": [[1, "graphtage.Match.from_node"]], "from_node (graphtage.possibleedits attribute)": [[1, "graphtage.PossibleEdits.from_node"]], "from_node (graphtage.remove attribute)": [[1, "graphtage.Remove.from_node"]], "from_node (graphtage.replace attribute)": [[1, "graphtage.Replace.from_node"]], "from_node (graphtage.stringedit attribute)": [[1, "graphtage.StringEdit.from_node"]], "get_all_edit_contexts() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.dictnode method)": [[1, "graphtage.DictNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.listnode method)": [[1, "graphtage.ListNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.nullnode method)": [[1, "graphtage.NullNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.stringnode method)": [[1, "graphtage.StringNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.treenode method)": [[1, "graphtage.TreeNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.get_all_edits"]], "get_all_edits() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.get_all_edits"]], "get_all_edits() (graphtage.dictnode method)": [[1, "graphtage.DictNode.get_all_edits"]], "get_all_edits() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.get_all_edits"]], "get_all_edits() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.get_all_edits"]], "get_all_edits() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.get_all_edits"]], "get_all_edits() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.get_all_edits"]], "get_all_edits() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.get_all_edits"]], "get_all_edits() (graphtage.listnode method)": [[1, "graphtage.ListNode.get_all_edits"]], "get_all_edits() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.get_all_edits"]], "get_all_edits() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.get_all_edits"]], "get_all_edits() (graphtage.nullnode method)": [[1, "graphtage.NullNode.get_all_edits"]], "get_all_edits() (graphtage.stringnode method)": [[1, "graphtage.StringNode.get_all_edits"]], "get_all_edits() (graphtage.treenode method)": [[1, "graphtage.TreeNode.get_all_edits"]], "get_default_formatter() (graphtage.filetype method)": [[1, "graphtage.Filetype.get_default_formatter"]], "get_filetype() (in module graphtage)": [[1, "graphtage.get_filetype"]], "get_formatter() (graphtage.graphtageformatter method)": [[1, "graphtage.GraphtageFormatter.get_formatter"]], "get_formatter() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.get_formatter"]], "graphtage": [[1, "module-graphtage"]], "has_non_zero_cost() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.edit method)": [[1, "graphtage.Edit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.insert method)": [[1, "graphtage.Insert.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.match method)": [[1, "graphtage.Match.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.remove method)": [[1, "graphtage.Remove.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.replace method)": [[1, "graphtage.Replace.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.has_non_zero_cost"]], "initial_bounds (graphtage.abstractcompoundedit attribute)": [[1, "graphtage.AbstractCompoundEdit.initial_bounds"]], "initial_bounds (graphtage.abstractedit attribute)": [[1, "graphtage.AbstractEdit.initial_bounds"]], "initial_bounds (graphtage.compoundedit attribute)": [[1, "graphtage.CompoundEdit.initial_bounds"]], "initial_bounds (graphtage.constantcostedit attribute)": [[1, "graphtage.ConstantCostEdit.initial_bounds"]], "initial_bounds (graphtage.edit attribute)": [[1, "graphtage.Edit.initial_bounds"], [1, "id1"]], "initial_bounds (graphtage.editcollection attribute)": [[1, "graphtage.EditCollection.initial_bounds"]], "initial_bounds (graphtage.editsequence attribute)": [[1, "graphtage.EditSequence.initial_bounds"]], "initial_bounds (graphtage.fixedkeydictnodeedit attribute)": [[1, "graphtage.FixedKeyDictNodeEdit.initial_bounds"]], "initial_bounds (graphtage.insert attribute)": [[1, "graphtage.Insert.initial_bounds"]], "initial_bounds (graphtage.keyvaluepairedit attribute)": [[1, "graphtage.KeyValuePairEdit.initial_bounds"]], "initial_bounds (graphtage.match attribute)": [[1, "graphtage.Match.initial_bounds"]], "initial_bounds (graphtage.possibleedits attribute)": [[1, "graphtage.PossibleEdits.initial_bounds"]], "initial_bounds (graphtage.remove attribute)": [[1, "graphtage.Remove.initial_bounds"]], "initial_bounds (graphtage.replace attribute)": [[1, "graphtage.Replace.initial_bounds"]], "initial_bounds (graphtage.stringedit attribute)": [[1, "graphtage.StringEdit.initial_bounds"]], "insert_into (graphtage.insert property)": [[1, "graphtage.Insert.insert_into"]], "is_complete() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.is_complete"]], "is_complete() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.is_complete"]], "is_complete() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.is_complete"]], "is_complete() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.is_complete"]], "is_complete() (graphtage.edit method)": [[1, "graphtage.Edit.is_complete"]], "is_complete() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.is_complete"]], "is_complete() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.is_complete"]], "is_complete() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.is_complete"]], "is_complete() (graphtage.insert method)": [[1, "graphtage.Insert.is_complete"]], "is_complete() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.is_complete"]], "is_complete() (graphtage.match method)": [[1, "graphtage.Match.is_complete"]], "is_complete() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.is_complete"]], "is_complete() (graphtage.remove method)": [[1, "graphtage.Remove.is_complete"]], "is_complete() (graphtage.replace method)": [[1, "graphtage.Replace.is_complete"]], "is_complete() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.is_complete"]], "is_leaf (graphtage.boolnode property)": [[1, "graphtage.BoolNode.is_leaf"]], "is_leaf (graphtage.containernode property)": [[1, "graphtage.ContainerNode.is_leaf"]], "is_leaf (graphtage.dictnode property)": [[1, "graphtage.DictNode.is_leaf"]], "is_leaf (graphtage.fixedkeydictnode property)": [[1, "graphtage.FixedKeyDictNode.is_leaf"]], "is_leaf (graphtage.floatnode property)": [[1, "graphtage.FloatNode.is_leaf"]], "is_leaf (graphtage.integernode property)": [[1, "graphtage.IntegerNode.is_leaf"]], "is_leaf (graphtage.keyvaluepairnode property)": [[1, "graphtage.KeyValuePairNode.is_leaf"]], "is_leaf (graphtage.leafnode property)": [[1, "graphtage.LeafNode.is_leaf"]], "is_leaf (graphtage.listnode property)": [[1, "graphtage.ListNode.is_leaf"]], "is_leaf (graphtage.mappingnode property)": [[1, "graphtage.MappingNode.is_leaf"]], "is_leaf (graphtage.multisetnode property)": [[1, "graphtage.MultiSetNode.is_leaf"]], "is_leaf (graphtage.nullnode property)": [[1, "graphtage.NullNode.is_leaf"]], "is_leaf (graphtage.stringnode property)": [[1, "graphtage.StringNode.is_leaf"]], "is_leaf (graphtage.treenode property)": [[1, "graphtage.TreeNode.is_leaf"]], "is_partial (graphtage.graphtageformatter attribute)": [[1, "graphtage.GraphtageFormatter.is_partial"]], "is_partial (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.is_partial"]], "is_quoted (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.is_quoted"]], "items() (graphtage.dictnode method)": [[1, "graphtage.DictNode.items"]], "items() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.items"]], "items() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.items"]], "make_edited() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.make_edited"]], "make_edited() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.make_edited"]], "make_edited() (graphtage.dictnode method)": [[1, "graphtage.DictNode.make_edited"]], "make_edited() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.make_edited"]], "make_edited() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.make_edited"]], "make_edited() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.make_edited"]], "make_edited() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.make_edited"]], "make_edited() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.make_edited"]], "make_edited() (graphtage.listnode method)": [[1, "graphtage.ListNode.make_edited"]], "make_edited() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.make_edited"]], "make_edited() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.make_edited"]], "make_edited() (graphtage.nullnode method)": [[1, "graphtage.NullNode.make_edited"]], "make_edited() (graphtage.stringnode method)": [[1, "graphtage.StringNode.make_edited"]], "make_edited() (graphtage.treenode method)": [[1, "graphtage.TreeNode.make_edited"]], "make_key_value_pair_node() (graphtage.dictnode class method)": [[1, "graphtage.DictNode.make_key_value_pair_node"]], "make_key_value_pair_node() (graphtage.fixedkeydictnode class method)": [[1, "graphtage.FixedKeyDictNode.make_key_value_pair_node"]], "make_key_value_pair_node() (graphtage.mappingnode class method)": [[1, "graphtage.MappingNode.make_key_value_pair_node"]], "module": [[1, "module-graphtage"], [2, "module-graphtage.bounds"], [3, "module-graphtage.csv"], [4, "module-graphtage.expressions"], [5, "module-graphtage.fibonacci"], [6, "module-graphtage.formatter"], [7, "module-graphtage.json"], [8, "module-graphtage.levenshtein"], [9, "module-graphtage.matching"], [10, "module-graphtage.multiset"], [11, "module-graphtage.plist"], [12, "module-graphtage.printer"], [13, "module-graphtage.progress"], [14, "module-graphtage.pydiff"], [15, "module-graphtage.search"], [16, "module-graphtage.sequences"], [17, "module-graphtage.utils"], [18, "module-graphtage.version"], [19, "module-graphtage.xml"], [20, "module-graphtage.yaml"]], "mro() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher.mro"]], "mro() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.mro"]], "on_diff() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.on_diff"]], "on_diff() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.on_diff"]], "on_diff() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.on_diff"]], "on_diff() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.on_diff"]], "on_diff() (graphtage.edit method)": [[1, "graphtage.Edit.on_diff"]], "on_diff() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.on_diff"]], "on_diff() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.on_diff"]], "on_diff() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.on_diff"]], "on_diff() (graphtage.insert method)": [[1, "graphtage.Insert.on_diff"]], "on_diff() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.on_diff"]], "on_diff() (graphtage.match method)": [[1, "graphtage.Match.on_diff"]], "on_diff() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.on_diff"]], "on_diff() (graphtage.remove method)": [[1, "graphtage.Remove.on_diff"]], "on_diff() (graphtage.replace method)": [[1, "graphtage.Replace.on_diff"]], "on_diff() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.on_diff"]], "parent (graphtage.boolnode property)": [[1, "graphtage.BoolNode.parent"]], "parent (graphtage.containernode property)": [[1, "graphtage.ContainerNode.parent"]], "parent (graphtage.dictnode property)": [[1, "graphtage.DictNode.parent"]], "parent (graphtage.fixedkeydictnode property)": [[1, "graphtage.FixedKeyDictNode.parent"]], "parent (graphtage.floatnode property)": [[1, "graphtage.FloatNode.parent"]], "parent (graphtage.graphtageformatter attribute)": [[1, "graphtage.GraphtageFormatter.parent"]], "parent (graphtage.integernode property)": [[1, "graphtage.IntegerNode.parent"]], "parent (graphtage.keyvaluepairnode property)": [[1, "graphtage.KeyValuePairNode.parent"]], "parent (graphtage.leafnode property)": [[1, "graphtage.LeafNode.parent"]], "parent (graphtage.listnode property)": [[1, "graphtage.ListNode.parent"]], "parent (graphtage.mappingnode property)": [[1, "graphtage.MappingNode.parent"]], "parent (graphtage.multisetnode property)": [[1, "graphtage.MultiSetNode.parent"]], "parent (graphtage.nullnode property)": [[1, "graphtage.NullNode.parent"]], "parent (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.parent"]], "parent (graphtage.stringnode property)": [[1, "graphtage.StringNode.parent"]], "parent (graphtage.treenode property)": [[1, "graphtage.TreeNode.parent"]], "print() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.print"]], "print() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.print"]], "print() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.print"]], "print() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.print"]], "print() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.print"]], "print() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.print"]], "print() (graphtage.dictnode method)": [[1, "graphtage.DictNode.print"]], "print() (graphtage.edit method)": [[1, "graphtage.Edit.print"]], "print() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.print"]], "print() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.print"]], "print() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.print"]], "print() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.print"]], "print() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.print"]], "print() (graphtage.graphtageformatter method)": [[1, "graphtage.GraphtageFormatter.print"]], "print() (graphtage.insert method)": [[1, "graphtage.Insert.print"]], "print() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.print"]], "print() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.print"]], "print() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.print"]], "print() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.print"]], "print() (graphtage.listnode method)": [[1, "graphtage.ListNode.print"]], "print() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.print"]], "print() (graphtage.match method)": [[1, "graphtage.Match.print"]], "print() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.print"]], "print() (graphtage.nullnode method)": [[1, "graphtage.NullNode.print"]], "print() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.print"]], "print() (graphtage.remove method)": [[1, "graphtage.Remove.print"]], "print() (graphtage.replace method)": [[1, "graphtage.Replace.print"]], "print() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.print"]], "print() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.print"]], "print() (graphtage.stringnode method)": [[1, "graphtage.StringNode.print"]], "print() (graphtage.treenode method)": [[1, "graphtage.TreeNode.print"]], "print_stringedit() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.print_StringNode"]], "print_parent_context() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.print_parent_context"]], "print_parent_context() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.print_parent_context"]], "print_parent_context() (graphtage.dictnode method)": [[1, "graphtage.DictNode.print_parent_context"]], "print_parent_context() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.print_parent_context"]], "print_parent_context() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.print_parent_context"]], "print_parent_context() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.print_parent_context"]], "print_parent_context() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.print_parent_context"]], "print_parent_context() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.print_parent_context"]], "print_parent_context() (graphtage.listnode method)": [[1, "graphtage.ListNode.print_parent_context"]], "print_parent_context() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.print_parent_context"]], "print_parent_context() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.print_parent_context"]], "print_parent_context() (graphtage.nullnode method)": [[1, "graphtage.NullNode.print_parent_context"]], "print_parent_context() (graphtage.stringnode method)": [[1, "graphtage.StringNode.print_parent_context"]], "print_parent_context() (graphtage.treenode method)": [[1, "graphtage.TreeNode.print_parent_context"]], "register() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher.register"]], "register() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.register"]], "root (graphtage.graphtageformatter property)": [[1, "graphtage.GraphtageFormatter.root"]], "root (graphtage.stringformatter property)": [[1, "graphtage.StringFormatter.root"]], "sequence (graphtage.fixedkeydictnodeedit property)": [[1, "graphtage.FixedKeyDictNodeEdit.sequence"]], "string_edit_distance() (in module graphtage)": [[1, "graphtage.string_edit_distance"]], "sub_format_types (graphtage.graphtageformatter attribute)": [[1, "graphtage.GraphtageFormatter.sub_format_types"]], "sub_format_types (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.sub_format_types"]], "sub_formatters (graphtage.graphtageformatter attribute)": [[1, "graphtage.GraphtageFormatter.sub_formatters"]], "sub_formatters (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.sub_formatters"]], "tighten_bounds() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.tighten_bounds"]], "tighten_bounds() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.tighten_bounds"]], "tighten_bounds() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.tighten_bounds"]], "tighten_bounds() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.tighten_bounds"]], "tighten_bounds() (graphtage.edit method)": [[1, "graphtage.Edit.tighten_bounds"]], "tighten_bounds() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.tighten_bounds"]], "tighten_bounds() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.tighten_bounds"]], "tighten_bounds() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.tighten_bounds"]], "tighten_bounds() (graphtage.insert method)": [[1, "graphtage.Insert.tighten_bounds"]], "tighten_bounds() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.tighten_bounds"]], "tighten_bounds() (graphtage.match method)": [[1, "graphtage.Match.tighten_bounds"]], "tighten_bounds() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.tighten_bounds"]], "tighten_bounds() (graphtage.remove method)": [[1, "graphtage.Remove.tighten_bounds"]], "tighten_bounds() (graphtage.replace method)": [[1, "graphtage.Replace.tighten_bounds"]], "tighten_bounds() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.tighten_bounds"]], "to_insert (graphtage.insert property)": [[1, "graphtage.Insert.to_insert"]], "to_obj() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.to_obj"]], "to_obj() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.to_obj"]], "to_obj() (graphtage.dictnode method)": [[1, "graphtage.DictNode.to_obj"]], "to_obj() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.to_obj"]], "to_obj() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.to_obj"]], "to_obj() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.to_obj"]], "to_obj() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.to_obj"]], "to_obj() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.to_obj"]], "to_obj() (graphtage.listnode method)": [[1, "graphtage.ListNode.to_obj"]], "to_obj() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.to_obj"]], "to_obj() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.to_obj"]], "to_obj() (graphtage.nullnode method)": [[1, "graphtage.NullNode.to_obj"]], "to_obj() (graphtage.stringnode method)": [[1, "graphtage.StringNode.to_obj"]], "to_obj() (graphtage.treenode method)": [[1, "graphtage.TreeNode.to_obj"]], "total_size (graphtage.boolnode property)": [[1, "graphtage.BoolNode.total_size"]], "total_size (graphtage.containernode property)": [[1, "graphtage.ContainerNode.total_size"]], "total_size (graphtage.dictnode property)": [[1, "graphtage.DictNode.total_size"]], "total_size (graphtage.fixedkeydictnode property)": [[1, "graphtage.FixedKeyDictNode.total_size"]], "total_size (graphtage.floatnode property)": [[1, "graphtage.FloatNode.total_size"]], "total_size (graphtage.integernode property)": [[1, "graphtage.IntegerNode.total_size"]], "total_size (graphtage.keyvaluepairnode property)": [[1, "graphtage.KeyValuePairNode.total_size"]], "total_size (graphtage.leafnode property)": [[1, "graphtage.LeafNode.total_size"]], "total_size (graphtage.listnode property)": [[1, "graphtage.ListNode.total_size"]], "total_size (graphtage.mappingnode property)": [[1, "graphtage.MappingNode.total_size"]], "total_size (graphtage.multisetnode property)": [[1, "graphtage.MultiSetNode.total_size"]], "total_size (graphtage.nullnode property)": [[1, "graphtage.NullNode.total_size"]], "total_size (graphtage.stringnode property)": [[1, "graphtage.StringNode.total_size"]], "total_size (graphtage.treenode property)": [[1, "graphtage.TreeNode.total_size"]], "valid (graphtage.abstractcompoundedit property)": [[1, "graphtage.AbstractCompoundEdit.valid"]], "valid (graphtage.abstractedit property)": [[1, "graphtage.AbstractEdit.valid"]], "valid (graphtage.compoundedit property)": [[1, "graphtage.CompoundEdit.valid"]], "valid (graphtage.constantcostedit property)": [[1, "graphtage.ConstantCostEdit.valid"]], "valid (graphtage.edit property)": [[1, "graphtage.Edit.valid"]], "valid (graphtage.editcollection property)": [[1, "graphtage.EditCollection.valid"]], "valid (graphtage.editsequence property)": [[1, "graphtage.EditSequence.valid"]], "valid (graphtage.fixedkeydictnodeedit property)": [[1, "graphtage.FixedKeyDictNodeEdit.valid"]], "valid (graphtage.insert property)": [[1, "graphtage.Insert.valid"]], "valid (graphtage.keyvaluepairedit property)": [[1, "graphtage.KeyValuePairEdit.valid"]], "valid (graphtage.match property)": [[1, "graphtage.Match.valid"]], "valid (graphtage.possibleedits property)": [[1, "graphtage.PossibleEdits.valid"]], "valid (graphtage.remove property)": [[1, "graphtage.Remove.valid"]], "valid (graphtage.replace property)": [[1, "graphtage.Replace.valid"]], "valid (graphtage.stringedit property)": [[1, "graphtage.StringEdit.valid"]], "write_char() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.write_char"]], "write_end_quote() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.write_end_quote"]], "write_start_quote() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.write_start_quote"]], "bounded (class in graphtage.bounds)": [[2, "graphtage.bounds.Bounded"]], "boundedcomparator (class in graphtage.bounds)": [[2, "graphtage.bounds.BoundedComparator"]], "constantbound (class in graphtage.bounds)": [[2, "graphtage.bounds.ConstantBound"]], "infinity (class in graphtage.bounds)": [[2, "graphtage.bounds.Infinity"]], "negative_infinity (in module graphtage.bounds)": [[2, "graphtage.bounds.NEGATIVE_INFINITY"]], "positive_infinity (in module graphtage.bounds)": [[2, "graphtage.bounds.POSITIVE_INFINITY"]], "range (class in graphtage.bounds)": [[2, "graphtage.bounds.Range"]], "__init__() (graphtage.bounds.bounded method)": [[2, "graphtage.bounds.Bounded.__init__"]], "__init__() (graphtage.bounds.boundedcomparator method)": [[2, "graphtage.bounds.BoundedComparator.__init__"]], "__init__() (graphtage.bounds.constantbound method)": [[2, "graphtage.bounds.ConstantBound.__init__"]], "__init__() (graphtage.bounds.infinity method)": [[2, "graphtage.bounds.Infinity.__init__"]], "__init__() (graphtage.bounds.range method)": [[2, "graphtage.bounds.Range.__init__"]], "__lt__() (graphtage.bounds.boundedcomparator method)": [[2, "graphtage.bounds.BoundedComparator.__lt__"]], "bounded (graphtage.bounds.boundedcomparator attribute)": [[2, "graphtage.bounds.BoundedComparator.bounded"]], "bounds() (graphtage.bounds.bounded method)": [[2, "graphtage.bounds.Bounded.bounds"]], "bounds() (graphtage.bounds.constantbound method)": [[2, "graphtage.bounds.ConstantBound.bounds"]], "definitive() (graphtage.bounds.range method)": [[2, "graphtage.bounds.Range.definitive"]], "dominates() (graphtage.bounds.range method)": [[2, "graphtage.bounds.Range.dominates"]], "finite (graphtage.bounds.range property)": [[2, "graphtage.bounds.Range.finite"]], "graphtage.bounds": [[2, "module-graphtage.bounds"]], "intersect() (graphtage.bounds.range method)": [[2, "graphtage.bounds.Range.intersect"]], "lower_bound (graphtage.bounds.range attribute)": [[2, "graphtage.bounds.Range.lower_bound"]], "make_distinct() (in module graphtage.bounds)": [[2, "graphtage.bounds.make_distinct"]], "min_bounded() (in module graphtage.bounds)": [[2, "graphtage.bounds.min_bounded"]], "positive (graphtage.bounds.infinity property)": [[2, "graphtage.bounds.Infinity.positive"]], "repeat_until_tightened() (in module graphtage.bounds)": [[2, "graphtage.bounds.repeat_until_tightened"]], "sort() (in module graphtage.bounds)": [[2, "graphtage.bounds.sort"]], "tighten_bounds() (graphtage.bounds.bounded method)": [[2, "graphtage.bounds.Bounded.tighten_bounds"]], "tighten_bounds() (graphtage.bounds.constantbound method)": [[2, "graphtage.bounds.ConstantBound.tighten_bounds"]], "to_interval() (graphtage.bounds.range method)": [[2, "graphtage.bounds.Range.to_interval"]], "upper_bound (graphtage.bounds.range attribute)": [[2, "graphtage.bounds.Range.upper_bound"]], "csv (class in graphtage.csv)": [[3, "graphtage.csv.CSV"]], "csvformatter (class in graphtage.csv)": [[3, "graphtage.csv.CSVFormatter"]], "csvnode (class in graphtage.csv)": [[3, "graphtage.csv.CSVNode"]], "csvrow (class in graphtage.csv)": [[3, "graphtage.csv.CSVRow"]], "csvrowformatter (class in graphtage.csv)": [[3, "graphtage.csv.CSVRowFormatter"]], "csvrows (class in graphtage.csv)": [[3, "graphtage.csv.CSVRows"]], "default_instance (graphtage.csv.csvformatter attribute)": [[3, "graphtage.csv.CSVFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.csv.csvrowformatter attribute)": [[3, "graphtage.csv.CSVRowFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.csv.csvrows attribute)": [[3, "graphtage.csv.CSVRows.DEFAULT_INSTANCE"]], "__init__() (graphtage.csv.csv method)": [[3, "graphtage.csv.CSV.__init__"]], "__init__() (graphtage.csv.csvformatter method)": [[3, "graphtage.csv.CSVFormatter.__init__"]], "__init__() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.__init__"]], "__init__() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.__init__"]], "__init__() (graphtage.csv.csvrowformatter method)": [[3, "graphtage.csv.CSVRowFormatter.__init__"]], "__init__() (graphtage.csv.csvrows method)": [[3, "graphtage.csv.CSVRows.__init__"]], "__iter__() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.__iter__"]], "__iter__() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.__iter__"]], "__len__() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.__len__"]], "__len__() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.__len__"]], "__new__() (graphtage.csv.csvformatter static method)": [[3, "graphtage.csv.CSVFormatter.__new__"]], "__new__() (graphtage.csv.csvrowformatter static method)": [[3, "graphtage.csv.CSVRowFormatter.__new__"]], "__new__() (graphtage.csv.csvrows static method)": [[3, "graphtage.csv.CSVRows.__new__"]], "all_children_are_leaves() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.all_children_are_leaves"]], "build_tree() (graphtage.csv.csv method)": [[3, "graphtage.csv.CSV.build_tree"]], "build_tree() (in module graphtage.csv)": [[3, "graphtage.csv.build_tree"]], "build_tree_handling_errors() (graphtage.csv.csv method)": [[3, "graphtage.csv.CSV.build_tree_handling_errors"]], "calculate_total_size() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.calculate_total_size"]], "calculate_total_size() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.calculate_total_size"]], "child_indexes (graphtage.csv.csvnode attribute)": [[3, "graphtage.csv.CSVNode.child_indexes"]], "child_indexes (graphtage.csv.csvrow attribute)": [[3, "graphtage.csv.CSVRow.child_indexes"]], "children() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.children"]], "children() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.children"]], "container_type (graphtage.csv.csvnode property)": [[3, "graphtage.csv.CSVNode.container_type"]], "container_type (graphtage.csv.csvrow property)": [[3, "graphtage.csv.CSVRow.container_type"]], "dfs() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.dfs"]], "dfs() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.dfs"]], "diff() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.diff"]], "diff() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.diff"]], "edit_modifiers (graphtage.csv.csvnode attribute)": [[3, "graphtage.csv.CSVNode.edit_modifiers"]], "edit_modifiers (graphtage.csv.csvrow attribute)": [[3, "graphtage.csv.CSVRow.edit_modifiers"]], "edit_print() (graphtage.csv.csvrowformatter method)": [[3, "graphtage.csv.CSVRowFormatter.edit_print"]], "edit_print() (graphtage.csv.csvrows method)": [[3, "graphtage.csv.CSVRows.edit_print"]], "editable_dict() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.editable_dict"]], "editable_dict() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.editable_dict"]], "edited (graphtage.csv.csvnode property)": [[3, "graphtage.csv.CSVNode.edited"]], "edited (graphtage.csv.csvrow property)": [[3, "graphtage.csv.CSVRow.edited"]], "edits() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.edits"]], "edits() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.edits"]], "get_all_edit_contexts() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.get_all_edit_contexts"]], "get_all_edits() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.get_all_edits"]], "get_all_edits() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.get_all_edits"]], "get_default_formatter() (graphtage.csv.csv method)": [[3, "graphtage.csv.CSV.get_default_formatter"]], "get_formatter() (graphtage.csv.csvformatter method)": [[3, "graphtage.csv.CSVFormatter.get_formatter"]], "get_formatter() (graphtage.csv.csvrowformatter method)": [[3, "graphtage.csv.CSVRowFormatter.get_formatter"]], "get_formatter() (graphtage.csv.csvrows method)": [[3, "graphtage.csv.CSVRows.get_formatter"]], "graphtage.csv": [[3, "module-graphtage.csv"]], "is_leaf (graphtage.csv.csvnode property)": [[3, "graphtage.csv.CSVNode.is_leaf"]], "is_leaf (graphtage.csv.csvrow property)": [[3, "graphtage.csv.CSVRow.is_leaf"]], "is_partial (graphtage.csv.csvformatter attribute)": [[3, "graphtage.csv.CSVFormatter.is_partial"]], "is_partial (graphtage.csv.csvrowformatter attribute)": [[3, "graphtage.csv.CSVRowFormatter.is_partial"]], "is_partial (graphtage.csv.csvrows attribute)": [[3, "graphtage.csv.CSVRows.is_partial"]], "item_newline() (graphtage.csv.csvrowformatter method)": [[3, "graphtage.csv.CSVRowFormatter.item_newline"]], "item_newline() (graphtage.csv.csvrows method)": [[3, "graphtage.csv.CSVRows.item_newline"]], "items_indent() (graphtage.csv.csvrowformatter method)": [[3, "graphtage.csv.CSVRowFormatter.items_indent"]], "items_indent() (graphtage.csv.csvrows method)": [[3, "graphtage.csv.CSVRows.items_indent"]], "make_edited() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.make_edited"]], "make_edited() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.make_edited"]], "parent (graphtage.csv.csvformatter attribute)": [[3, "graphtage.csv.CSVFormatter.parent"]], "parent (graphtage.csv.csvnode property)": [[3, "graphtage.csv.CSVNode.parent"]], "parent (graphtage.csv.csvrow property)": [[3, "graphtage.csv.CSVRow.parent"]], "parent (graphtage.csv.csvrowformatter attribute)": [[3, "graphtage.csv.CSVRowFormatter.parent"]], "parent (graphtage.csv.csvrows attribute)": [[3, "graphtage.csv.CSVRows.parent"]], "print() (graphtage.csv.csvformatter method)": [[3, "graphtage.csv.CSVFormatter.print"]], "print() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.print"]], "print() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.print"]], "print() (graphtage.csv.csvrowformatter method)": [[3, "graphtage.csv.CSVRowFormatter.print"]], "print() (graphtage.csv.csvrows method)": [[3, "graphtage.csv.CSVRows.print"]], "print_csvnode() (graphtage.csv.csvrows method)": [[3, "graphtage.csv.CSVRows.print_CSVNode"]], "print_csvrow() (graphtage.csv.csvrowformatter method)": [[3, "graphtage.csv.CSVRowFormatter.print_CSVRow"]], "print_leafnode() (graphtage.csv.csvformatter method)": [[3, "graphtage.csv.CSVFormatter.print_LeafNode"]], "print_sequencenode() (graphtage.csv.csvrowformatter method)": [[3, "graphtage.csv.CSVRowFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.csv.csvrows method)": [[3, "graphtage.csv.CSVRows.print_SequenceNode"]], "print_parent_context() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.print_parent_context"]], "print_parent_context() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.print_parent_context"]], "root (graphtage.csv.csvformatter property)": [[3, "graphtage.csv.CSVFormatter.root"]], "root (graphtage.csv.csvrowformatter property)": [[3, "graphtage.csv.CSVRowFormatter.root"]], "root (graphtage.csv.csvrows property)": [[3, "graphtage.csv.CSVRows.root"]], "sub_format_types (graphtage.csv.csvformatter attribute)": [[3, "graphtage.csv.CSVFormatter.sub_format_types"]], "sub_format_types (graphtage.csv.csvrowformatter attribute)": [[3, "graphtage.csv.CSVRowFormatter.sub_format_types"]], "sub_format_types (graphtage.csv.csvrows attribute)": [[3, "graphtage.csv.CSVRows.sub_format_types"]], "sub_formatters (graphtage.csv.csvformatter attribute)": [[3, "graphtage.csv.CSVFormatter.sub_formatters"]], "sub_formatters (graphtage.csv.csvrowformatter attribute)": [[3, "graphtage.csv.CSVRowFormatter.sub_formatters"]], "sub_formatters (graphtage.csv.csvrows attribute)": [[3, "graphtage.csv.CSVRows.sub_formatters"]], "to_obj() (graphtage.csv.csvnode method)": [[3, "graphtage.csv.CSVNode.to_obj"]], "to_obj() (graphtage.csv.csvrow method)": [[3, "graphtage.csv.CSVRow.to_obj"]], "total_size (graphtage.csv.csvnode property)": [[3, "graphtage.csv.CSVNode.total_size"]], "total_size (graphtage.csv.csvrow property)": [[3, "graphtage.csv.CSVRow.total_size"]], "addition (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.ADDITION"]], "bitwise_and (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.BITWISE_AND"]], "bitwise_left_shift (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.BITWISE_LEFT_SHIFT"]], "bitwise_not (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.BITWISE_NOT"]], "bitwise_or (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.BITWISE_OR"]], "bitwise_right_shift (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.BITWISE_RIGHT_SHIFT"]], "bitwise_xor (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.BITWISE_XOR"]], "closebracket (class in graphtage.expressions)": [[4, "graphtage.expressions.CloseBracket"]], "closeparen (class in graphtage.expressions)": [[4, "graphtage.expressions.CloseParen"]], "collectioninfo (class in graphtage.expressions)": [[4, "graphtage.expressions.CollectionInfo"]], "comma (class in graphtage.expressions)": [[4, "graphtage.expressions.Comma"]], "default_globals (in module graphtage.expressions)": [[4, "graphtage.expressions.DEFAULT_GLOBALS"]], "division (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.DIVISION"]], "equals (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.EQUALS"]], "expression (class in graphtage.expressions)": [[4, "graphtage.expressions.Expression"]], "function_call (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.FUNCTION_CALL"]], "fixedsizecollection (class in graphtage.expressions)": [[4, "graphtage.expressions.FixedSizeCollection"]], "floattoken (class in graphtage.expressions)": [[4, "graphtage.expressions.FloatToken"]], "functioncall (class in graphtage.expressions)": [[4, "graphtage.expressions.FunctionCall"]], "getitem (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.GETITEM"]], "greater_than (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.GREATER_THAN"]], "greater_than_equal (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.GREATER_THAN_EQUAL"]], "identifier_bytes (in module graphtage.expressions)": [[4, "graphtage.expressions.IDENTIFIER_BYTES"]], "in (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.IN"]], "int_division (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.INT_DIVISION"]], "identifiertoken (class in graphtage.expressions)": [[4, "graphtage.expressions.IdentifierToken"]], "integertoken (class in graphtage.expressions)": [[4, "graphtage.expressions.IntegerToken"]], "less_than (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.LESS_THAN"]], "less_than_equal (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.LESS_THAN_EQUAL"]], "logical_and (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.LOGICAL_AND"]], "logical_not (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.LOGICAL_NOT"]], "logical_or (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.LOGICAL_OR"]], "member_access (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.MEMBER_ACCESS"]], "multiplication (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.MULTIPLICATION"]], "not_equal (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.NOT_EQUAL"]], "numerictoken (class in graphtage.expressions)": [[4, "graphtage.expressions.NumericToken"]], "operators_by_name (in module graphtage.expressions)": [[4, "graphtage.expressions.OPERATORS_BY_NAME"]], "openbracket (class in graphtage.expressions)": [[4, "graphtage.expressions.OpenBracket"]], "openparen (class in graphtage.expressions)": [[4, "graphtage.expressions.OpenParen"]], "operator (class in graphtage.expressions)": [[4, "graphtage.expressions.Operator"]], "operatortoken (class in graphtage.expressions)": [[4, "graphtage.expressions.OperatorToken"]], "pairedendtoken (class in graphtage.expressions)": [[4, "graphtage.expressions.PairedEndToken"]], "pairedstarttoken (class in graphtage.expressions)": [[4, "graphtage.expressions.PairedStartToken"]], "pairedtoken (class in graphtage.expressions)": [[4, "graphtage.expressions.PairedToken"]], "parenthesis (class in graphtage.expressions)": [[4, "graphtage.expressions.Parenthesis"]], "parseerror (class in graphtage.expressions)": [[4, "graphtage.expressions.ParseError"]], "remainder (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.REMAINDER"]], "subtraction (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.SUBTRACTION"]], "stringtoken (class in graphtage.expressions)": [[4, "graphtage.expressions.StringToken"]], "ternary_conditional (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.TERNARY_CONDITIONAL"]], "ternary_else (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.TERNARY_ELSE"]], "token (class in graphtage.expressions)": [[4, "graphtage.expressions.Token"]], "tokenizer (class in graphtage.expressions)": [[4, "graphtage.expressions.Tokenizer"]], "unary_minus (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.UNARY_MINUS"]], "unary_plus (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.UNARY_PLUS"]], "__init__() (graphtage.expressions.closebracket method)": [[4, "graphtage.expressions.CloseBracket.__init__"]], "__init__() (graphtage.expressions.closeparen method)": [[4, "graphtage.expressions.CloseParen.__init__"]], "__init__() (graphtage.expressions.collectioninfo method)": [[4, "graphtage.expressions.CollectionInfo.__init__"]], "__init__() (graphtage.expressions.comma method)": [[4, "graphtage.expressions.Comma.__init__"]], "__init__() (graphtage.expressions.expression method)": [[4, "graphtage.expressions.Expression.__init__"]], "__init__() (graphtage.expressions.fixedsizecollection method)": [[4, "graphtage.expressions.FixedSizeCollection.__init__"]], "__init__() (graphtage.expressions.floattoken method)": [[4, "graphtage.expressions.FloatToken.__init__"]], "__init__() (graphtage.expressions.functioncall method)": [[4, "graphtage.expressions.FunctionCall.__init__"]], "__init__() (graphtage.expressions.identifiertoken method)": [[4, "graphtage.expressions.IdentifierToken.__init__"]], "__init__() (graphtage.expressions.integertoken method)": [[4, "graphtage.expressions.IntegerToken.__init__"]], "__init__() (graphtage.expressions.numerictoken method)": [[4, "graphtage.expressions.NumericToken.__init__"]], "__init__() (graphtage.expressions.openbracket method)": [[4, "graphtage.expressions.OpenBracket.__init__"]], "__init__() (graphtage.expressions.openparen method)": [[4, "graphtage.expressions.OpenParen.__init__"]], "__init__() (graphtage.expressions.operator method)": [[4, "graphtage.expressions.Operator.__init__"]], "__init__() (graphtage.expressions.operatortoken method)": [[4, "graphtage.expressions.OperatorToken.__init__"]], "__init__() (graphtage.expressions.pairedendtoken method)": [[4, "graphtage.expressions.PairedEndToken.__init__"]], "__init__() (graphtage.expressions.pairedstarttoken method)": [[4, "graphtage.expressions.PairedStartToken.__init__"]], "__init__() (graphtage.expressions.pairedtoken method)": [[4, "graphtage.expressions.PairedToken.__init__"]], "__init__() (graphtage.expressions.parenthesis method)": [[4, "graphtage.expressions.Parenthesis.__init__"]], "__init__() (graphtage.expressions.parseerror method)": [[4, "graphtage.expressions.ParseError.__init__"]], "__init__() (graphtage.expressions.stringtoken method)": [[4, "graphtage.expressions.StringToken.__init__"]], "__init__() (graphtage.expressions.token method)": [[4, "graphtage.expressions.Token.__init__"]], "__init__() (graphtage.expressions.tokenizer method)": [[4, "graphtage.expressions.Tokenizer.__init__"]], "__iter__() (graphtage.expressions.tokenizer method)": [[4, "graphtage.expressions.Tokenizer.__iter__"]], "args (graphtage.expressions.parseerror attribute)": [[4, "graphtage.expressions.ParseError.args"]], "arity (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.arity"]], "container_type (graphtage.expressions.fixedsizecollection attribute)": [[4, "graphtage.expressions.FixedSizeCollection.container_type"]], "discard (graphtage.expressions.openbracket attribute)": [[4, "graphtage.expressions.OpenBracket.discard"]], "discard (graphtage.expressions.openparen attribute)": [[4, "graphtage.expressions.OpenParen.discard"]], "discard (graphtage.expressions.pairedstarttoken attribute)": [[4, "graphtage.expressions.PairedStartToken.discard"]], "eval() (graphtage.expressions.expression method)": [[4, "graphtage.expressions.Expression.eval"]], "execute (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.execute"]], "expand (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.expand"]], "get_member() (in module graphtage.expressions)": [[4, "graphtage.expressions.get_member"]], "get_value() (graphtage.expressions.expression static method)": [[4, "graphtage.expressions.Expression.get_value"]], "graphtage.expressions": [[4, "module-graphtage.expressions"]], "has_next() (graphtage.expressions.tokenizer method)": [[4, "graphtage.expressions.Tokenizer.has_next"]], "infix_to_rpn() (in module graphtage.expressions)": [[4, "graphtage.expressions.infix_to_rpn"]], "is_list (graphtage.expressions.openbracket attribute)": [[4, "graphtage.expressions.OpenBracket.is_list"]], "left_associative (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.left_associative"]], "name (graphtage.expressions.closebracket attribute)": [[4, "graphtage.expressions.CloseBracket.name"]], "name (graphtage.expressions.closeparen attribute)": [[4, "graphtage.expressions.CloseParen.name"]], "name (graphtage.expressions.identifiertoken attribute)": [[4, "graphtage.expressions.IdentifierToken.name"]], "name (graphtage.expressions.openbracket attribute)": [[4, "graphtage.expressions.OpenBracket.name"]], "name (graphtage.expressions.openparen attribute)": [[4, "graphtage.expressions.OpenParen.name"]], "name (graphtage.expressions.pairedendtoken attribute)": [[4, "graphtage.expressions.PairedEndToken.name"]], "name (graphtage.expressions.pairedstarttoken attribute)": [[4, "graphtage.expressions.PairedStartToken.name"]], "name (graphtage.expressions.pairedtoken attribute)": [[4, "graphtage.expressions.PairedToken.name"]], "next() (graphtage.expressions.tokenizer method)": [[4, "graphtage.expressions.Tokenizer.next"]], "offset (graphtage.expressions.closebracket attribute)": [[4, "graphtage.expressions.CloseBracket.offset"]], "offset (graphtage.expressions.closeparen attribute)": [[4, "graphtage.expressions.CloseParen.offset"]], "offset (graphtage.expressions.comma attribute)": [[4, "graphtage.expressions.Comma.offset"]], "offset (graphtage.expressions.fixedsizecollection attribute)": [[4, "graphtage.expressions.FixedSizeCollection.offset"]], "offset (graphtage.expressions.floattoken attribute)": [[4, "graphtage.expressions.FloatToken.offset"]], "offset (graphtage.expressions.functioncall attribute)": [[4, "graphtage.expressions.FunctionCall.offset"]], "offset (graphtage.expressions.identifiertoken attribute)": [[4, "graphtage.expressions.IdentifierToken.offset"]], "offset (graphtage.expressions.integertoken attribute)": [[4, "graphtage.expressions.IntegerToken.offset"]], "offset (graphtage.expressions.numerictoken attribute)": [[4, "graphtage.expressions.NumericToken.offset"]], "offset (graphtage.expressions.openbracket attribute)": [[4, "graphtage.expressions.OpenBracket.offset"]], "offset (graphtage.expressions.openparen attribute)": [[4, "graphtage.expressions.OpenParen.offset"]], "offset (graphtage.expressions.operatortoken attribute)": [[4, "graphtage.expressions.OperatorToken.offset"]], "offset (graphtage.expressions.parenthesis attribute)": [[4, "graphtage.expressions.Parenthesis.offset"]], "offset (graphtage.expressions.stringtoken attribute)": [[4, "graphtage.expressions.StringToken.offset"]], "offset (graphtage.expressions.token attribute)": [[4, "graphtage.expressions.Token.offset"]], "op (graphtage.expressions.functioncall attribute)": [[4, "graphtage.expressions.FunctionCall.op"]], "op (graphtage.expressions.openbracket attribute)": [[4, "graphtage.expressions.OpenBracket.op"]], "op (graphtage.expressions.operatortoken attribute)": [[4, "graphtage.expressions.OperatorToken.op"]], "parse() (in module graphtage.expressions)": [[4, "graphtage.expressions.parse"]], "peek() (graphtage.expressions.tokenizer method)": [[4, "graphtage.expressions.Tokenizer.peek"]], "prev_token (graphtage.expressions.tokenizer attribute)": [[4, "graphtage.expressions.Tokenizer.prev_token"]], "priority (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.priority"]], "raw_token (graphtage.expressions.closebracket property)": [[4, "graphtage.expressions.CloseBracket.raw_token"]], "raw_token (graphtage.expressions.closeparen property)": [[4, "graphtage.expressions.CloseParen.raw_token"]], "raw_token (graphtage.expressions.comma property)": [[4, "graphtage.expressions.Comma.raw_token"]], "raw_token (graphtage.expressions.fixedsizecollection property)": [[4, "graphtage.expressions.FixedSizeCollection.raw_token"]], "raw_token (graphtage.expressions.floattoken property)": [[4, "graphtage.expressions.FloatToken.raw_token"]], "raw_token (graphtage.expressions.functioncall property)": [[4, "graphtage.expressions.FunctionCall.raw_token"]], "raw_token (graphtage.expressions.identifiertoken property)": [[4, "graphtage.expressions.IdentifierToken.raw_token"]], "raw_token (graphtage.expressions.integertoken property)": [[4, "graphtage.expressions.IntegerToken.raw_token"]], "raw_token (graphtage.expressions.numerictoken property)": [[4, "graphtage.expressions.NumericToken.raw_token"]], "raw_token (graphtage.expressions.openbracket property)": [[4, "graphtage.expressions.OpenBracket.raw_token"]], "raw_token (graphtage.expressions.openparen property)": [[4, "graphtage.expressions.OpenParen.raw_token"]], "raw_token (graphtage.expressions.operatortoken property)": [[4, "graphtage.expressions.OperatorToken.raw_token"]], "raw_token (graphtage.expressions.parenthesis property)": [[4, "graphtage.expressions.Parenthesis.raw_token"]], "raw_token (graphtage.expressions.stringtoken property)": [[4, "graphtage.expressions.StringToken.raw_token"]], "raw_token (graphtage.expressions.token property)": [[4, "graphtage.expressions.Token.raw_token"]], "size (graphtage.expressions.fixedsizecollection attribute)": [[4, "graphtage.expressions.FixedSizeCollection.size"]], "start_token_type (graphtage.expressions.closebracket attribute)": [[4, "graphtage.expressions.CloseBracket.start_token_type"]], "start_token_type (graphtage.expressions.closeparen attribute)": [[4, "graphtage.expressions.CloseParen.start_token_type"]], "start_token_type (graphtage.expressions.pairedendtoken attribute)": [[4, "graphtage.expressions.PairedEndToken.start_token_type"]], "token (graphtage.expressions.operator attribute)": [[4, "graphtage.expressions.Operator.token"]], "tokenize() (in module graphtage.expressions)": [[4, "graphtage.expressions.tokenize"]], "value (graphtage.expressions.floattoken attribute)": [[4, "graphtage.expressions.FloatToken.value"]], "value (graphtage.expressions.integertoken attribute)": [[4, "graphtage.expressions.IntegerToken.value"]], "value (graphtage.expressions.numerictoken attribute)": [[4, "graphtage.expressions.NumericToken.value"]], "with_traceback() (graphtage.expressions.parseerror method)": [[4, "graphtage.expressions.ParseError.with_traceback"]], "fibonacciheap (class in graphtage.fibonacci)": [[5, "graphtage.fibonacci.FibonacciHeap"]], "heapnode (class in graphtage.fibonacci)": [[5, "graphtage.fibonacci.HeapNode"]], "maxfibonacciheap (class in graphtage.fibonacci)": [[5, "graphtage.fibonacci.MaxFibonacciHeap"]], "reversedcomparator (class in graphtage.fibonacci)": [[5, "graphtage.fibonacci.ReversedComparator"]], "__init__() (graphtage.fibonacci.fibonacciheap method)": [[5, "graphtage.fibonacci.FibonacciHeap.__init__"]], "__init__() (graphtage.fibonacci.heapnode method)": [[5, "graphtage.fibonacci.HeapNode.__init__"]], "__init__() (graphtage.fibonacci.maxfibonacciheap method)": [[5, "graphtage.fibonacci.MaxFibonacciHeap.__init__"]], "__init__() (graphtage.fibonacci.reversedcomparator method)": [[5, "graphtage.fibonacci.ReversedComparator.__init__"]], "__iter__() (graphtage.fibonacci.heapnode method)": [[5, "graphtage.fibonacci.HeapNode.__iter__"]], "add_child() (graphtage.fibonacci.heapnode method)": [[5, "graphtage.fibonacci.HeapNode.add_child"]], "child (graphtage.fibonacci.heapnode attribute)": [[5, "graphtage.fibonacci.HeapNode.child"]], "children (graphtage.fibonacci.heapnode property)": [[5, "graphtage.fibonacci.HeapNode.children"]], "clear() (graphtage.fibonacci.fibonacciheap method)": [[5, "graphtage.fibonacci.FibonacciHeap.clear"]], "clear() (graphtage.fibonacci.maxfibonacciheap method)": [[5, "graphtage.fibonacci.MaxFibonacciHeap.clear"]], "decrease_key() (graphtage.fibonacci.fibonacciheap method)": [[5, "graphtage.fibonacci.FibonacciHeap.decrease_key"]], "decrease_key() (graphtage.fibonacci.maxfibonacciheap method)": [[5, "graphtage.fibonacci.MaxFibonacciHeap.decrease_key"]], "degree (graphtage.fibonacci.heapnode attribute)": [[5, "graphtage.fibonacci.HeapNode.degree"]], "deleted (graphtage.fibonacci.heapnode attribute)": [[5, "graphtage.fibonacci.HeapNode.deleted"]], "graphtage.fibonacci": [[5, "module-graphtage.fibonacci"]], "item (graphtage.fibonacci.heapnode attribute)": [[5, "graphtage.fibonacci.HeapNode.item"]], "key (graphtage.fibonacci.fibonacciheap attribute)": [[5, "graphtage.fibonacci.FibonacciHeap.key"]], "key (graphtage.fibonacci.heapnode attribute)": [[5, "graphtage.fibonacci.HeapNode.key"]], "key (graphtage.fibonacci.maxfibonacciheap attribute)": [[5, "graphtage.fibonacci.MaxFibonacciHeap.key"]], "left (graphtage.fibonacci.heapnode attribute)": [[5, "graphtage.fibonacci.HeapNode.left"]], "mark (graphtage.fibonacci.heapnode attribute)": [[5, "graphtage.fibonacci.HeapNode.mark"]], "min_node (graphtage.fibonacci.fibonacciheap property)": [[5, "graphtage.fibonacci.FibonacciHeap.min_node"]], "min_node (graphtage.fibonacci.maxfibonacciheap property)": [[5, "graphtage.fibonacci.MaxFibonacciHeap.min_node"]], "nodes() (graphtage.fibonacci.fibonacciheap method)": [[5, "graphtage.fibonacci.FibonacciHeap.nodes"]], "nodes() (graphtage.fibonacci.maxfibonacciheap method)": [[5, "graphtage.fibonacci.MaxFibonacciHeap.nodes"]], "parent (graphtage.fibonacci.heapnode attribute)": [[5, "graphtage.fibonacci.HeapNode.parent"]], "peek() (graphtage.fibonacci.fibonacciheap method)": [[5, "graphtage.fibonacci.FibonacciHeap.peek"]], "peek() (graphtage.fibonacci.maxfibonacciheap method)": [[5, "graphtage.fibonacci.MaxFibonacciHeap.peek"]], "pop() (graphtage.fibonacci.fibonacciheap method)": [[5, "graphtage.fibonacci.FibonacciHeap.pop"]], "pop() (graphtage.fibonacci.maxfibonacciheap method)": [[5, "graphtage.fibonacci.MaxFibonacciHeap.pop"]], "push() (graphtage.fibonacci.fibonacciheap method)": [[5, "graphtage.fibonacci.FibonacciHeap.push"]], "push() (graphtage.fibonacci.maxfibonacciheap method)": [[5, "graphtage.fibonacci.MaxFibonacciHeap.push"]], "remove() (graphtage.fibonacci.fibonacciheap method)": [[5, "graphtage.fibonacci.FibonacciHeap.remove"]], "remove() (graphtage.fibonacci.maxfibonacciheap method)": [[5, "graphtage.fibonacci.MaxFibonacciHeap.remove"]], "remove_child() (graphtage.fibonacci.heapnode method)": [[5, "graphtage.fibonacci.HeapNode.remove_child"]], "right (graphtage.fibonacci.heapnode attribute)": [[5, "graphtage.fibonacci.HeapNode.right"]], "siblings (graphtage.fibonacci.heapnode property)": [[5, "graphtage.fibonacci.HeapNode.siblings"]], "basicformatter (class in graphtage.formatter)": [[6, "graphtage.formatter.BasicFormatter"]], "default_instance (graphtage.formatter.basicformatter attribute)": [[6, "graphtage.formatter.BasicFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.formatter.formatter attribute)": [[6, "graphtage.formatter.Formatter.DEFAULT_INSTANCE"]], "formatter (class in graphtage.formatter)": [[6, "graphtage.formatter.Formatter"]], "formatterchecker (class in graphtage.formatter)": [[6, "graphtage.formatter.FormatterChecker"]], "__init__() (graphtage.formatter.basicformatter method)": [[6, "graphtage.formatter.BasicFormatter.__init__"]], "__init__() (graphtage.formatter.formatter method)": [[6, "graphtage.formatter.Formatter.__init__"]], "__init__() (graphtage.formatter.formatterchecker method)": [[6, "graphtage.formatter.FormatterChecker.__init__"]], "__instancecheck__() (graphtage.formatter.formatterchecker method)": [[6, "graphtage.formatter.FormatterChecker.__instancecheck__"]], "__new__() (graphtage.formatter.basicformatter static method)": [[6, "graphtage.formatter.BasicFormatter.__new__"]], "__new__() (graphtage.formatter.formatter static method)": [[6, "graphtage.formatter.Formatter.__new__"]], "__subclasscheck__() (graphtage.formatter.formatterchecker method)": [[6, "graphtage.formatter.FormatterChecker.__subclasscheck__"]], "_abc_caches_clear() (graphtage.formatter.formatterchecker method)": [[6, "graphtage.formatter.FormatterChecker._abc_caches_clear"]], "_abc_registry_clear() (graphtage.formatter.formatterchecker method)": [[6, "graphtage.formatter.FormatterChecker._abc_registry_clear"]], "_dump_registry() (graphtage.formatter.formatterchecker method)": [[6, "graphtage.formatter.FormatterChecker._dump_registry"]], "get_formatter() (graphtage.formatter.basicformatter method)": [[6, "graphtage.formatter.BasicFormatter.get_formatter"]], "get_formatter() (graphtage.formatter.formatter method)": [[6, "graphtage.formatter.Formatter.get_formatter"]], "get_formatter() (in module graphtage.formatter)": [[6, "graphtage.formatter.get_formatter"]], "graphtage.formatter": [[6, "module-graphtage.formatter"]], "is_partial (graphtage.formatter.basicformatter attribute)": [[6, "graphtage.formatter.BasicFormatter.is_partial"]], "is_partial (graphtage.formatter.formatter attribute)": [[6, "graphtage.formatter.Formatter.is_partial"]], "mro() (graphtage.formatter.formatterchecker method)": [[6, "graphtage.formatter.FormatterChecker.mro"]], "parent (graphtage.formatter.basicformatter attribute)": [[6, "graphtage.formatter.BasicFormatter.parent"]], "parent (graphtage.formatter.formatter attribute)": [[6, "graphtage.formatter.Formatter.parent"]], "print() (graphtage.formatter.basicformatter method)": [[6, "graphtage.formatter.BasicFormatter.print"]], "print() (graphtage.formatter.formatter method)": [[6, "graphtage.formatter.Formatter.print"]], "register() (graphtage.formatter.formatterchecker method)": [[6, "graphtage.formatter.FormatterChecker.register"]], "root (graphtage.formatter.basicformatter property)": [[6, "graphtage.formatter.BasicFormatter.root"]], "root (graphtage.formatter.formatter property)": [[6, "graphtage.formatter.Formatter.root"]], "sub_format_types (graphtage.formatter.basicformatter attribute)": [[6, "graphtage.formatter.BasicFormatter.sub_format_types"]], "sub_format_types (graphtage.formatter.formatter attribute)": [[6, "graphtage.formatter.Formatter.sub_format_types"]], "sub_formatters (graphtage.formatter.basicformatter attribute)": [[6, "graphtage.formatter.BasicFormatter.sub_formatters"]], "sub_formatters (graphtage.formatter.formatter attribute)": [[6, "graphtage.formatter.Formatter.sub_formatters"]], "default_instance (graphtage.json.jsondictformatter attribute)": [[7, "graphtage.json.JSONDictFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.json.jsonformatter attribute)": [[7, "graphtage.json.JSONFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.json.jsonlistformatter attribute)": [[7, "graphtage.json.JSONListFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.json.jsonstringformatter attribute)": [[7, "graphtage.json.JSONStringFormatter.DEFAULT_INSTANCE"]], "json (class in graphtage.json)": [[7, "graphtage.json.JSON"]], "json5 (class in graphtage.json)": [[7, "graphtage.json.JSON5"]], "jsondictformatter (class in graphtage.json)": [[7, "graphtage.json.JSONDictFormatter"]], "jsonformatter (class in graphtage.json)": [[7, "graphtage.json.JSONFormatter"]], "jsonlistformatter (class in graphtage.json)": [[7, "graphtage.json.JSONListFormatter"]], "jsonstringformatter (class in graphtage.json)": [[7, "graphtage.json.JSONStringFormatter"]], "__init__() (graphtage.json.json method)": [[7, "graphtage.json.JSON.__init__"]], "__init__() (graphtage.json.json5 method)": [[7, "graphtage.json.JSON5.__init__"]], "__init__() (graphtage.json.jsondictformatter method)": [[7, "graphtage.json.JSONDictFormatter.__init__"]], "__init__() (graphtage.json.jsonformatter method)": [[7, "graphtage.json.JSONFormatter.__init__"]], "__init__() (graphtage.json.jsonlistformatter method)": [[7, "graphtage.json.JSONListFormatter.__init__"]], "__init__() (graphtage.json.jsonstringformatter method)": [[7, "graphtage.json.JSONStringFormatter.__init__"]], "__new__() (graphtage.json.jsondictformatter static method)": [[7, "graphtage.json.JSONDictFormatter.__new__"]], "__new__() (graphtage.json.jsonformatter static method)": [[7, "graphtage.json.JSONFormatter.__new__"]], "__new__() (graphtage.json.jsonlistformatter static method)": [[7, "graphtage.json.JSONListFormatter.__new__"]], "__new__() (graphtage.json.jsonstringformatter static method)": [[7, "graphtage.json.JSONStringFormatter.__new__"]], "build_tree() (graphtage.json.json method)": [[7, "graphtage.json.JSON.build_tree"]], "build_tree() (graphtage.json.json5 method)": [[7, "graphtage.json.JSON5.build_tree"]], "build_tree() (in module graphtage.json)": [[7, "graphtage.json.build_tree"]], "build_tree_handling_errors() (graphtage.json.json method)": [[7, "graphtage.json.JSON.build_tree_handling_errors"]], "build_tree_handling_errors() (graphtage.json.json5 method)": [[7, "graphtage.json.JSON5.build_tree_handling_errors"]], "context() (graphtage.json.jsonstringformatter method)": [[7, "graphtage.json.JSONStringFormatter.context"]], "edit_print() (graphtage.json.jsondictformatter method)": [[7, "graphtage.json.JSONDictFormatter.edit_print"]], "edit_print() (graphtage.json.jsonlistformatter method)": [[7, "graphtage.json.JSONListFormatter.edit_print"]], "escape() (graphtage.json.jsonstringformatter method)": [[7, "graphtage.json.JSONStringFormatter.escape"]], "get_default_formatter() (graphtage.json.json method)": [[7, "graphtage.json.JSON.get_default_formatter"]], "get_default_formatter() (graphtage.json.json5 method)": [[7, "graphtage.json.JSON5.get_default_formatter"]], "get_formatter() (graphtage.json.jsondictformatter method)": [[7, "graphtage.json.JSONDictFormatter.get_formatter"]], "get_formatter() (graphtage.json.jsonformatter method)": [[7, "graphtage.json.JSONFormatter.get_formatter"]], "get_formatter() (graphtage.json.jsonlistformatter method)": [[7, "graphtage.json.JSONListFormatter.get_formatter"]], "get_formatter() (graphtage.json.jsonstringformatter method)": [[7, "graphtage.json.JSONStringFormatter.get_formatter"]], "graphtage.json": [[7, "module-graphtage.json"]], "is_partial (graphtage.json.jsondictformatter attribute)": [[7, "graphtage.json.JSONDictFormatter.is_partial"]], "is_partial (graphtage.json.jsonformatter attribute)": [[7, "graphtage.json.JSONFormatter.is_partial"]], "is_partial (graphtage.json.jsonlistformatter attribute)": [[7, "graphtage.json.JSONListFormatter.is_partial"]], "is_partial (graphtage.json.jsonstringformatter attribute)": [[7, "graphtage.json.JSONStringFormatter.is_partial"]], "is_quoted (graphtage.json.jsonstringformatter attribute)": [[7, "graphtage.json.JSONStringFormatter.is_quoted"]], "item_newline() (graphtage.json.jsondictformatter method)": [[7, "graphtage.json.JSONDictFormatter.item_newline"]], "item_newline() (graphtage.json.jsonlistformatter method)": [[7, "graphtage.json.JSONListFormatter.item_newline"]], "items_indent() (graphtage.json.jsondictformatter method)": [[7, "graphtage.json.JSONDictFormatter.items_indent"]], "items_indent() (graphtage.json.jsonlistformatter method)": [[7, "graphtage.json.JSONListFormatter.items_indent"]], "parent (graphtage.json.jsondictformatter attribute)": [[7, "graphtage.json.JSONDictFormatter.parent"]], "parent (graphtage.json.jsonformatter attribute)": [[7, "graphtage.json.JSONFormatter.parent"]], "parent (graphtage.json.jsonlistformatter attribute)": [[7, "graphtage.json.JSONListFormatter.parent"]], "parent (graphtage.json.jsonstringformatter attribute)": [[7, "graphtage.json.JSONStringFormatter.parent"]], "print() (graphtage.json.jsondictformatter method)": [[7, "graphtage.json.JSONDictFormatter.print"]], "print() (graphtage.json.jsonformatter method)": [[7, "graphtage.json.JSONFormatter.print"]], "print() (graphtage.json.jsonlistformatter method)": [[7, "graphtage.json.JSONListFormatter.print"]], "print() (graphtage.json.jsonstringformatter method)": [[7, "graphtage.json.JSONStringFormatter.print"]], "print_containernode() (graphtage.json.jsonformatter method)": [[7, "graphtage.json.JSONFormatter.print_ContainerNode"]], "print_keyvaluepairnode() (graphtage.json.jsonformatter method)": [[7, "graphtage.json.JSONFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.json.jsonformatter method)": [[7, "graphtage.json.JSONFormatter.print_LeafNode"]], "print_listnode() (graphtage.json.jsonlistformatter method)": [[7, "graphtage.json.JSONListFormatter.print_ListNode"]], "print_mappingnode() (graphtage.json.jsondictformatter method)": [[7, "graphtage.json.JSONDictFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.json.jsondictformatter method)": [[7, "graphtage.json.JSONDictFormatter.print_MultiSetNode"]], "print_sequencenode() (graphtage.json.jsondictformatter method)": [[7, "graphtage.json.JSONDictFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.json.jsonlistformatter method)": [[7, "graphtage.json.JSONListFormatter.print_SequenceNode"]], "print_stringedit() (graphtage.json.jsonstringformatter method)": [[7, "graphtage.json.JSONStringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.json.jsonstringformatter method)": [[7, "graphtage.json.JSONStringFormatter.print_StringNode"]], "print_xmlelement() (graphtage.json.jsonformatter method)": [[7, "graphtage.json.JSONFormatter.print_XMLElement"]], "root (graphtage.json.jsondictformatter property)": [[7, "graphtage.json.JSONDictFormatter.root"]], "root (graphtage.json.jsonformatter property)": [[7, "graphtage.json.JSONFormatter.root"]], "root (graphtage.json.jsonlistformatter property)": [[7, "graphtage.json.JSONListFormatter.root"]], "root (graphtage.json.jsonstringformatter property)": [[7, "graphtage.json.JSONStringFormatter.root"]], "sub_format_types (graphtage.json.jsondictformatter attribute)": [[7, "graphtage.json.JSONDictFormatter.sub_format_types"]], "sub_format_types (graphtage.json.jsonformatter attribute)": [[7, "graphtage.json.JSONFormatter.sub_format_types"]], "sub_format_types (graphtage.json.jsonlistformatter attribute)": [[7, "graphtage.json.JSONListFormatter.sub_format_types"]], "sub_format_types (graphtage.json.jsonstringformatter attribute)": [[7, "graphtage.json.JSONStringFormatter.sub_format_types"]], "sub_formatters (graphtage.json.jsondictformatter attribute)": [[7, "graphtage.json.JSONDictFormatter.sub_formatters"]], "sub_formatters (graphtage.json.jsonformatter attribute)": [[7, "graphtage.json.JSONFormatter.sub_formatters"]], "sub_formatters (graphtage.json.jsonlistformatter attribute)": [[7, "graphtage.json.JSONListFormatter.sub_formatters"]], "sub_formatters (graphtage.json.jsonstringformatter attribute)": [[7, "graphtage.json.JSONStringFormatter.sub_formatters"]], "write_char() (graphtage.json.jsonstringformatter method)": [[7, "graphtage.json.JSONStringFormatter.write_char"]], "write_end_quote() (graphtage.json.jsonstringformatter method)": [[7, "graphtage.json.JSONStringFormatter.write_end_quote"]], "write_start_quote() (graphtage.json.jsonstringformatter method)": [[7, "graphtage.json.JSONStringFormatter.write_start_quote"]], "editdistance (class in graphtage.levenshtein)": [[8, "graphtage.levenshtein.EditDistance"]], "__init__() (graphtage.levenshtein.editdistance method)": [[8, "graphtage.levenshtein.EditDistance.__init__"]], "__iter__() (graphtage.levenshtein.editdistance method)": [[8, "graphtage.levenshtein.EditDistance.__iter__"]], "__lt__() (graphtage.levenshtein.editdistance method)": [[8, "graphtage.levenshtein.EditDistance.__lt__"]], "bounds() (graphtage.levenshtein.editdistance method)": [[8, "graphtage.levenshtein.EditDistance.bounds"]], "edits() (graphtage.levenshtein.editdistance method)": [[8, "graphtage.levenshtein.EditDistance.edits"]], "from_node (graphtage.levenshtein.editdistance attribute)": [[8, "graphtage.levenshtein.EditDistance.from_node"]], "graphtage.levenshtein": [[8, "module-graphtage.levenshtein"]], "has_non_zero_cost() (graphtage.levenshtein.editdistance method)": [[8, "graphtage.levenshtein.EditDistance.has_non_zero_cost"]], "initial_bounds (graphtage.levenshtein.editdistance attribute)": [[8, "graphtage.levenshtein.EditDistance.initial_bounds"]], "is_complete() (graphtage.levenshtein.editdistance method)": [[8, "graphtage.levenshtein.EditDistance.is_complete"]], "levenshtein_distance() (in module graphtage.levenshtein)": [[8, "graphtage.levenshtein.levenshtein_distance"]], "on_diff() (graphtage.levenshtein.editdistance method)": [[8, "graphtage.levenshtein.EditDistance.on_diff"]], "print() (graphtage.levenshtein.editdistance method)": [[8, "graphtage.levenshtein.EditDistance.print"]], "sequence (graphtage.levenshtein.editdistance property)": [[8, "graphtage.levenshtein.EditDistance.sequence"]], "tighten_bounds() (graphtage.levenshtein.editdistance method)": [[8, "graphtage.levenshtein.EditDistance.tighten_bounds"]], "valid (graphtage.levenshtein.editdistance property)": [[8, "graphtage.levenshtein.EditDistance.valid"]], "edge (class in graphtage.matching)": [[9, "graphtage.matching.Edge"]], "matching (class in graphtage.matching)": [[9, "graphtage.matching.Matching"]], "matchingfromnode (class in graphtage.matching)": [[9, "graphtage.matching.MatchingFromNode"]], "matchingnode (class in graphtage.matching)": [[9, "graphtage.matching.MatchingNode"]], "matchingtonode (class in graphtage.matching)": [[9, "graphtage.matching.MatchingToNode"]], "pathset (class in graphtage.matching)": [[9, "graphtage.matching.PathSet"]], "queueelement (class in graphtage.matching)": [[9, "graphtage.matching.QueueElement"]], "sortededges (class in graphtage.matching)": [[9, "graphtage.matching.SortedEdges"]], "weightedbipartitematcher (class in graphtage.matching)": [[9, "graphtage.matching.WeightedBipartiteMatcher"]], "weightedbipartitematcherpartial_implementation (class in graphtage.matching)": [[9, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION"]], "__init__() (graphtage.matching.edge method)": [[9, "graphtage.matching.Edge.__init__"]], "__init__() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.__init__"]], "__init__() (graphtage.matching.matchingfromnode method)": [[9, "graphtage.matching.MatchingFromNode.__init__"]], "__init__() (graphtage.matching.matchingnode method)": [[9, "graphtage.matching.MatchingNode.__init__"]], "__init__() (graphtage.matching.matchingtonode method)": [[9, "graphtage.matching.MatchingToNode.__init__"]], "__init__() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.__init__"]], "__init__() (graphtage.matching.queueelement method)": [[9, "graphtage.matching.QueueElement.__init__"]], "__init__() (graphtage.matching.sortededges method)": [[9, "graphtage.matching.SortedEdges.__init__"]], "__init__() (graphtage.matching.weightedbipartitematcher method)": [[9, "graphtage.matching.WeightedBipartiteMatcher.__init__"]], "__init__() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[9, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.__init__"]], "_from_iterable() (graphtage.matching.matching class method)": [[9, "graphtage.matching.Matching._from_iterable"]], "_from_iterable() (graphtage.matching.pathset class method)": [[9, "graphtage.matching.PathSet._from_iterable"]], "_hash() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching._hash"]], "_hash() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet._hash"]], "add() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.add"]], "add() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.add"]], "bounds() (graphtage.matching.edge method)": [[9, "graphtage.matching.Edge.bounds"]], "bounds() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.bounds"]], "bounds() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.bounds"]], "bounds() (graphtage.matching.weightedbipartitematcher method)": [[9, "graphtage.matching.WeightedBipartiteMatcher.bounds"]], "bounds() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[9, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.bounds"]], "clear() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.clear"]], "clear() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.clear"]], "construct_edges() (graphtage.matching.matchingfromnode method)": [[9, "graphtage.matching.MatchingFromNode.construct_edges"]], "construct_edges() (graphtage.matching.matchingnode method)": [[9, "graphtage.matching.MatchingNode.construct_edges"]], "construct_edges() (graphtage.matching.matchingtonode method)": [[9, "graphtage.matching.MatchingToNode.construct_edges"]], "copy() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.copy"]], "copy() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.copy"]], "cost_bar (graphtage.matching.edge property)": [[9, "graphtage.matching.Edge.cost_bar"]], "cost_star (graphtage.matching.edge property)": [[9, "graphtage.matching.Edge.cost_star"]], "difference() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.difference"]], "difference() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.difference"]], "difference_update() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.difference_update"]], "difference_update() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.difference_update"]], "discard() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.discard"]], "discard() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.discard"]], "edges (graphtage.matching.weightedbipartitematcher property)": [[9, "graphtage.matching.WeightedBipartiteMatcher.edges"]], "edges() (graphtage.matching.matchingfromnode method)": [[9, "graphtage.matching.MatchingFromNode.edges"]], "edges() (graphtage.matching.matchingnode method)": [[9, "graphtage.matching.MatchingNode.edges"]], "edges() (graphtage.matching.matchingtonode method)": [[9, "graphtage.matching.MatchingToNode.edges"]], "free_destinations() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[9, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.free_destinations"]], "free_sources() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[9, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.free_sources"]], "get_dtype() (in module graphtage.matching)": [[9, "graphtage.matching.get_dtype"]], "graphtage.matching": [[9, "module-graphtage.matching"]], "head() (graphtage.matching.sortededges method)": [[9, "graphtage.matching.SortedEdges.head"]], "intersection() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.intersection"]], "intersection() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.intersection"]], "intersection_update() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.intersection_update"]], "intersection_update() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.intersection_update"]], "is_complete() (graphtage.matching.weightedbipartitematcher method)": [[9, "graphtage.matching.WeightedBipartiteMatcher.is_complete"]], "isdisjoint() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.isdisjoint"]], "isdisjoint() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.isdisjoint"]], "issubset() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.issubset"]], "issubset() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.issubset"]], "issuperset() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.issuperset"]], "issuperset() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.issuperset"]], "matching (graphtage.matching.weightedbipartitematcher property)": [[9, "graphtage.matching.WeightedBipartiteMatcher.matching"]], "min_weight_bipartite_matching() (in module graphtage.matching)": [[9, "graphtage.matching.min_weight_bipartite_matching"]], "path_to() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.path_to"]], "pop() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.pop"]], "pop() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.pop"]], "remove() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.remove"]], "remove() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.remove"]], "sorted_neighbors (graphtage.matching.matchingfromnode property)": [[9, "graphtage.matching.MatchingFromNode.sorted_neighbors"]], "symmetric_difference() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.symmetric_difference"]], "symmetric_difference() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.symmetric_difference"]], "symmetric_difference_update() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.symmetric_difference_update"]], "symmetric_difference_update() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.symmetric_difference_update"]], "tail() (graphtage.matching.sortededges method)": [[9, "graphtage.matching.SortedEdges.tail"]], "tighten_bounds() (graphtage.matching.edge method)": [[9, "graphtage.matching.Edge.tighten_bounds"]], "tighten_bounds() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.tighten_bounds"]], "tighten_bounds() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.tighten_bounds"]], "tighten_bounds() (graphtage.matching.weightedbipartitematcher method)": [[9, "graphtage.matching.WeightedBipartiteMatcher.tighten_bounds"]], "tighten_bounds() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[9, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.tighten_bounds"]], "union() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.union"]], "union() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.union"]], "update() (graphtage.matching.matching method)": [[9, "graphtage.matching.Matching.update"]], "update() (graphtage.matching.pathset method)": [[9, "graphtage.matching.PathSet.update"]], "multisetedit (class in graphtage.multiset)": [[10, "graphtage.multiset.MultiSetEdit"]], "__init__() (graphtage.multiset.multisetedit method)": [[10, "graphtage.multiset.MultiSetEdit.__init__"]], "__iter__() (graphtage.multiset.multisetedit method)": [[10, "graphtage.multiset.MultiSetEdit.__iter__"]], "__lt__() (graphtage.multiset.multisetedit method)": [[10, "graphtage.multiset.MultiSetEdit.__lt__"]], "bounds() (graphtage.multiset.multisetedit method)": [[10, "graphtage.multiset.MultiSetEdit.bounds"]], "edits() (graphtage.multiset.multisetedit method)": [[10, "graphtage.multiset.MultiSetEdit.edits"]], "from_node (graphtage.multiset.multisetedit attribute)": [[10, "graphtage.multiset.MultiSetEdit.from_node"]], "graphtage.multiset": [[10, "module-graphtage.multiset"]], "has_non_zero_cost() (graphtage.multiset.multisetedit method)": [[10, "graphtage.multiset.MultiSetEdit.has_non_zero_cost"]], "initial_bounds (graphtage.multiset.multisetedit attribute)": [[10, "graphtage.multiset.MultiSetEdit.initial_bounds"]], "is_complete() (graphtage.multiset.multisetedit method)": [[10, "graphtage.multiset.MultiSetEdit.is_complete"]], "on_diff() (graphtage.multiset.multisetedit method)": [[10, "graphtage.multiset.MultiSetEdit.on_diff"]], "print() (graphtage.multiset.multisetedit method)": [[10, "graphtage.multiset.MultiSetEdit.print"]], "sequence (graphtage.multiset.multisetedit property)": [[10, "graphtage.multiset.MultiSetEdit.sequence"]], "tighten_bounds() (graphtage.multiset.multisetedit method)": [[10, "graphtage.multiset.MultiSetEdit.tighten_bounds"]], "to_insert (graphtage.multiset.multisetedit attribute)": [[10, "graphtage.multiset.MultiSetEdit.to_insert"]], "to_remove (graphtage.multiset.multisetedit attribute)": [[10, "graphtage.multiset.MultiSetEdit.to_remove"]], "valid (graphtage.multiset.multisetedit property)": [[10, "graphtage.multiset.MultiSetEdit.valid"]], "default_instance (graphtage.plist.plistformatter attribute)": [[11, "graphtage.plist.PLISTFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.plist.plistsequenceformatter attribute)": [[11, "graphtage.plist.PLISTSequenceFormatter.DEFAULT_INSTANCE"]], "plist (class in graphtage.plist)": [[11, "graphtage.plist.PLIST"]], "plistformatter (class in graphtage.plist)": [[11, "graphtage.plist.PLISTFormatter"]], "plistnode (class in graphtage.plist)": [[11, "graphtage.plist.PLISTNode"]], "plistsequenceformatter (class in graphtage.plist)": [[11, "graphtage.plist.PLISTSequenceFormatter"]], "__init__() (graphtage.plist.plist method)": [[11, "graphtage.plist.PLIST.__init__"]], "__init__() (graphtage.plist.plistformatter method)": [[11, "graphtage.plist.PLISTFormatter.__init__"]], "__init__() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.__init__"]], "__init__() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.__init__"]], "__new__() (graphtage.plist.plistformatter static method)": [[11, "graphtage.plist.PLISTFormatter.__new__"]], "__new__() (graphtage.plist.plistsequenceformatter static method)": [[11, "graphtage.plist.PLISTSequenceFormatter.__new__"]], "all_children_are_leaves() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.all_children_are_leaves"]], "build_tree() (graphtage.plist.plist method)": [[11, "graphtage.plist.PLIST.build_tree"]], "build_tree() (in module graphtage.plist)": [[11, "graphtage.plist.build_tree"]], "build_tree_handling_errors() (graphtage.plist.plist method)": [[11, "graphtage.plist.PLIST.build_tree_handling_errors"]], "calculate_total_size() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.calculate_total_size"]], "children() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.children"]], "dfs() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.dfs"]], "diff() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.diff"]], "edit_modifiers (graphtage.plist.plistnode attribute)": [[11, "graphtage.plist.PLISTNode.edit_modifiers"]], "edit_print() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.edit_print"]], "editable_dict() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.editable_dict"]], "edited (graphtage.plist.plistnode property)": [[11, "graphtage.plist.PLISTNode.edited"]], "edits() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.edits"]], "get_all_edit_contexts() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.get_all_edits"]], "get_default_formatter() (graphtage.plist.plist method)": [[11, "graphtage.plist.PLIST.get_default_formatter"]], "get_formatter() (graphtage.plist.plistformatter method)": [[11, "graphtage.plist.PLISTFormatter.get_formatter"]], "get_formatter() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.get_formatter"]], "graphtage.plist": [[11, "module-graphtage.plist"]], "is_leaf (graphtage.plist.plistnode property)": [[11, "graphtage.plist.PLISTNode.is_leaf"]], "is_partial (graphtage.plist.plistformatter attribute)": [[11, "graphtage.plist.PLISTFormatter.is_partial"]], "is_partial (graphtage.plist.plistsequenceformatter attribute)": [[11, "graphtage.plist.PLISTSequenceFormatter.is_partial"]], "item_newline() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.item_newline"]], "items_indent() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.items_indent"]], "make_edited() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.make_edited"]], "parent (graphtage.plist.plistformatter attribute)": [[11, "graphtage.plist.PLISTFormatter.parent"]], "parent (graphtage.plist.plistnode property)": [[11, "graphtage.plist.PLISTNode.parent"]], "parent (graphtage.plist.plistsequenceformatter attribute)": [[11, "graphtage.plist.PLISTSequenceFormatter.parent"]], "print() (graphtage.plist.plistformatter method)": [[11, "graphtage.plist.PLISTFormatter.print"]], "print() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.print"]], "print() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.print"]], "print_boolnode() (graphtage.plist.plistformatter method)": [[11, "graphtage.plist.PLISTFormatter.print_BoolNode"]], "print_floatnode() (graphtage.plist.plistformatter method)": [[11, "graphtage.plist.PLISTFormatter.print_FloatNode"]], "print_integernode() (graphtage.plist.plistformatter method)": [[11, "graphtage.plist.PLISTFormatter.print_IntegerNode"]], "print_keyvaluepairnode() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.plist.plistformatter method)": [[11, "graphtage.plist.PLISTFormatter.print_LeafNode"]], "print_listnode() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.print_ListNode"]], "print_mappingnode() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.print_MultiSetNode"]], "print_plistnode() (graphtage.plist.plistformatter method)": [[11, "graphtage.plist.PLISTFormatter.print_PLISTNode"]], "print_sequencenode() (graphtage.plist.plistsequenceformatter method)": [[11, "graphtage.plist.PLISTSequenceFormatter.print_SequenceNode"]], "print_stringnode() (graphtage.plist.plistformatter method)": [[11, "graphtage.plist.PLISTFormatter.print_StringNode"]], "print_parent_context() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.print_parent_context"]], "root (graphtage.plist.plistformatter property)": [[11, "graphtage.plist.PLISTFormatter.root"]], "root (graphtage.plist.plistsequenceformatter property)": [[11, "graphtage.plist.PLISTSequenceFormatter.root"]], "sub_format_types (graphtage.plist.plistformatter attribute)": [[11, "graphtage.plist.PLISTFormatter.sub_format_types"]], "sub_format_types (graphtage.plist.plistsequenceformatter attribute)": [[11, "graphtage.plist.PLISTSequenceFormatter.sub_format_types"]], "sub_formatters (graphtage.plist.plistformatter attribute)": [[11, "graphtage.plist.PLISTFormatter.sub_formatters"]], "sub_formatters (graphtage.plist.plistsequenceformatter attribute)": [[11, "graphtage.plist.PLISTSequenceFormatter.sub_formatters"]], "to_obj() (graphtage.plist.plistnode method)": [[11, "graphtage.plist.PLISTNode.to_obj"]], "total_size (graphtage.plist.plistnode property)": [[11, "graphtage.plist.PLISTNode.total_size"]], "write_obj() (graphtage.plist.plistformatter static method)": [[11, "graphtage.plist.PLISTFormatter.write_obj"]], "ansicontext (class in graphtage.printer)": [[12, "graphtage.printer.ANSIContext"]], "combiningmarkcontext (class in graphtage.printer)": [[12, "graphtage.printer.CombiningMarkContext"]], "combiningmarkwriter (class in graphtage.printer)": [[12, "graphtage.printer.CombiningMarkWriter"]], "default_printer (in module graphtage.printer)": [[12, "graphtage.printer.DEFAULT_PRINTER"]], "htmlansicontext (class in graphtage.printer)": [[12, "graphtage.printer.HTMLANSIContext"]], "htmlprinter (class in graphtage.printer)": [[12, "graphtage.printer.HTMLPrinter"]], "nullansicontext (class in graphtage.printer)": [[12, "graphtage.printer.NullANSIContext"]], "printer (class in graphtage.printer)": [[12, "graphtage.printer.Printer"]], "rawwriter (class in graphtage.printer)": [[12, "graphtage.printer.RawWriter"]], "writer (class in graphtage.printer)": [[12, "graphtage.printer.Writer"]], "__init__() (graphtage.printer.ansicontext method)": [[12, "graphtage.printer.ANSIContext.__init__"]], "__init__() (graphtage.printer.combiningmarkcontext method)": [[12, "graphtage.printer.CombiningMarkContext.__init__"]], "__init__() (graphtage.printer.combiningmarkwriter method)": [[12, "graphtage.printer.CombiningMarkWriter.__init__"]], "__init__() (graphtage.printer.htmlansicontext method)": [[12, "graphtage.printer.HTMLANSIContext.__init__"]], "__init__() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.__init__"]], "__init__() (graphtage.printer.nullansicontext method)": [[12, "graphtage.printer.NullANSIContext.__init__"]], "__init__() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.__init__"]], "__init__() (graphtage.printer.rawwriter method)": [[12, "graphtage.printer.RawWriter.__init__"]], "__init__() (graphtage.printer.writer method)": [[12, "graphtage.printer.Writer.__init__"]], "add() (graphtage.printer.combiningmarkwriter method)": [[12, "graphtage.printer.CombiningMarkWriter.add"]], "ansi_color (graphtage.printer.htmlprinter property)": [[12, "graphtage.printer.HTMLPrinter.ansi_color"]], "ansi_color (graphtage.printer.printer property)": [[12, "graphtage.printer.Printer.ansi_color"]], "back (graphtage.printer.ansicontext property)": [[12, "graphtage.printer.ANSIContext.back"]], "back (graphtage.printer.htmlansicontext property)": [[12, "graphtage.printer.HTMLANSIContext.back"]], "background() (graphtage.printer.ansicontext method)": [[12, "graphtage.printer.ANSIContext.background"]], "background() (graphtage.printer.htmlansicontext method)": [[12, "graphtage.printer.HTMLANSIContext.background"]], "background() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.background"]], "background() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.background"]], "bright() (graphtage.printer.ansicontext method)": [[12, "graphtage.printer.ANSIContext.bright"]], "bright() (graphtage.printer.htmlansicontext method)": [[12, "graphtage.printer.HTMLANSIContext.bright"]], "bright() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.bright"]], "bright() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.bright"]], "close() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.close"]], "close() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.close"]], "closed (graphtage.printer.htmlprinter property)": [[12, "graphtage.printer.HTMLPrinter.closed"]], "closed (graphtage.printer.printer property)": [[12, "graphtage.printer.Printer.closed"]], "color() (graphtage.printer.ansicontext method)": [[12, "graphtage.printer.ANSIContext.color"]], "color() (graphtage.printer.htmlansicontext method)": [[12, "graphtage.printer.HTMLANSIContext.color"]], "color() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.color"]], "color() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.color"]], "context() (graphtage.printer.combiningmarkwriter method)": [[12, "graphtage.printer.CombiningMarkWriter.context"]], "context() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.context"]], "context() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.context"]], "dim() (graphtage.printer.ansicontext method)": [[12, "graphtage.printer.ANSIContext.dim"]], "dim() (graphtage.printer.htmlansicontext method)": [[12, "graphtage.printer.HTMLANSIContext.dim"]], "dim() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.dim"]], "dim() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.dim"]], "enabled (graphtage.printer.combiningmarkwriter attribute)": [[12, "graphtage.printer.CombiningMarkWriter.enabled"]], "end_code (graphtage.printer.ansicontext property)": [[12, "graphtage.printer.ANSIContext.end_code"]], "end_code (graphtage.printer.htmlansicontext property)": [[12, "graphtage.printer.HTMLANSIContext.end_code"]], "fileno() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.fileno"]], "fileno() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.fileno"]], "flush() (graphtage.printer.combiningmarkwriter method)": [[12, "graphtage.printer.CombiningMarkWriter.flush"]], "flush() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.flush"]], "flush() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.flush"]], "flush() (graphtage.printer.rawwriter method)": [[12, "graphtage.printer.RawWriter.flush"]], "flush() (graphtage.printer.writer method)": [[12, "graphtage.printer.Writer.flush"]], "fore (graphtage.printer.ansicontext property)": [[12, "graphtage.printer.ANSIContext.fore"]], "fore (graphtage.printer.htmlansicontext property)": [[12, "graphtage.printer.HTMLANSIContext.fore"]], "get_back() (graphtage.printer.htmlansicontext static method)": [[12, "graphtage.printer.HTMLANSIContext.get_back"]], "get_fore() (graphtage.printer.htmlansicontext static method)": [[12, "graphtage.printer.HTMLANSIContext.get_fore"]], "graphtage.printer": [[12, "module-graphtage.printer"]], "html_element() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.html_element"]], "indent() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.indent"]], "indent() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.indent"]], "indent_str (graphtage.printer.htmlprinter attribute)": [[12, "graphtage.printer.HTMLPrinter.indent_str"]], "indent_str (graphtage.printer.printer attribute)": [[12, "graphtage.printer.Printer.indent_str"]], "indents (graphtage.printer.htmlprinter attribute)": [[12, "graphtage.printer.HTMLPrinter.indents"]], "indents (graphtage.printer.printer attribute)": [[12, "graphtage.printer.Printer.indents"]], "is_applied (graphtage.printer.ansicontext attribute)": [[12, "graphtage.printer.ANSIContext.is_applied"]], "is_applied (graphtage.printer.htmlansicontext attribute)": [[12, "graphtage.printer.HTMLANSIContext.is_applied"]], "isatty() (graphtage.printer.combiningmarkwriter method)": [[12, "graphtage.printer.CombiningMarkWriter.isatty"]], "isatty() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.isatty"]], "isatty() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.isatty"]], "isatty() (graphtage.printer.rawwriter method)": [[12, "graphtage.printer.RawWriter.isatty"]], "isatty() (graphtage.printer.writer method)": [[12, "graphtage.printer.Writer.isatty"]], "marks (graphtage.printer.combiningmarkwriter property)": [[12, "graphtage.printer.CombiningMarkWriter.marks"]], "marks_str (graphtage.printer.combiningmarkwriter property)": [[12, "graphtage.printer.CombiningMarkWriter.marks_str"]], "mode (graphtage.printer.htmlprinter property)": [[12, "graphtage.printer.HTMLPrinter.mode"]], "mode (graphtage.printer.printer property)": [[12, "graphtage.printer.Printer.mode"]], "name (graphtage.printer.htmlprinter property)": [[12, "graphtage.printer.HTMLPrinter.name"]], "name (graphtage.printer.printer property)": [[12, "graphtage.printer.Printer.name"]], "newline() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.newline"]], "newline() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.newline"]], "only_ansi() (in module graphtage.printer)": [[12, "graphtage.printer.only_ansi"]], "out_stream (graphtage.printer.htmlprinter attribute)": [[12, "graphtage.printer.HTMLPrinter.out_stream"]], "out_stream (graphtage.printer.printer attribute)": [[12, "graphtage.printer.Printer.out_stream"]], "parent (graphtage.printer.ansicontext property)": [[12, "graphtage.printer.ANSIContext.parent"]], "parent (graphtage.printer.combiningmarkwriter attribute)": [[12, "graphtage.printer.CombiningMarkWriter.parent"]], "parent (graphtage.printer.htmlansicontext property)": [[12, "graphtage.printer.HTMLANSIContext.parent"]], "quiet (graphtage.printer.htmlprinter attribute)": [[12, "graphtage.printer.HTMLPrinter.quiet"]], "quiet (graphtage.printer.printer attribute)": [[12, "graphtage.printer.Printer.quiet"]], "raw_write() (graphtage.printer.combiningmarkwriter method)": [[12, "graphtage.printer.CombiningMarkWriter.raw_write"]], "raw_write() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.raw_write"]], "raw_write() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.raw_write"]], "raw_write() (graphtage.printer.rawwriter method)": [[12, "graphtage.printer.RawWriter.raw_write"]], "read() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.read"]], "read() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.read"]], "readable() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.readable"]], "readable() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.readable"]], "readline() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.readline"]], "readline() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.readline"]], "readlines() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.readlines"]], "readlines() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.readlines"]], "remove() (graphtage.printer.combiningmarkwriter method)": [[12, "graphtage.printer.CombiningMarkWriter.remove"]], "root (graphtage.printer.ansicontext property)": [[12, "graphtage.printer.ANSIContext.root"]], "root (graphtage.printer.htmlansicontext property)": [[12, "graphtage.printer.HTMLANSIContext.root"]], "seek() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.seek"]], "seek() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.seek"]], "seekable() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.seekable"]], "seekable() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.seekable"]], "start_code (graphtage.printer.ansicontext property)": [[12, "graphtage.printer.ANSIContext.start_code"]], "start_code (graphtage.printer.htmlansicontext property)": [[12, "graphtage.printer.HTMLANSIContext.start_code"]], "status_stream (graphtage.printer.htmlprinter attribute)": [[12, "graphtage.printer.HTMLPrinter.status_stream"]], "status_stream (graphtage.printer.printer attribute)": [[12, "graphtage.printer.Printer.status_stream"]], "stream (graphtage.printer.htmlansicontext attribute)": [[12, "graphtage.printer.HTMLANSIContext.stream"]], "strike() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.strike"]], "strike() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.strike"]], "style (graphtage.printer.ansicontext property)": [[12, "graphtage.printer.ANSIContext.style"]], "style (graphtage.printer.htmlansicontext property)": [[12, "graphtage.printer.HTMLANSIContext.style"]], "tell() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.tell"]], "tell() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.tell"]], "tqdm() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.tqdm"]], "tqdm() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.tqdm"]], "trange() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.trange"]], "trange() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.trange"]], "truncate() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.truncate"]], "truncate() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.truncate"]], "under_plus() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.under_plus"]], "under_plus() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.under_plus"]], "writable() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.writable"]], "writable() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.writable"]], "write() (graphtage.printer.combiningmarkwriter method)": [[12, "graphtage.printer.CombiningMarkWriter.write"]], "write() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.write"]], "write() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.write"]], "write() (graphtage.printer.rawwriter method)": [[12, "graphtage.printer.RawWriter.write"]], "write() (graphtage.printer.writer method)": [[12, "graphtage.printer.Writer.write"]], "write_raw (graphtage.printer.htmlprinter attribute)": [[12, "graphtage.printer.HTMLPrinter.write_raw"]], "write_raw (graphtage.printer.printer attribute)": [[12, "graphtage.printer.Printer.write_raw"]], "writelines() (graphtage.printer.htmlprinter method)": [[12, "graphtage.printer.HTMLPrinter.writelines"]], "writelines() (graphtage.printer.printer method)": [[12, "graphtage.printer.Printer.writelines"]], "statuswriter (class in graphtage.progress)": [[13, "graphtage.progress.StatusWriter"]], "__init__() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.__init__"]], "close() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.close"]], "closed (graphtage.progress.statuswriter property)": [[13, "graphtage.progress.StatusWriter.closed"]], "fileno() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.fileno"]], "flush() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.flush"]], "graphtage.progress": [[13, "module-graphtage.progress"]], "isatty() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.isatty"]], "mode (graphtage.progress.statuswriter property)": [[13, "graphtage.progress.StatusWriter.mode"]], "name (graphtage.progress.statuswriter property)": [[13, "graphtage.progress.StatusWriter.name"]], "quiet (graphtage.progress.statuswriter attribute)": [[13, "graphtage.progress.StatusWriter.quiet"]], "read() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.read"]], "readable() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.readable"]], "readline() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.readline"]], "readlines() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.readlines"]], "seek() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.seek"]], "seekable() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.seekable"]], "status_stream (graphtage.progress.statuswriter attribute)": [[13, "graphtage.progress.StatusWriter.status_stream"]], "tell() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.tell"]], "tqdm() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.tqdm"]], "trange() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.trange"]], "truncate() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.truncate"]], "writable() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.writable"]], "write() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.write"]], "write_raw (graphtage.progress.statuswriter attribute)": [[13, "graphtage.progress.StatusWriter.write_raw"]], "writelines() (graphtage.progress.statuswriter method)": [[13, "graphtage.progress.StatusWriter.writelines"]], "default_instance (graphtage.pydiff.pydictformatter attribute)": [[14, "graphtage.pydiff.PyDictFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pydiffformatter attribute)": [[14, "graphtage.pydiff.PyDiffFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pylistformatter attribute)": [[14, "graphtage.pydiff.PyListFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pyobjformatter attribute)": [[14, "graphtage.pydiff.PyObjFormatter.DEFAULT_INSTANCE"]], "pydictformatter (class in graphtage.pydiff)": [[14, "graphtage.pydiff.PyDictFormatter"]], "pydiffformatter (class in graphtage.pydiff)": [[14, "graphtage.pydiff.PyDiffFormatter"]], "pylistformatter (class in graphtage.pydiff)": [[14, "graphtage.pydiff.PyListFormatter"]], "pyobj (class in graphtage.pydiff)": [[14, "graphtage.pydiff.PyObj"]], "pyobjattribute (class in graphtage.pydiff)": [[14, "graphtage.pydiff.PyObjAttribute"]], "pyobjattributes (class in graphtage.pydiff)": [[14, "graphtage.pydiff.PyObjAttributes"]], "pyobjedit (class in graphtage.pydiff)": [[14, "graphtage.pydiff.PyObjEdit"]], "pyobjfixedattributes (class in graphtage.pydiff)": [[14, "graphtage.pydiff.PyObjFixedAttributes"]], "pyobjformatter (class in graphtage.pydiff)": [[14, "graphtage.pydiff.PyObjFormatter"]], "__contains__() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.__contains__"]], "__eq__() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.__eq__"]], "__getitem__() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.__getitem__"]], "__init__() (graphtage.pydiff.pydictformatter method)": [[14, "graphtage.pydiff.PyDictFormatter.__init__"]], "__init__() (graphtage.pydiff.pydiffformatter method)": [[14, "graphtage.pydiff.PyDiffFormatter.__init__"]], "__init__() (graphtage.pydiff.pylistformatter method)": [[14, "graphtage.pydiff.PyListFormatter.__init__"]], "__init__() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.__init__"]], "__init__() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.__init__"]], "__init__() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.__init__"]], "__init__() (graphtage.pydiff.pyobjedit method)": [[14, "graphtage.pydiff.PyObjEdit.__init__"]], "__init__() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.__init__"]], "__init__() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.__init__"]], "__iter__() (graphtage.pydiff.pyobjedit method)": [[14, "graphtage.pydiff.PyObjEdit.__iter__"]], "__len__() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.__len__"]], "__lt__() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.__lt__"]], "__lt__() (graphtage.pydiff.pyobjedit method)": [[14, "graphtage.pydiff.PyObjEdit.__lt__"]], "__new__() (graphtage.pydiff.pydictformatter static method)": [[14, "graphtage.pydiff.PyDictFormatter.__new__"]], "__new__() (graphtage.pydiff.pydiffformatter static method)": [[14, "graphtage.pydiff.PyDiffFormatter.__new__"]], "__new__() (graphtage.pydiff.pylistformatter static method)": [[14, "graphtage.pydiff.PyListFormatter.__new__"]], "__new__() (graphtage.pydiff.pyobjformatter static method)": [[14, "graphtage.pydiff.PyObjFormatter.__new__"]], "all_children_are_leaves() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.all_children_are_leaves"]], "bounds() (graphtage.pydiff.pyobjedit method)": [[14, "graphtage.pydiff.PyObjEdit.bounds"]], "build_tree() (in module graphtage.pydiff)": [[14, "graphtage.pydiff.build_tree"]], "calculate_total_size() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.calculate_total_size"]], "child_indexes (graphtage.pydiff.pyobjattributes attribute)": [[14, "graphtage.pydiff.PyObjAttributes.child_indexes"]], "child_indexes (graphtage.pydiff.pyobjfixedattributes attribute)": [[14, "graphtage.pydiff.PyObjFixedAttributes.child_indexes"]], "children() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.children"]], "children() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.children"]], "children() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.children"]], "children() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.children"]], "container_type (graphtage.pydiff.pyobjattributes property)": [[14, "graphtage.pydiff.PyObjAttributes.container_type"]], "container_type (graphtage.pydiff.pyobjfixedattributes property)": [[14, "graphtage.pydiff.PyObjFixedAttributes.container_type"]], "delimiter_callback (graphtage.pydiff.pydictformatter attribute)": [[14, "graphtage.pydiff.PyDictFormatter.delimiter_callback"]], "delimiter_callback (graphtage.pydiff.pylistformatter attribute)": [[14, "graphtage.pydiff.PyListFormatter.delimiter_callback"]], "dfs() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.dfs"]], "dfs() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.dfs"]], "dfs() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.dfs"]], "dfs() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.dfs"]], "diff() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.diff"]], "diff() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.diff"]], "diff() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.diff"]], "diff() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.diff"]], "diff() (in module graphtage.pydiff)": [[14, "graphtage.pydiff.diff"]], "edit_modifiers (graphtage.pydiff.pyobj attribute)": [[14, "graphtage.pydiff.PyObj.edit_modifiers"]], "edit_modifiers (graphtage.pydiff.pyobjattribute attribute)": [[14, "graphtage.pydiff.PyObjAttribute.edit_modifiers"]], "edit_modifiers (graphtage.pydiff.pyobjattributes attribute)": [[14, "graphtage.pydiff.PyObjAttributes.edit_modifiers"]], "edit_modifiers (graphtage.pydiff.pyobjfixedattributes attribute)": [[14, "graphtage.pydiff.PyObjFixedAttributes.edit_modifiers"]], "edit_print() (graphtage.pydiff.pydictformatter method)": [[14, "graphtage.pydiff.PyDictFormatter.edit_print"]], "edit_print() (graphtage.pydiff.pylistformatter method)": [[14, "graphtage.pydiff.PyListFormatter.edit_print"]], "edit_print() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.edit_print"]], "editable_dict() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.editable_dict"]], "edited (graphtage.pydiff.pyobj property)": [[14, "graphtage.pydiff.PyObj.edited"]], "edited (graphtage.pydiff.pyobjattribute property)": [[14, "graphtage.pydiff.PyObjAttribute.edited"]], "edited (graphtage.pydiff.pyobjattributes property)": [[14, "graphtage.pydiff.PyObjAttributes.edited"]], "edited (graphtage.pydiff.pyobjfixedattributes property)": [[14, "graphtage.pydiff.PyObjFixedAttributes.edited"]], "edits() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.edits"]], "edits() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.edits"]], "edits() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.edits"]], "edits() (graphtage.pydiff.pyobjedit method)": [[14, "graphtage.pydiff.PyObjEdit.edits"]], "edits() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.edits"]], "from_dict() (graphtage.pydiff.pyobjattributes class method)": [[14, "graphtage.pydiff.PyObjAttributes.from_dict"]], "from_dict() (graphtage.pydiff.pyobjfixedattributes class method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.from_dict"]], "from_node (graphtage.pydiff.pyobjedit attribute)": [[14, "graphtage.pydiff.PyObjEdit.from_node"]], "get_all_edit_contexts() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.get_all_edit_contexts"]], "get_all_edits() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.get_all_edits"]], "get_formatter() (graphtage.pydiff.pydictformatter method)": [[14, "graphtage.pydiff.PyDictFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pydiffformatter method)": [[14, "graphtage.pydiff.PyDiffFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pylistformatter method)": [[14, "graphtage.pydiff.PyListFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.get_formatter"]], "graphtage.pydiff": [[14, "module-graphtage.pydiff"]], "has_non_zero_cost() (graphtage.pydiff.pyobjedit method)": [[14, "graphtage.pydiff.PyObjEdit.has_non_zero_cost"]], "initial_bounds (graphtage.pydiff.pyobjedit attribute)": [[14, "graphtage.pydiff.PyObjEdit.initial_bounds"]], "is_complete() (graphtage.pydiff.pyobjedit method)": [[14, "graphtage.pydiff.PyObjEdit.is_complete"]], "is_leaf (graphtage.pydiff.pyobj property)": [[14, "graphtage.pydiff.PyObj.is_leaf"]], "is_leaf (graphtage.pydiff.pyobjattribute property)": [[14, "graphtage.pydiff.PyObjAttribute.is_leaf"]], "is_leaf (graphtage.pydiff.pyobjattributes property)": [[14, "graphtage.pydiff.PyObjAttributes.is_leaf"]], "is_leaf (graphtage.pydiff.pyobjfixedattributes property)": [[14, "graphtage.pydiff.PyObjFixedAttributes.is_leaf"]], "is_partial (graphtage.pydiff.pydictformatter attribute)": [[14, "graphtage.pydiff.PyDictFormatter.is_partial"]], "is_partial (graphtage.pydiff.pydiffformatter attribute)": [[14, "graphtage.pydiff.PyDiffFormatter.is_partial"]], "is_partial (graphtage.pydiff.pylistformatter attribute)": [[14, "graphtage.pydiff.PyListFormatter.is_partial"]], "is_partial (graphtage.pydiff.pyobjformatter attribute)": [[14, "graphtage.pydiff.PyObjFormatter.is_partial"]], "item_newline() (graphtage.pydiff.pydictformatter method)": [[14, "graphtage.pydiff.PyDictFormatter.item_newline"]], "item_newline() (graphtage.pydiff.pylistformatter method)": [[14, "graphtage.pydiff.PyListFormatter.item_newline"]], "item_newline() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.item_newline"]], "items() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.items"]], "items() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.items"]], "items_indent() (graphtage.pydiff.pydictformatter method)": [[14, "graphtage.pydiff.PyDictFormatter.items_indent"]], "items_indent() (graphtage.pydiff.pylistformatter method)": [[14, "graphtage.pydiff.PyListFormatter.items_indent"]], "items_indent() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.items_indent"]], "make_edited() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.make_edited"]], "make_edited() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.make_edited"]], "make_edited() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.make_edited"]], "make_edited() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.make_edited"]], "make_key_value_pair_node() (graphtage.pydiff.pyobjattributes class method)": [[14, "graphtage.pydiff.PyObjAttributes.make_key_value_pair_node"]], "make_key_value_pair_node() (graphtage.pydiff.pyobjfixedattributes class method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.make_key_value_pair_node"]], "on_diff() (graphtage.pydiff.pyobjedit method)": [[14, "graphtage.pydiff.PyObjEdit.on_diff"]], "parent (graphtage.pydiff.pydictformatter attribute)": [[14, "graphtage.pydiff.PyDictFormatter.parent"]], "parent (graphtage.pydiff.pydiffformatter attribute)": [[14, "graphtage.pydiff.PyDiffFormatter.parent"]], "parent (graphtage.pydiff.pylistformatter attribute)": [[14, "graphtage.pydiff.PyListFormatter.parent"]], "parent (graphtage.pydiff.pyobj property)": [[14, "graphtage.pydiff.PyObj.parent"]], "parent (graphtage.pydiff.pyobjattribute property)": [[14, "graphtage.pydiff.PyObjAttribute.parent"]], "parent (graphtage.pydiff.pyobjattributes property)": [[14, "graphtage.pydiff.PyObjAttributes.parent"]], "parent (graphtage.pydiff.pyobjfixedattributes property)": [[14, "graphtage.pydiff.PyObjFixedAttributes.parent"]], "parent (graphtage.pydiff.pyobjformatter attribute)": [[14, "graphtage.pydiff.PyObjFormatter.parent"]], "print() (graphtage.pydiff.pydictformatter method)": [[14, "graphtage.pydiff.PyDictFormatter.print"]], "print() (graphtage.pydiff.pydiffformatter method)": [[14, "graphtage.pydiff.PyDiffFormatter.print"]], "print() (graphtage.pydiff.pylistformatter method)": [[14, "graphtage.pydiff.PyListFormatter.print"]], "print() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.print"]], "print() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.print"]], "print() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.print"]], "print() (graphtage.pydiff.pyobjedit method)": [[14, "graphtage.pydiff.PyObjEdit.print"]], "print() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.print"]], "print() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.print"]], "print_listnode() (graphtage.pydiff.pylistformatter method)": [[14, "graphtage.pydiff.PyListFormatter.print_ListNode"]], "print_mappingnode() (graphtage.pydiff.pydictformatter method)": [[14, "graphtage.pydiff.PyDictFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.pydiff.pydictformatter method)": [[14, "graphtage.pydiff.PyDictFormatter.print_MultiSetNode"]], "print_pyobj() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.print_PyObj"]], "print_pyobjattribute() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.print_PyObjAttribute"]], "print_pyobjattributes() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.print_PyObjAttributes"]], "print_pyobjfixedattributes() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.print_PyObjFixedAttributes"]], "print_sequencenode() (graphtage.pydiff.pydictformatter method)": [[14, "graphtage.pydiff.PyDictFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.pydiff.pylistformatter method)": [[14, "graphtage.pydiff.PyListFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.pydiff.pyobjformatter method)": [[14, "graphtage.pydiff.PyObjFormatter.print_SequenceNode"]], "print_diff() (in module graphtage.pydiff)": [[14, "graphtage.pydiff.print_diff"]], "print_parent_context() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.print_parent_context"]], "root (graphtage.pydiff.pydictformatter property)": [[14, "graphtage.pydiff.PyDictFormatter.root"]], "root (graphtage.pydiff.pydiffformatter property)": [[14, "graphtage.pydiff.PyDiffFormatter.root"]], "root (graphtage.pydiff.pylistformatter property)": [[14, "graphtage.pydiff.PyListFormatter.root"]], "root (graphtage.pydiff.pyobjformatter property)": [[14, "graphtage.pydiff.PyObjFormatter.root"]], "sub_format_types (graphtage.pydiff.pydictformatter attribute)": [[14, "graphtage.pydiff.PyDictFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pydiffformatter attribute)": [[14, "graphtage.pydiff.PyDiffFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pylistformatter attribute)": [[14, "graphtage.pydiff.PyListFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pyobjformatter attribute)": [[14, "graphtage.pydiff.PyObjFormatter.sub_format_types"]], "sub_formatters (graphtage.pydiff.pydictformatter attribute)": [[14, "graphtage.pydiff.PyDictFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pydiffformatter attribute)": [[14, "graphtage.pydiff.PyDiffFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pylistformatter attribute)": [[14, "graphtage.pydiff.PyListFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pyobjformatter attribute)": [[14, "graphtage.pydiff.PyObjFormatter.sub_formatters"]], "tighten_bounds() (graphtage.pydiff.pyobjedit method)": [[14, "graphtage.pydiff.PyObjEdit.tighten_bounds"]], "to_obj() (graphtage.pydiff.pyobj method)": [[14, "graphtage.pydiff.PyObj.to_obj"]], "to_obj() (graphtage.pydiff.pyobjattribute method)": [[14, "graphtage.pydiff.PyObjAttribute.to_obj"]], "to_obj() (graphtage.pydiff.pyobjattributes method)": [[14, "graphtage.pydiff.PyObjAttributes.to_obj"]], "to_obj() (graphtage.pydiff.pyobjfixedattributes method)": [[14, "graphtage.pydiff.PyObjFixedAttributes.to_obj"]], "total_size (graphtage.pydiff.pyobj property)": [[14, "graphtage.pydiff.PyObj.total_size"]], "total_size (graphtage.pydiff.pyobjattribute property)": [[14, "graphtage.pydiff.PyObjAttribute.total_size"]], "total_size (graphtage.pydiff.pyobjattributes property)": [[14, "graphtage.pydiff.PyObjAttributes.total_size"]], "total_size (graphtage.pydiff.pyobjfixedattributes property)": [[14, "graphtage.pydiff.PyObjFixedAttributes.total_size"]], "valid (graphtage.pydiff.pyobjedit property)": [[14, "graphtage.pydiff.PyObjEdit.valid"]], "iterativetighteningsearch (class in graphtage.search)": [[15, "graphtage.search.IterativeTighteningSearch"]], "__bool__() (graphtage.search.iterativetighteningsearch method)": [[15, "graphtage.search.IterativeTighteningSearch.__bool__"]], "__init__() (graphtage.search.iterativetighteningsearch method)": [[15, "graphtage.search.IterativeTighteningSearch.__init__"]], "best_match (graphtage.search.iterativetighteningsearch property)": [[15, "graphtage.search.IterativeTighteningSearch.best_match"]], "bounds() (graphtage.search.iterativetighteningsearch method)": [[15, "graphtage.search.IterativeTighteningSearch.bounds"]], "goal_test() (graphtage.search.iterativetighteningsearch method)": [[15, "graphtage.search.IterativeTighteningSearch.goal_test"]], "graphtage.search": [[15, "module-graphtage.search"]], "remove_best() (graphtage.search.iterativetighteningsearch method)": [[15, "graphtage.search.IterativeTighteningSearch.remove_best"]], "search() (graphtage.search.iterativetighteningsearch method)": [[15, "graphtage.search.IterativeTighteningSearch.search"]], "tighten_bounds() (graphtage.search.iterativetighteningsearch method)": [[15, "graphtage.search.IterativeTighteningSearch.tighten_bounds"]], "default_instance (graphtage.sequences.sequenceformatter attribute)": [[16, "graphtage.sequences.SequenceFormatter.DEFAULT_INSTANCE"]], "fixedlengthsequenceedit (class in graphtage.sequences)": [[16, "graphtage.sequences.FixedLengthSequenceEdit"]], "sequenceedit (class in graphtage.sequences)": [[16, "graphtage.sequences.SequenceEdit"]], "sequenceformatter (class in graphtage.sequences)": [[16, "graphtage.sequences.SequenceFormatter"]], "sequencenode (class in graphtage.sequences)": [[16, "graphtage.sequences.SequenceNode"]], "__init__() (graphtage.sequences.fixedlengthsequenceedit method)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.__init__"]], "__init__() (graphtage.sequences.sequenceedit method)": [[16, "graphtage.sequences.SequenceEdit.__init__"]], "__init__() (graphtage.sequences.sequenceformatter method)": [[16, "graphtage.sequences.SequenceFormatter.__init__"]], "__init__() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.__init__"]], "__iter__() (graphtage.sequences.fixedlengthsequenceedit method)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.__iter__"]], "__iter__() (graphtage.sequences.sequenceedit method)": [[16, "graphtage.sequences.SequenceEdit.__iter__"]], "__iter__() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.__iter__"]], "__len__() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.__len__"]], "__lt__() (graphtage.sequences.fixedlengthsequenceedit method)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.__lt__"]], "__lt__() (graphtage.sequences.sequenceedit method)": [[16, "graphtage.sequences.SequenceEdit.__lt__"]], "__new__() (graphtage.sequences.sequenceformatter static method)": [[16, "graphtage.sequences.SequenceFormatter.__new__"]], "all_children_are_leaves() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.all_children_are_leaves"]], "bounds() (graphtage.sequences.fixedlengthsequenceedit method)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.bounds"]], "bounds() (graphtage.sequences.sequenceedit method)": [[16, "graphtage.sequences.SequenceEdit.bounds"]], "calculate_total_size() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.calculate_total_size"]], "children() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.children"]], "container_type (graphtage.sequences.sequencenode property)": [[16, "graphtage.sequences.SequenceNode.container_type"]], "dfs() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.dfs"]], "diff() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.diff"]], "edit_modifiers (graphtage.sequences.sequencenode attribute)": [[16, "graphtage.sequences.SequenceNode.edit_modifiers"]], "edit_print() (graphtage.sequences.sequenceformatter method)": [[16, "graphtage.sequences.SequenceFormatter.edit_print"]], "editable_dict() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.editable_dict"]], "edited (graphtage.sequences.sequencenode property)": [[16, "graphtage.sequences.SequenceNode.edited"]], "edits() (graphtage.sequences.fixedlengthsequenceedit method)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.edits"]], "edits() (graphtage.sequences.sequenceedit method)": [[16, "graphtage.sequences.SequenceEdit.edits"]], "edits() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.edits"]], "from_node (graphtage.sequences.fixedlengthsequenceedit attribute)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.from_node"]], "from_node (graphtage.sequences.sequenceedit attribute)": [[16, "graphtage.sequences.SequenceEdit.from_node"]], "get_all_edit_contexts() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.get_all_edits"]], "get_formatter() (graphtage.sequences.sequenceformatter method)": [[16, "graphtage.sequences.SequenceFormatter.get_formatter"]], "graphtage.sequences": [[16, "module-graphtage.sequences"]], "has_non_zero_cost() (graphtage.sequences.fixedlengthsequenceedit method)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.sequences.sequenceedit method)": [[16, "graphtage.sequences.SequenceEdit.has_non_zero_cost"]], "initial_bounds (graphtage.sequences.fixedlengthsequenceedit attribute)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.initial_bounds"]], "initial_bounds (graphtage.sequences.sequenceedit attribute)": [[16, "graphtage.sequences.SequenceEdit.initial_bounds"]], "is_complete() (graphtage.sequences.fixedlengthsequenceedit method)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.is_complete"]], "is_complete() (graphtage.sequences.sequenceedit method)": [[16, "graphtage.sequences.SequenceEdit.is_complete"]], "is_leaf (graphtage.sequences.sequencenode property)": [[16, "graphtage.sequences.SequenceNode.is_leaf"]], "is_partial (graphtage.sequences.sequenceformatter attribute)": [[16, "graphtage.sequences.SequenceFormatter.is_partial"]], "item_newline() (graphtage.sequences.sequenceformatter method)": [[16, "graphtage.sequences.SequenceFormatter.item_newline"]], "items_indent() (graphtage.sequences.sequenceformatter method)": [[16, "graphtage.sequences.SequenceFormatter.items_indent"]], "make_edited() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.make_edited"]], "on_diff() (graphtage.sequences.fixedlengthsequenceedit method)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.on_diff"]], "on_diff() (graphtage.sequences.sequenceedit method)": [[16, "graphtage.sequences.SequenceEdit.on_diff"]], "parent (graphtage.sequences.sequenceformatter attribute)": [[16, "graphtage.sequences.SequenceFormatter.parent"]], "parent (graphtage.sequences.sequencenode property)": [[16, "graphtage.sequences.SequenceNode.parent"]], "print() (graphtage.sequences.fixedlengthsequenceedit method)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.print"]], "print() (graphtage.sequences.sequenceedit method)": [[16, "graphtage.sequences.SequenceEdit.print"]], "print() (graphtage.sequences.sequenceformatter method)": [[16, "graphtage.sequences.SequenceFormatter.print"]], "print() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.print"]], "print_sequencenode() (graphtage.sequences.sequenceformatter method)": [[16, "graphtage.sequences.SequenceFormatter.print_SequenceNode"]], "print_parent_context() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.print_parent_context"]], "root (graphtage.sequences.sequenceformatter property)": [[16, "graphtage.sequences.SequenceFormatter.root"]], "sequence (graphtage.sequences.fixedlengthsequenceedit property)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.sequence"]], "sequence (graphtage.sequences.sequenceedit property)": [[16, "graphtage.sequences.SequenceEdit.sequence"]], "sub_format_types (graphtage.sequences.sequenceformatter attribute)": [[16, "graphtage.sequences.SequenceFormatter.sub_format_types"]], "sub_formatters (graphtage.sequences.sequenceformatter attribute)": [[16, "graphtage.sequences.SequenceFormatter.sub_formatters"]], "tighten_bounds() (graphtage.sequences.fixedlengthsequenceedit method)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.tighten_bounds"]], "tighten_bounds() (graphtage.sequences.sequenceedit method)": [[16, "graphtage.sequences.SequenceEdit.tighten_bounds"]], "to_obj() (graphtage.sequences.sequencenode method)": [[16, "graphtage.sequences.SequenceNode.to_obj"]], "total_size (graphtage.sequences.sequencenode property)": [[16, "graphtage.sequences.SequenceNode.total_size"]], "valid (graphtage.sequences.fixedlengthsequenceedit property)": [[16, "graphtage.sequences.FixedLengthSequenceEdit.valid"]], "valid (graphtage.sequences.sequenceedit property)": [[16, "graphtage.sequences.SequenceEdit.valid"]], "hashablecounter (class in graphtage.utils)": [[17, "graphtage.utils.HashableCounter"]], "orderedcounter (class in graphtage.utils)": [[17, "graphtage.utils.OrderedCounter"]], "sized (class in graphtage.utils)": [[17, "graphtage.utils.Sized"]], "sparsematrix (class in graphtage.utils)": [[17, "graphtage.utils.SparseMatrix"]], "sparsematrix.sparsematrixrow (class in graphtage.utils)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow"]], "tempfile (class in graphtage.utils)": [[17, "graphtage.utils.Tempfile"]], "__add__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__add__"]], "__add__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__add__"]], "__and__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__and__"]], "__and__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__and__"]], "__delitem__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__delitem__"]], "__delitem__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__delitem__"]], "__enter__() (graphtage.utils.tempfile method)": [[17, "graphtage.utils.Tempfile.__enter__"]], "__exit__() (graphtage.utils.tempfile method)": [[17, "graphtage.utils.Tempfile.__exit__"]], "__getitem__() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.__getitem__"]], "__getitem__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.__getitem__"]], "__iadd__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__iadd__"]], "__iadd__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__iadd__"]], "__iand__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__iand__"]], "__iand__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__iand__"]], "__init__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__init__"]], "__init__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__init__"]], "__init__() (graphtage.utils.sized method)": [[17, "graphtage.utils.Sized.__init__"]], "__init__() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.__init__"]], "__init__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.__init__"]], "__init__() (graphtage.utils.tempfile method)": [[17, "graphtage.utils.Tempfile.__init__"]], "__ior__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__ior__"]], "__ior__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__ior__"]], "__isub__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__isub__"]], "__isub__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__isub__"]], "__iter__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.__iter__"]], "__len__() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.__len__"]], "__len__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.__len__"]], "__missing__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__missing__"]], "__missing__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__missing__"]], "__neg__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__neg__"]], "__neg__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__neg__"]], "__or__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__or__"]], "__or__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__or__"]], "__pos__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__pos__"]], "__pos__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__pos__"]], "__sub__() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.__sub__"]], "__sub__() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.__sub__"]], "_keep_positive() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter._keep_positive"]], "_keep_positive() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter._keep_positive"]], "clear() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.clear"]], "clear() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.clear"]], "clear() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.clear"]], "clear() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.clear"]], "copy() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.copy"]], "copy() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.copy"]], "default_value (graphtage.utils.sparsematrix attribute)": [[17, "graphtage.utils.SparseMatrix.default_value"]], "default_value (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.default_value"]], "elements() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.elements"]], "elements() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.elements"]], "fromkeys() (graphtage.utils.hashablecounter class method)": [[17, "graphtage.utils.HashableCounter.fromkeys"]], "fromkeys() (graphtage.utils.orderedcounter class method)": [[17, "graphtage.utils.OrderedCounter.fromkeys"]], "get() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.get"]], "get() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.get"]], "get() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.get"]], "get() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.get"]], "getsizeof (graphtage.utils.sized attribute)": [[17, "graphtage.utils.Sized.getsizeof"]], "getsizeof() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.getsizeof"]], "getsizeof() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.getsizeof"]], "getsizeof() (in module graphtage.utils)": [[17, "graphtage.utils.getsizeof"]], "graphtage.utils": [[17, "module-graphtage.utils"]], "items() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.items"]], "items() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.items"]], "items() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.items"]], "items() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.items"]], "keys() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.keys"]], "keys() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.keys"]], "keys() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.keys"]], "keys() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.keys"]], "largest() (in module graphtage.utils)": [[17, "graphtage.utils.largest"]], "most_common() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.most_common"]], "most_common() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.most_common"]], "move_to_end() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.move_to_end"]], "num_cols (graphtage.utils.sparsematrix attribute)": [[17, "graphtage.utils.SparseMatrix.num_cols"]], "num_cols (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.num_cols"]], "num_filled_elements() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.num_filled_elements"]], "num_rows (graphtage.utils.sparsematrix attribute)": [[17, "graphtage.utils.SparseMatrix.num_rows"]], "pop() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.pop"]], "pop() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.pop"]], "pop() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.pop"]], "popitem() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.popitem"]], "popitem() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.popitem"]], "popitem() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.popitem"]], "row (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.row"]], "row_num (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.row_num"]], "rows (graphtage.utils.sparsematrix attribute)": [[17, "graphtage.utils.SparseMatrix.rows"]], "setdefault() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.setdefault"]], "setdefault() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.setdefault"]], "setdefault() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.setdefault"]], "shape() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.shape"]], "shape() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.shape"]], "smallest() (in module graphtage.utils)": [[17, "graphtage.utils.smallest"]], "subtract() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.subtract"]], "subtract() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.subtract"]], "update() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.update"]], "update() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.update"]], "update() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.update"]], "values() (graphtage.utils.hashablecounter method)": [[17, "graphtage.utils.HashableCounter.values"]], "values() (graphtage.utils.orderedcounter method)": [[17, "graphtage.utils.OrderedCounter.values"]], "values() (graphtage.utils.sparsematrix method)": [[17, "graphtage.utils.SparseMatrix.values"]], "values() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[17, "graphtage.utils.SparseMatrix.SparseMatrixRow.values"]], "dev_build (in module graphtage.version)": [[18, "graphtage.version.DEV_BUILD"]], "version_string (in module graphtage.version)": [[18, "graphtage.version.VERSION_STRING"]], "__version__ (in module graphtage.version)": [[18, "graphtage.version.__version__"]], "git_branch() (in module graphtage.version)": [[18, "graphtage.version.git_branch"]], "graphtage.version": [[18, "module-graphtage.version"]], "default_instance (graphtage.xml.xmlchildformatter attribute)": [[19, "graphtage.xml.XMLChildFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.xml.xmlelementattribformatter attribute)": [[19, "graphtage.xml.XMLElementAttribFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.xml.xmlformatter attribute)": [[19, "graphtage.xml.XMLFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.xml.xmlstringformatter attribute)": [[19, "graphtage.xml.XMLStringFormatter.DEFAULT_INSTANCE"]], "html (class in graphtage.xml)": [[19, "graphtage.xml.HTML"]], "xml (class in graphtage.xml)": [[19, "graphtage.xml.XML"]], "xmlchildformatter (class in graphtage.xml)": [[19, "graphtage.xml.XMLChildFormatter"]], "xmlelement (class in graphtage.xml)": [[19, "graphtage.xml.XMLElement"]], "xmlelementattribformatter (class in graphtage.xml)": [[19, "graphtage.xml.XMLElementAttribFormatter"]], "xmlelementchildren (class in graphtage.xml)": [[19, "graphtage.xml.XMLElementChildren"]], "xmlelementedit (class in graphtage.xml)": [[19, "graphtage.xml.XMLElementEdit"]], "xmlelementobj (class in graphtage.xml)": [[19, "graphtage.xml.XMLElementObj"]], "xmlformatter (class in graphtage.xml)": [[19, "graphtage.xml.XMLFormatter"]], "xmlstringformatter (class in graphtage.xml)": [[19, "graphtage.xml.XMLStringFormatter"]], "__init__() (graphtage.xml.html method)": [[19, "graphtage.xml.HTML.__init__"]], "__init__() (graphtage.xml.xml method)": [[19, "graphtage.xml.XML.__init__"]], "__init__() (graphtage.xml.xmlchildformatter method)": [[19, "graphtage.xml.XMLChildFormatter.__init__"]], "__init__() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.__init__"]], "__init__() (graphtage.xml.xmlelementattribformatter method)": [[19, "graphtage.xml.XMLElementAttribFormatter.__init__"]], "__init__() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.__init__"]], "__init__() (graphtage.xml.xmlelementedit method)": [[19, "graphtage.xml.XMLElementEdit.__init__"]], "__init__() (graphtage.xml.xmlelementobj method)": [[19, "graphtage.xml.XMLElementObj.__init__"]], "__init__() (graphtage.xml.xmlformatter method)": [[19, "graphtage.xml.XMLFormatter.__init__"]], "__init__() (graphtage.xml.xmlstringformatter method)": [[19, "graphtage.xml.XMLStringFormatter.__init__"]], "__iter__() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.__iter__"]], "__iter__() (graphtage.xml.xmlelementedit method)": [[19, "graphtage.xml.XMLElementEdit.__iter__"]], "__len__() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.__len__"]], "__lt__() (graphtage.xml.xmlelementedit method)": [[19, "graphtage.xml.XMLElementEdit.__lt__"]], "__new__() (graphtage.xml.xmlchildformatter static method)": [[19, "graphtage.xml.XMLChildFormatter.__new__"]], "__new__() (graphtage.xml.xmlelementattribformatter static method)": [[19, "graphtage.xml.XMLElementAttribFormatter.__new__"]], "__new__() (graphtage.xml.xmlformatter static method)": [[19, "graphtage.xml.XMLFormatter.__new__"]], "__new__() (graphtage.xml.xmlstringformatter static method)": [[19, "graphtage.xml.XMLStringFormatter.__new__"]], "all_children_are_leaves() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.all_children_are_leaves"]], "attrib (graphtage.xml.xmlelementobj attribute)": [[19, "graphtage.xml.XMLElementObj.attrib"]], "attrib_edit (graphtage.xml.xmlelementedit attribute)": [[19, "graphtage.xml.XMLElementEdit.attrib_edit"]], "bounds() (graphtage.xml.xmlelementedit method)": [[19, "graphtage.xml.XMLElementEdit.bounds"]], "build_tree() (graphtage.xml.html method)": [[19, "graphtage.xml.HTML.build_tree"]], "build_tree() (graphtage.xml.xml method)": [[19, "graphtage.xml.XML.build_tree"]], "build_tree() (in module graphtage.xml)": [[19, "graphtage.xml.build_tree"]], "build_tree_handling_errors() (graphtage.xml.html method)": [[19, "graphtage.xml.HTML.build_tree_handling_errors"]], "build_tree_handling_errors() (graphtage.xml.xml method)": [[19, "graphtage.xml.XML.build_tree_handling_errors"]], "calculate_total_size() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.calculate_total_size"]], "calculate_total_size() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.calculate_total_size"]], "child_edit (graphtage.xml.xmlelementedit attribute)": [[19, "graphtage.xml.XMLElementEdit.child_edit"]], "child_indexes (graphtage.xml.xmlelementchildren attribute)": [[19, "graphtage.xml.XMLElementChildren.child_indexes"]], "children (graphtage.xml.xmlelementobj attribute)": [[19, "graphtage.xml.XMLElementObj.children"]], "children() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.children"]], "children() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.children"]], "container_type (graphtage.xml.xmlelementchildren property)": [[19, "graphtage.xml.XMLElementChildren.container_type"]], "context() (graphtage.xml.xmlstringformatter method)": [[19, "graphtage.xml.XMLStringFormatter.context"]], "delimiter_callback (graphtage.xml.xmlchildformatter attribute)": [[19, "graphtage.xml.XMLChildFormatter.delimiter_callback"]], "delimiter_callback (graphtage.xml.xmlelementattribformatter attribute)": [[19, "graphtage.xml.XMLElementAttribFormatter.delimiter_callback"]], "dfs() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.dfs"]], "dfs() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.dfs"]], "diff() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.diff"]], "diff() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.diff"]], "edit_modifiers (graphtage.xml.xmlelement attribute)": [[19, "graphtage.xml.XMLElement.edit_modifiers"]], "edit_modifiers (graphtage.xml.xmlelementchildren attribute)": [[19, "graphtage.xml.XMLElementChildren.edit_modifiers"]], "edit_print() (graphtage.xml.xmlchildformatter method)": [[19, "graphtage.xml.XMLChildFormatter.edit_print"]], "edit_print() (graphtage.xml.xmlelementattribformatter method)": [[19, "graphtage.xml.XMLElementAttribFormatter.edit_print"]], "editable_dict() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.editable_dict"]], "editable_dict() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.editable_dict"]], "edited (graphtage.xml.xmlelement property)": [[19, "graphtage.xml.XMLElement.edited"]], "edited (graphtage.xml.xmlelementchildren property)": [[19, "graphtage.xml.XMLElementChildren.edited"]], "edits() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.edits"]], "edits() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.edits"]], "edits() (graphtage.xml.xmlelementedit method)": [[19, "graphtage.xml.XMLElementEdit.edits"]], "escape() (graphtage.xml.xmlstringformatter method)": [[19, "graphtage.xml.XMLStringFormatter.escape"]], "from_node (graphtage.xml.xmlelementedit attribute)": [[19, "graphtage.xml.XMLElementEdit.from_node"]], "get_all_edit_contexts() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.get_all_edit_contexts"]], "get_all_edits() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.get_all_edits"]], "get_all_edits() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.get_all_edits"]], "get_default_formatter() (graphtage.xml.html method)": [[19, "graphtage.xml.HTML.get_default_formatter"]], "get_default_formatter() (graphtage.xml.xml method)": [[19, "graphtage.xml.XML.get_default_formatter"]], "get_formatter() (graphtage.xml.xmlchildformatter method)": [[19, "graphtage.xml.XMLChildFormatter.get_formatter"]], "get_formatter() (graphtage.xml.xmlelementattribformatter method)": [[19, "graphtage.xml.XMLElementAttribFormatter.get_formatter"]], "get_formatter() (graphtage.xml.xmlformatter method)": [[19, "graphtage.xml.XMLFormatter.get_formatter"]], "get_formatter() (graphtage.xml.xmlstringformatter method)": [[19, "graphtage.xml.XMLStringFormatter.get_formatter"]], "graphtage.xml": [[19, "module-graphtage.xml"]], "has_non_zero_cost() (graphtage.xml.xmlelementedit method)": [[19, "graphtage.xml.XMLElementEdit.has_non_zero_cost"]], "initial_bounds (graphtage.xml.xmlelementedit attribute)": [[19, "graphtage.xml.XMLElementEdit.initial_bounds"]], "is_complete() (graphtage.xml.xmlelementedit method)": [[19, "graphtage.xml.XMLElementEdit.is_complete"]], "is_leaf (graphtage.xml.xmlelement property)": [[19, "graphtage.xml.XMLElement.is_leaf"]], "is_leaf (graphtage.xml.xmlelementchildren property)": [[19, "graphtage.xml.XMLElementChildren.is_leaf"]], "is_partial (graphtage.xml.xmlchildformatter attribute)": [[19, "graphtage.xml.XMLChildFormatter.is_partial"]], "is_partial (graphtage.xml.xmlelementattribformatter attribute)": [[19, "graphtage.xml.XMLElementAttribFormatter.is_partial"]], "is_partial (graphtage.xml.xmlformatter attribute)": [[19, "graphtage.xml.XMLFormatter.is_partial"]], "is_partial (graphtage.xml.xmlstringformatter attribute)": [[19, "graphtage.xml.XMLStringFormatter.is_partial"]], "is_quoted (graphtage.xml.xmlstringformatter attribute)": [[19, "graphtage.xml.XMLStringFormatter.is_quoted"]], "item_newline() (graphtage.xml.xmlchildformatter method)": [[19, "graphtage.xml.XMLChildFormatter.item_newline"]], "item_newline() (graphtage.xml.xmlelementattribformatter method)": [[19, "graphtage.xml.XMLElementAttribFormatter.item_newline"]], "items_indent() (graphtage.xml.xmlchildformatter method)": [[19, "graphtage.xml.XMLChildFormatter.items_indent"]], "items_indent() (graphtage.xml.xmlelementattribformatter method)": [[19, "graphtage.xml.XMLElementAttribFormatter.items_indent"]], "make_edited() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.make_edited"]], "make_edited() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.make_edited"]], "on_diff() (graphtage.xml.xmlelementedit method)": [[19, "graphtage.xml.XMLElementEdit.on_diff"]], "parent (graphtage.xml.xmlchildformatter attribute)": [[19, "graphtage.xml.XMLChildFormatter.parent"]], "parent (graphtage.xml.xmlelement property)": [[19, "graphtage.xml.XMLElement.parent"]], "parent (graphtage.xml.xmlelementattribformatter attribute)": [[19, "graphtage.xml.XMLElementAttribFormatter.parent"]], "parent (graphtage.xml.xmlelementchildren property)": [[19, "graphtage.xml.XMLElementChildren.parent"]], "parent (graphtage.xml.xmlformatter attribute)": [[19, "graphtage.xml.XMLFormatter.parent"]], "parent (graphtage.xml.xmlstringformatter attribute)": [[19, "graphtage.xml.XMLStringFormatter.parent"]], "print() (graphtage.xml.xmlchildformatter method)": [[19, "graphtage.xml.XMLChildFormatter.print"]], "print() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.print"]], "print() (graphtage.xml.xmlelementattribformatter method)": [[19, "graphtage.xml.XMLElementAttribFormatter.print"]], "print() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.print"]], "print() (graphtage.xml.xmlelementedit method)": [[19, "graphtage.xml.XMLElementEdit.print"]], "print() (graphtage.xml.xmlformatter method)": [[19, "graphtage.xml.XMLFormatter.print"]], "print() (graphtage.xml.xmlstringformatter method)": [[19, "graphtage.xml.XMLStringFormatter.print"]], "print_keyvaluepairnode() (graphtage.xml.xmlelementattribformatter method)": [[19, "graphtage.xml.XMLElementAttribFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.xml.xmlformatter method)": [[19, "graphtage.xml.XMLFormatter.print_LeafNode"]], "print_listnode() (graphtage.xml.xmlchildformatter method)": [[19, "graphtage.xml.XMLChildFormatter.print_ListNode"]], "print_mappingnode() (graphtage.xml.xmlelementattribformatter method)": [[19, "graphtage.xml.XMLElementAttribFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.xml.xmlelementattribformatter method)": [[19, "graphtage.xml.XMLElementAttribFormatter.print_MultiSetNode"]], "print_sequencenode() (graphtage.xml.xmlchildformatter method)": [[19, "graphtage.xml.XMLChildFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.xml.xmlelementattribformatter method)": [[19, "graphtage.xml.XMLElementAttribFormatter.print_SequenceNode"]], "print_stringedit() (graphtage.xml.xmlstringformatter method)": [[19, "graphtage.xml.XMLStringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.xml.xmlstringformatter method)": [[19, "graphtage.xml.XMLStringFormatter.print_StringNode"]], "print_xmlelement() (graphtage.xml.xmlformatter method)": [[19, "graphtage.xml.XMLFormatter.print_XMLElement"]], "print_parent_context() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.print_parent_context"]], "print_parent_context() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.print_parent_context"]], "root (graphtage.xml.xmlchildformatter property)": [[19, "graphtage.xml.XMLChildFormatter.root"]], "root (graphtage.xml.xmlelementattribformatter property)": [[19, "graphtage.xml.XMLElementAttribFormatter.root"]], "root (graphtage.xml.xmlformatter property)": [[19, "graphtage.xml.XMLFormatter.root"]], "root (graphtage.xml.xmlstringformatter property)": [[19, "graphtage.xml.XMLStringFormatter.root"]], "sub_format_types (graphtage.xml.xmlchildformatter attribute)": [[19, "graphtage.xml.XMLChildFormatter.sub_format_types"]], "sub_format_types (graphtage.xml.xmlelementattribformatter attribute)": [[19, "graphtage.xml.XMLElementAttribFormatter.sub_format_types"]], "sub_format_types (graphtage.xml.xmlformatter attribute)": [[19, "graphtage.xml.XMLFormatter.sub_format_types"]], "sub_format_types (graphtage.xml.xmlstringformatter attribute)": [[19, "graphtage.xml.XMLStringFormatter.sub_format_types"]], "sub_formatters (graphtage.xml.xmlchildformatter attribute)": [[19, "graphtage.xml.XMLChildFormatter.sub_formatters"]], "sub_formatters (graphtage.xml.xmlelementattribformatter attribute)": [[19, "graphtage.xml.XMLElementAttribFormatter.sub_formatters"]], "sub_formatters (graphtage.xml.xmlformatter attribute)": [[19, "graphtage.xml.XMLFormatter.sub_formatters"]], "sub_formatters (graphtage.xml.xmlstringformatter attribute)": [[19, "graphtage.xml.XMLStringFormatter.sub_formatters"]], "tag (graphtage.xml.xmlelement attribute)": [[19, "graphtage.xml.XMLElement.tag"]], "tag (graphtage.xml.xmlelementobj attribute)": [[19, "graphtage.xml.XMLElementObj.tag"]], "tag_edit (graphtage.xml.xmlelementedit attribute)": [[19, "graphtage.xml.XMLElementEdit.tag_edit"]], "text (graphtage.xml.xmlelement attribute)": [[19, "graphtage.xml.XMLElement.text"]], "text (graphtage.xml.xmlelementobj attribute)": [[19, "graphtage.xml.XMLElementObj.text"]], "text_edit (graphtage.xml.xmlelementedit attribute)": [[19, "graphtage.xml.XMLElementEdit.text_edit"]], "tighten_bounds() (graphtage.xml.xmlelementedit method)": [[19, "graphtage.xml.XMLElementEdit.tighten_bounds"]], "to_obj() (graphtage.xml.xmlelement method)": [[19, "graphtage.xml.XMLElement.to_obj"]], "to_obj() (graphtage.xml.xmlelementchildren method)": [[19, "graphtage.xml.XMLElementChildren.to_obj"]], "total_size (graphtage.xml.xmlelement property)": [[19, "graphtage.xml.XMLElement.total_size"]], "total_size (graphtage.xml.xmlelementchildren property)": [[19, "graphtage.xml.XMLElementChildren.total_size"]], "valid (graphtage.xml.xmlelementedit property)": [[19, "graphtage.xml.XMLElementEdit.valid"]], "write_char() (graphtage.xml.xmlstringformatter method)": [[19, "graphtage.xml.XMLStringFormatter.write_char"]], "write_end_quote() (graphtage.xml.xmlstringformatter method)": [[19, "graphtage.xml.XMLStringFormatter.write_end_quote"]], "write_start_quote() (graphtage.xml.xmlstringformatter method)": [[19, "graphtage.xml.XMLStringFormatter.write_start_quote"]], "default_instance (graphtage.yaml.yamldictformatter attribute)": [[20, "graphtage.yaml.YAMLDictFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamlformatter attribute)": [[20, "graphtage.yaml.YAMLFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamllistformatter attribute)": [[20, "graphtage.yaml.YAMLListFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamlstringformatter attribute)": [[20, "graphtage.yaml.YAMLStringFormatter.DEFAULT_INSTANCE"]], "yaml (class in graphtage.yaml)": [[20, "graphtage.yaml.YAML"]], "yamldictformatter (class in graphtage.yaml)": [[20, "graphtage.yaml.YAMLDictFormatter"]], "yamlformatter (class in graphtage.yaml)": [[20, "graphtage.yaml.YAMLFormatter"]], "yamlkeyvaluepairformatter (class in graphtage.yaml)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter"]], "yamllistformatter (class in graphtage.yaml)": [[20, "graphtage.yaml.YAMLListFormatter"]], "yamlstringformatter (class in graphtage.yaml)": [[20, "graphtage.yaml.YAMLStringFormatter"]], "__init__() (graphtage.yaml.yaml method)": [[20, "graphtage.yaml.YAML.__init__"]], "__init__() (graphtage.yaml.yamldictformatter method)": [[20, "graphtage.yaml.YAMLDictFormatter.__init__"]], "__init__() (graphtage.yaml.yamlformatter method)": [[20, "graphtage.yaml.YAMLFormatter.__init__"]], "__init__() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.__init__"]], "__init__() (graphtage.yaml.yamllistformatter method)": [[20, "graphtage.yaml.YAMLListFormatter.__init__"]], "__init__() (graphtage.yaml.yamlstringformatter method)": [[20, "graphtage.yaml.YAMLStringFormatter.__init__"]], "__new__() (graphtage.yaml.yamldictformatter static method)": [[20, "graphtage.yaml.YAMLDictFormatter.__new__"]], "__new__() (graphtage.yaml.yamlformatter static method)": [[20, "graphtage.yaml.YAMLFormatter.__new__"]], "__new__() (graphtage.yaml.yamlkeyvaluepairformatter static method)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.__new__"]], "__new__() (graphtage.yaml.yamllistformatter static method)": [[20, "graphtage.yaml.YAMLListFormatter.__new__"]], "__new__() (graphtage.yaml.yamlstringformatter static method)": [[20, "graphtage.yaml.YAMLStringFormatter.__new__"]], "build_tree() (graphtage.yaml.yaml method)": [[20, "graphtage.yaml.YAML.build_tree"]], "build_tree() (in module graphtage.yaml)": [[20, "graphtage.yaml.build_tree"]], "build_tree_handling_errors() (graphtage.yaml.yaml method)": [[20, "graphtage.yaml.YAML.build_tree_handling_errors"]], "context() (graphtage.yaml.yamlstringformatter method)": [[20, "graphtage.yaml.YAMLStringFormatter.context"]], "delimiter_callback (graphtage.yaml.yamldictformatter attribute)": [[20, "graphtage.yaml.YAMLDictFormatter.delimiter_callback"]], "delimiter_callback (graphtage.yaml.yamllistformatter attribute)": [[20, "graphtage.yaml.YAMLListFormatter.delimiter_callback"]], "edit_print() (graphtage.yaml.yamldictformatter method)": [[20, "graphtage.yaml.YAMLDictFormatter.edit_print"]], "edit_print() (graphtage.yaml.yamllistformatter method)": [[20, "graphtage.yaml.YAMLListFormatter.edit_print"]], "escape() (graphtage.yaml.yamlstringformatter method)": [[20, "graphtage.yaml.YAMLStringFormatter.escape"]], "get_default_formatter() (graphtage.yaml.yaml method)": [[20, "graphtage.yaml.YAML.get_default_formatter"]], "get_formatter() (graphtage.yaml.yamldictformatter method)": [[20, "graphtage.yaml.YAMLDictFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamlformatter method)": [[20, "graphtage.yaml.YAMLFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamllistformatter method)": [[20, "graphtage.yaml.YAMLListFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamlstringformatter method)": [[20, "graphtage.yaml.YAMLStringFormatter.get_formatter"]], "graphtage.yaml": [[20, "module-graphtage.yaml"]], "has_newline (graphtage.yaml.yamlstringformatter attribute)": [[20, "graphtage.yaml.YAMLStringFormatter.has_newline"]], "is_partial (graphtage.yaml.yamldictformatter attribute)": [[20, "graphtage.yaml.YAMLDictFormatter.is_partial"]], "is_partial (graphtage.yaml.yamlformatter attribute)": [[20, "graphtage.yaml.YAMLFormatter.is_partial"]], "is_partial (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.is_partial"]], "is_partial (graphtage.yaml.yamllistformatter attribute)": [[20, "graphtage.yaml.YAMLListFormatter.is_partial"]], "is_partial (graphtage.yaml.yamlstringformatter attribute)": [[20, "graphtage.yaml.YAMLStringFormatter.is_partial"]], "is_quoted (graphtage.yaml.yamlstringformatter attribute)": [[20, "graphtage.yaml.YAMLStringFormatter.is_quoted"]], "item_newline() (graphtage.yaml.yamldictformatter method)": [[20, "graphtage.yaml.YAMLDictFormatter.item_newline"]], "item_newline() (graphtage.yaml.yamllistformatter method)": [[20, "graphtage.yaml.YAMLListFormatter.item_newline"]], "items_indent() (graphtage.yaml.yamldictformatter method)": [[20, "graphtage.yaml.YAMLDictFormatter.items_indent"]], "items_indent() (graphtage.yaml.yamllistformatter method)": [[20, "graphtage.yaml.YAMLListFormatter.items_indent"]], "parent (graphtage.yaml.yamldictformatter attribute)": [[20, "graphtage.yaml.YAMLDictFormatter.parent"]], "parent (graphtage.yaml.yamlformatter attribute)": [[20, "graphtage.yaml.YAMLFormatter.parent"]], "parent (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.parent"]], "parent (graphtage.yaml.yamllistformatter attribute)": [[20, "graphtage.yaml.YAMLListFormatter.parent"]], "parent (graphtage.yaml.yamlstringformatter attribute)": [[20, "graphtage.yaml.YAMLStringFormatter.parent"]], "print() (graphtage.yaml.yamldictformatter method)": [[20, "graphtage.yaml.YAMLDictFormatter.print"]], "print() (graphtage.yaml.yamlformatter method)": [[20, "graphtage.yaml.YAMLFormatter.print"]], "print() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.print"]], "print() (graphtage.yaml.yamllistformatter method)": [[20, "graphtage.yaml.YAMLListFormatter.print"]], "print() (graphtage.yaml.yamlstringformatter method)": [[20, "graphtage.yaml.YAMLStringFormatter.print"]], "print_containernode() (graphtage.yaml.yamlformatter method)": [[20, "graphtage.yaml.YAMLFormatter.print_ContainerNode"]], "print_keyvaluepairnode() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.yaml.yamlformatter method)": [[20, "graphtage.yaml.YAMLFormatter.print_LeafNode"]], "print_listnode() (graphtage.yaml.yamllistformatter method)": [[20, "graphtage.yaml.YAMLListFormatter.print_ListNode"]], "print_mappingnode() (graphtage.yaml.yamldictformatter method)": [[20, "graphtage.yaml.YAMLDictFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.yaml.yamldictformatter method)": [[20, "graphtage.yaml.YAMLDictFormatter.print_MultiSetNode"]], "print_sequencenode() (graphtage.yaml.yamldictformatter method)": [[20, "graphtage.yaml.YAMLDictFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.yaml.yamllistformatter method)": [[20, "graphtage.yaml.YAMLListFormatter.print_SequenceNode"]], "print_stringedit() (graphtage.yaml.yamlstringformatter method)": [[20, "graphtage.yaml.YAMLStringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.yaml.yamlstringformatter method)": [[20, "graphtage.yaml.YAMLStringFormatter.print_StringNode"]], "root (graphtage.yaml.yamldictformatter property)": [[20, "graphtage.yaml.YAMLDictFormatter.root"]], "root (graphtage.yaml.yamlformatter property)": [[20, "graphtage.yaml.YAMLFormatter.root"]], "root (graphtage.yaml.yamlkeyvaluepairformatter property)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.root"]], "root (graphtage.yaml.yamllistformatter property)": [[20, "graphtage.yaml.YAMLListFormatter.root"]], "root (graphtage.yaml.yamlstringformatter property)": [[20, "graphtage.yaml.YAMLStringFormatter.root"]], "sub_format_types (graphtage.yaml.yamldictformatter attribute)": [[20, "graphtage.yaml.YAMLDictFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamlformatter attribute)": [[20, "graphtage.yaml.YAMLFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamllistformatter attribute)": [[20, "graphtage.yaml.YAMLListFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamlstringformatter attribute)": [[20, "graphtage.yaml.YAMLStringFormatter.sub_format_types"]], "sub_formatters (graphtage.yaml.yamldictformatter attribute)": [[20, "graphtage.yaml.YAMLDictFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamlformatter attribute)": [[20, "graphtage.yaml.YAMLFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[20, "graphtage.yaml.YAMLKeyValuePairFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamllistformatter attribute)": [[20, "graphtage.yaml.YAMLListFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamlstringformatter attribute)": [[20, "graphtage.yaml.YAMLStringFormatter.sub_formatters"]], "write_char() (graphtage.yaml.yamlstringformatter method)": [[20, "graphtage.yaml.YAMLStringFormatter.write_char"]], "write_end_quote() (graphtage.yaml.yamlstringformatter method)": [[20, "graphtage.yaml.YAMLStringFormatter.write_end_quote"]], "write_obj() (graphtage.yaml.yamlformatter static method)": [[20, "graphtage.yaml.YAMLFormatter.write_obj"]], "write_start_quote() (graphtage.yaml.yamlstringformatter method)": [[20, "graphtage.yaml.YAMLStringFormatter.write_start_quote"]]}})