Search.setIndex({"docnames": ["builders", "extending", "filetypes", "graphtage", "graphtage.ast", "graphtage.bounds", "graphtage.builder", "graphtage.constraints", "graphtage.csv", "graphtage.dataclasses", "graphtage.debug", "graphtage.expressions", "graphtage.fibonacci", "graphtage.formatter", "graphtage.json", "graphtage.levenshtein", "graphtage.matching", "graphtage.multiset", "graphtage.object_set", "graphtage.pickle", "graphtage.plist", "graphtage.printer", "graphtage.progress", "graphtage.pydiff", "graphtage.search", "graphtage.sequences", "graphtage.utils", "graphtage.version", "graphtage.xml", "graphtage.yaml", "howitworks", "index", "library", "package", "printing"], "filenames": ["builders.rst", "extending.rst", "filetypes.rst", "graphtage.rst", "graphtage.ast.rst", "graphtage.bounds.rst", "graphtage.builder.rst", "graphtage.constraints.rst", "graphtage.csv.rst", "graphtage.dataclasses.rst", "graphtage.debug.rst", "graphtage.expressions.rst", "graphtage.fibonacci.rst", "graphtage.formatter.rst", "graphtage.json.rst", "graphtage.levenshtein.rst", "graphtage.matching.rst", "graphtage.multiset.rst", "graphtage.object_set.rst", "graphtage.pickle.rst", "graphtage.plist.rst", "graphtage.printer.rst", "graphtage.progress.rst", "graphtage.pydiff.rst", "graphtage.search.rst", "graphtage.sequences.rst", "graphtage.utils.rst", "graphtage.version.rst", "graphtage.xml.rst", "graphtage.yaml.rst", "howitworks.rst", "index.rst", "library.rst", "package.rst", "printing.rst"], "titles": ["Constructing Graphtage Trees", "Extending Graphtage", "Defining New Filetypes", "graphtage", "graphtage.ast", "graphtage.bounds", "graphtage.builder", "graphtage.constraints", "graphtage.csv", "graphtage.dataclasses", "graphtage.debug", "graphtage.expressions", "graphtage.fibonacci", "graphtage.formatter", "graphtage.json", "graphtage.levenshtein", "graphtage.matching", "graphtage.multiset", "graphtage.object_set", "graphtage.pickle", "graphtage.plist", "graphtage.printer", "graphtage.progress", "graphtage.pydiff", "graphtage.search", "graphtage.sequences", "graphtage.utils", "graphtage.version", "graphtage.xml", "graphtage.yaml", "How Graphtage Works", "Graphtage Documentation", "Using Graphtage Programmatically", "Graphtage API", "Printing Protocol"], "terms": {"oper": [0, 3, 4, 5, 8, 9, 12, 20, 23, 25, 28, 31, 32, 33], "repres": [0, 3, 4, 5, 6, 8, 9, 11, 17, 20, 23, 25, 28], "treenod": [0, 2, 4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 23, 25, 28, 29, 31, 32, 33, 34], "base": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29], "class": [0, 2, 30, 31, 32, 33], "There": [0, 3, 11, 14, 21, 28, 29, 31, 32], "ar": [0, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 30, 32, 34], "variou": 0, "predefin": 0, "special": [0, 3, 6, 13, 14, 23, 28, 29, 30, 34], "integernod": [0, 6, 20, 23, 31, 32, 33], "integ": [0, 3, 4, 5, 6, 8, 9, 11, 16, 20, 23, 24, 25, 28], "listnod": [0, 4, 6, 8, 9, 14, 20, 23, 25, 28, 31, 32, 33], "list": [0, 3, 4, 6, 8, 9, 11, 13, 14, 16, 20, 21, 22, 23, 25, 26, 28, 29, 30], "dictnod": [0, 4, 17, 23, 31, 32, 33], "dictionari": [0, 3, 17, 26, 30], "ha": [0, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 28, 29, 32, 34], "an": [0, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34], "option": [0, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "parent": [0, 3, 4, 6, 8, 9, 12, 13, 14, 20, 21, 23, 25, 28, 29, 32], "potenti": [0, 3], "empti": [0, 3, 6, 8, 11, 16, 18, 26], "set": [0, 3, 4, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29], "provid": [0, 3, 4, 5, 6, 8, 9, 11, 12, 14, 17, 19, 20, 21, 23, 25, 26, 28, 29], "builder": [0, 23, 31, 33], "conveni": [0, 3, 11, 13, 15, 17, 21, 25], "convert": [0, 5, 11, 32], "arbitrari": [0, 3, 4, 6, 8, 9, 14, 16, 20, 23, 25, 26, 28, 32], "object": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 34], "It": [0, 3, 11, 12, 13, 15, 16, 17, 25, 27], "us": [0, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30], "python": [0, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 16, 18, 19, 20, 23, 25, 26, 28, 31], "magic": [0, 13, 32], "defin": [0, 1, 3, 4, 6, 8, 9, 11, 13, 16, 17, 18, 20, 23, 25, 26, 28, 31], "convers": 0, "from": [0, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 32], "import": [0, 2, 5, 13, 16, 23, 26, 31, 32, 33], "custombuild": 0, "int": [0, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 25, 26, 27, 28, 29], "def": [0, 2, 13, 32], "build_int": [0, 6, 23], "self": [0, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32], "return": [0, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34], "build_tre": [0, 2, 3, 6, 19, 31, 32, 33], "10": [0, 5, 11, 16], "The": [0, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34], "decor": [0, 3, 5, 13, 21], "specifi": [0, 3, 11, 13, 21, 26], "function": [0, 2, 4, 6, 9, 12, 17, 18, 19, 24, 25, 31, 32, 33], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34], "abl": [0, 3, 9, 13, 16, 17, 21, 23, 25, 28], "build": [0, 3, 6, 8, 14, 19, 20, 23, 27, 28, 29], "input": [0, 2, 11, 13, 16, 18, 24, 26, 30, 32], "instanceof": [0, 32], "type": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "If": [0, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 34], "multipl": [0, 11], "match": [0, 1, 4, 8, 9, 14, 15, 17, 18, 20, 23, 25, 28, 29, 31, 33], "given": [0, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 28, 29], "associ": [0, 2, 3, 8, 11, 12, 13, 14, 19, 20, 23, 25, 28, 29], "most": [0, 3, 6, 11, 16, 23, 24, 26, 30], "chosen": [0, 3, 34], "For": [0, 2, 3, 4, 6, 8, 9, 11, 13, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 31, 32], "exampl": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 16, 17, 20, 23, 24, 25, 26, 28, 30, 31, 32], "foo": [0, 11, 13, 26, 30, 32], "pass": [0, 3, 5, 8, 13, 14, 20, 21, 23, 24, 25, 28, 29], "bar": [0, 11, 13, 22, 30, 32], "build_foo": 0, "stringnod": [0, 4, 6, 14, 20, 23, 28, 29, 31, 32, 33], "build_bar": 0, "so": [0, 3, 6, 12, 13, 16, 18, 25, 34], "far": 0, "we": [0, 12, 13, 16, 18, 24, 32, 34], "have": [0, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 32], "onli": [0, 3, 4, 6, 8, 9, 11, 12, 13, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28], "product": [0, 26], "leaf": [0, 3, 6, 8], "like": [0, 3, 4, 6, 8, 9, 11, 14, 16, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32], "string": [0, 2, 3, 6, 8, 11, 13, 14, 15, 19, 20, 21, 27, 28, 29], "what": [0, 3, 9, 23, 28, 31, 33], "can": [0, 1, 2, 3, 5, 9, 11, 12, 15, 16, 18, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33], "handl": [0, 13, 21], "thi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34], "here": [0, 2, 11, 13, 16, 27, 31, 32], "how": [0, 1, 2, 3, 8, 13, 14, 16, 18, 20, 23, 25, 28, 29, 32, 34], "built": [0, 2, 16, 18], "expand_list": [0, 6, 23], "iter": [0, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30], "over": [0, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 17, 20, 23, 24, 25, 26, 28], "": [0, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 32, 34], "yield": [0, 3, 4, 5, 6, 8, 9, 11, 12, 20, 23, 24, 25, 28], "build_list": [0, 6, 23], "1": [0, 3, 9, 11, 14, 15, 16, 17, 23, 25, 26, 28, 30, 32], "2": [0, 11, 16, 26, 30, 32], "3": [0, 3, 4, 6, 8, 9, 11, 16, 20, 23, 25, 26, 28, 30, 32], "4": [0, 11, 16, 26, 30, 32], "assum": [0, 12, 14, 30], "root": [0, 2, 3, 8, 13, 14, 19, 20, 21, 23, 25, 28, 29], "one": [0, 2, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31], "its": [0, 3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 28, 29, 31, 32], "descend": [0, 3, 4, 6, 8, 9, 12, 20, 23, 25, 28], "notimplementederror": [0, 3, 9, 23, 28, 34], "rais": [0, 3, 4, 5, 9, 11, 12, 13, 14, 16, 18, 23, 25, 26, 28, 34], "subclass": [0, 2, 3, 4, 6, 8, 9, 13, 20, 23, 25, 28], "basicbuild": [0, 23, 31, 33], "basic": [0, 6, 13, 21], "float": [0, 3, 6, 11, 14, 16, 23], "str": [0, 2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29], "byte": [0, 3, 6, 11, 14, 21, 22, 23, 26], "dict": [0, 3, 4, 6, 8, 9, 11, 14, 16, 20, 21, 23, 25, 26, 28, 30], "tupl": [0, 3, 4, 6, 8, 9, 11, 16, 20, 23, 25, 26, 27, 28], "you": [0, 2, 3, 4, 6, 8, 9, 13, 16, 18, 20, 23, 24, 25, 28, 32], "extend": [0, 2, 3, 4, 6, 8, 9, 13, 14, 20, 21, 23, 25, 28, 29], "implement": [0, 1, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34], "support": [0, 2, 3, 11, 13, 26, 31], "addit": [0, 3, 11, 21, 27, 32], "abstract": [0, 3, 4, 11, 13, 16, 21, 23, 25], "containernod": [0, 4, 6, 8, 9, 14, 20, 23, 25, 28, 29, 31, 33], "sequencenod": [0, 3, 4, 8, 14, 15, 17, 20, 23, 28, 29, 31, 33], "aid": [0, 3, 10, 15, 17, 25], "But": [0, 13, 16, 18], "easiest": [0, 13], "wai": [0, 16], "off": [0, 3, 4, 6, 8, 9, 20, 23, 25, 28], "dataclass": [0, 31, 33], "customnod": 0, "name": [0, 3, 4, 11, 13, 21, 22, 23, 31], "valu": [0, 3, 4, 5, 6, 8, 9, 11, 12, 14, 16, 18, 20, 23, 24, 25, 26, 28, 30, 32], "attribut": [0, 3, 11, 13, 21, 23, 28], "automat": [0, 2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 17, 20, 21, 23, 25, 26, 27, 28, 29], "three": [0, 11, 27, 32], "1337": [0, 13], "let": [0, 13], "sai": [0, 13], "anoth": [0, 3, 4, 5, 8, 11, 13, 15, 16, 17, 26, 28, 30, 32], "non": [0, 3, 5, 9, 14, 15, 16, 17, 23, 25, 28, 34], "correspond": [0, 3, 8, 13, 14, 20, 23, 25, 26, 28, 29], "nongraphtageclass": 0, "add": [0, 2, 3, 9, 12, 15, 16, 17, 18, 21, 23, 25, 26, 28], "follow": [0, 2, 3, 4, 8, 11, 13, 14, 20, 23, 25, 26, 28, 29, 34], "expand_non_graphtage_class": 0, "build_non_graphtage_class": 0, "design": [1, 13], "extens": [1, 3, 8, 11, 13, 14, 20, 21, 23, 25, 28, 29], "new": [1, 3, 4, 6, 8, 9, 12, 13, 14, 15, 16, 18, 20, 21, 23, 25, 26, 28, 29, 31, 32], "filetyp": [1, 8, 13, 14, 19, 20, 28, 29, 31, 32, 33], "easili": [1, 32], "well": [1, 3, 4, 5, 6, 8, 9, 20, 23, 25, 28], "node": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 23, 25, 28, 29, 30, 31, 34], "edit": [1, 4, 6, 8, 9, 13, 14, 15, 17, 20, 23, 25, 28, 29, 30, 31, 33, 34], "formatt": [1, 2, 3, 8, 9, 14, 15, 17, 19, 20, 23, 25, 28, 29, 31, 32, 33, 34], "printer": [1, 3, 4, 6, 8, 9, 13, 14, 15, 17, 20, 22, 23, 25, 28, 29, 31, 32, 33, 34], "section": [1, 13, 31, 32], "give": [1, 13], "some": [1, 13, 23, 26, 32], "each": [1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32], "construct": [1, 3, 4, 5, 6, 8, 9, 13, 15, 16, 17, 18, 20, 23, 25, 26, 28, 29, 30, 31, 32], "tree": [1, 2, 3, 4, 5, 6, 8, 9, 14, 19, 20, 23, 25, 28, 29, 31, 32], "expand": [1, 6, 11, 13, 15, 23, 31], "children": [1, 3, 4, 6, 8, 9, 12, 17, 20, 23, 25, 28, 31], "custom": [1, 11, 14, 23, 29, 31, 32], "print": [1, 3, 4, 6, 8, 9, 13, 14, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31], "protocol": [1, 3, 5, 8, 9, 14, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 33], "graphtag": [2, 34], "entail": 2, "regist": [2, 3, 13], "file": [2, 3, 8, 13, 14, 19, 20, 26, 28, 29, 30, 31, 32], "mime": [2, 3, 8, 14, 19, 20, 28, 29], "more": [2, 3, 5, 8, 11, 13, 16, 17, 24, 26], "which": [2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32], "respons": [2, 3, 32], "classifi": 2, "mimetyp": [2, 3], "modul": [2, 5, 6, 11, 16, 17, 21, 22, 23, 24, 27, 28, 30, 31, 33], "sometim": 2, "doe": [2, 3, 4, 5, 6, 8, 9, 11, 12, 16, 18, 20, 21, 23, 25, 26, 28, 31, 33], "standard": [2, 32], "properli": 2, "pickl": [2, 31, 33], "neither": [2, 5, 17], "pkl": 2, "types_map": 2, "add_typ": 2, "applic": [2, 14, 19, 20, 28, 29], "x": [2, 12, 14, 19, 20, 29], "suffix_map": 2, "With": [2, 8, 20, 23, 25, 28, 29], "sketch": 2, "might": [2, 3, 4, 6, 8, 9, 13, 20, 23, 24, 25, 28, 31], "buildopt": [2, 6, 8, 14, 19, 20, 23, 28, 29, 31, 33], "__init__": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32], "super": [2, 4, 8, 9, 14, 15, 23], "uniqu": [2, 3, 9, 11, 17, 18, 23, 25, 28], "identifi": [2, 3, 8, 11], "primari": 2, "secondari": 2, "path": [2, 3, 4, 6, 8, 9, 14, 19, 20, 23, 25, 26, 28, 29], "none": [2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34], "build_tree_handling_error": [2, 3, 8, 14, 19, 20, 28, 29], "union": [2, 3, 4, 6, 8, 9, 14, 16, 19, 20, 23, 25, 26, 27, 28, 29], "same": [2, 3, 4, 8, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32], "error": [2, 3, 8, 11, 14, 19, 20, 28, 29], "contain": [2, 3, 4, 8, 9, 14, 16, 18, 19, 20, 23, 25, 26, 27, 28, 29, 32], "messag": [2, 3, 8, 11, 14, 19, 20, 21, 22, 28, 29], "try": [2, 34], "except": [2, 3, 8, 11, 14, 18, 19, 20, 28, 29], "pickledecodeerror": 2, "e": [2, 3, 4, 5, 11, 12, 13, 16, 21, 24, 26, 30], "f": [2, 13, 26], "deseri": 2, "o": [2, 16], "basenam": 2, "get_default_formatt": [2, 3, 8, 14, 19, 20, 28, 29], "graphtageformatt": [2, 8, 9, 14, 15, 17, 20, 23, 25, 28, 29, 31, 33, 34], "from_nod": [3, 9, 15, 16, 17, 23, 25, 28, 32, 34], "to_nod": [3, 9, 15, 16, 17, 23, 25, 28, 32], "constant_cost": [3, 9, 23], "0": [3, 4, 5, 6, 8, 9, 14, 16, 20, 23, 25, 26, 28, 29, 34], "cost_upper_bound": [3, 9, 23], "abc": [3, 6, 13, 25], "paramet": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29], "transform": [3, 4, 6, 8, 9, 15, 20, 23, 25, 28, 31], "A": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "lower": [3, 5, 9, 15, 17, 23, 25, 28], "bound": [3, 4, 6, 8, 9, 15, 16, 17, 20, 23, 24, 25, 26, 28, 30, 31, 33, 34], "cost": [3, 4, 6, 8, 9, 15, 16, 17, 20, 23, 25, 28, 34], "upper": [3, 5, 9, 13, 15, 17, 23, 25, 28], "__iter__": [3, 4, 8, 9, 11, 12, 15, 17, 23, 25, 26, 28], "sub": [3, 8, 9, 13, 14, 15, 17, 20, 23, 25, 28, 29], "result": [3, 4, 8, 9, 11, 14, 15, 16, 17, 23, 24, 25, 26, 28, 31], "__lt__": [3, 4, 5, 9, 15, 17, 23, 25, 28], "other": [3, 4, 5, 6, 9, 13, 15, 16, 17, 18, 23, 24, 25, 26, 28], "test": [3, 4, 8, 9, 13, 15, 17, 20, 23, 25, 28, 30], "whether": [3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 32], "less": [3, 5, 9, 12, 15, 16, 17, 23, 25, 28], "than": [3, 4, 5, 9, 11, 12, 15, 16, 17, 21, 23, 24, 25, 26, 28, 32], "_debug_tighten_bound": [3, 9, 15, 17, 23, 25, 28], "bool": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29], "debug": [3, 9, 13, 15, 17, 23, 25, 28, 31, 32, 33, 34], "assert": [3, 9, 15, 17, 23, 25, 28], "when": [3, 4, 8, 9, 11, 12, 13, 14, 15, 17, 20, 21, 23, 25, 28, 29, 32], "tighten": [3, 5, 9, 15, 16, 17, 23, 24, 25, 28], "rang": [3, 9, 15, 16, 17, 23, 24, 25, 28, 31, 33], "default": [3, 4, 6, 8, 9, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 25, 26, 28, 29, 32], "wa": [3, 8, 9, 11, 13, 14, 15, 16, 17, 20, 23, 25, 28, 29, 30, 32], "constructor": [3, 9, 16, 17, 18, 23, 25, 28], "total_s": [3, 4, 6, 8, 9, 17, 20, 23, 25, 28], "has_non_zero_cost": [3, 9, 15, 17, 23, 25, 28], "zero": [3, 5, 8, 9, 15, 17, 23, 25, 26, 28, 34], "until": [3, 5, 9, 15, 16, 17, 23, 24, 25, 28, 30], "either": [3, 5, 8, 9, 11, 12, 14, 15, 16, 17, 20, 22, 23, 25, 26, 28, 29], "greater": [3, 9, 11, 15, 17, 23, 25, 26, 28], "definit": [3, 5, 9, 15, 16, 17, 23, 24, 25, 28], "initial_bound": [3, 9, 15, 17, 23, 24, 25, 28], "is_complet": [3, 9, 15, 16, 17, 23, 25, 28], "complet": [3, 4, 6, 8, 9, 13, 15, 16, 17, 20, 23, 25, 28, 30], "further": [3, 9, 17, 23, 25, 28], "call": [3, 5, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34], "tighten_bound": [3, 5, 9, 15, 16, 17, 23, 24, 25, 28], "chang": [3, 9, 17, 23, 25, 27, 28, 30], "natur": [3, 9, 13, 17, 23, 25, 28], "consid": [3, 4, 8, 9, 13, 17, 23, 25, 28, 30], "valid": [3, 4, 6, 8, 9, 11, 15, 17, 20, 23, 25, 28], "discern": [3, 9, 17, 23, 25, 28], "solut": [3, 9, 16, 17, 23, 24, 25, 28], "even": [3, 4, 8, 9, 16, 17, 18, 20, 23, 25, 26, 28, 30], "final": [3, 9, 13, 15, 17, 21, 22, 23, 25, 28], "unknown": [3, 9, 11, 17, 23, 24, 25, 28], "should": [3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31], "reimplement": [3, 9, 14, 17, 23, 25, 28, 29], "method": [3, 9, 13, 16, 17, 18, 21, 23, 25, 26, 28, 34], "check": [3, 5, 9, 11, 12, 13, 15, 17, 23, 25, 28], "case": [3, 4, 9, 13, 17, 23, 25, 26, 28, 30], "true": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "futur": [3, 9, 16, 17, 23, 25, 28], "affect": [3, 9, 13, 17, 23, 25, 27, 28], "subsequ": [3, 9, 17, 23, 25, 28], "serv": [3, 9, 17, 23, 25, 28], "semant": [3, 9, 11, 12, 17, 23, 25, 28, 31], "on_diff": [3, 9, 15, 17, 23, 25, 28], "callback": [3, 4, 9, 14, 15, 17, 20, 23, 25, 28, 29], "assign": [3, 9, 13, 15, 16, 17, 23, 25, 26, 28, 31, 33], "diff": [3, 4, 6, 8, 9, 15, 17, 20, 25, 28, 30, 31, 32, 33], "recurs": [3, 4, 8, 9, 13, 15, 17, 20, 23, 25, 28], "all": [3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 23, 25, 26, 28, 32], "edit_list": [3, 9, 15, 17, 23, 25, 28], "append": [3, 9, 15, 17, 21, 23, 25, 27, 28], "ad": [3, 9, 13, 15, 17, 21, 23, 25, 28], "never": [3, 4, 8, 9, 13, 14, 19, 20, 23, 25, 28, 29], "directli": [3, 9, 23, 28, 32], "unless": [3, 4, 8, 9, 12, 20, 23, 25, 28, 30], "realli": [3, 9, 23, 28], "know": [3, 9, 13, 23, 28], "re": [3, 9, 23, 28], "do": [3, 8, 9, 12, 16, 17, 18, 23, 28, 31, 32, 33], "caus": [3, 9, 23, 28, 32], "fall": [3, 9, 13, 23, 28], "back": [3, 9, 13, 21, 23, 28], "own": [3, 9, 23, 28], "equival": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 17, 20, 23, 24, 25, 26, 28, 29], "possibl": [3, 4, 6, 8, 9, 13, 15, 20, 23, 24, 25, 28, 30], "been": [3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 20, 21, 23, 25, 26, 28, 29, 32], "fals": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29], "properti": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 29], "debugg": [3, 31, 33], "bool_lik": 3, "creat": [3, 4, 6, 8, 9, 12, 18, 20, 23, 24, 25, 26, 28], "obj": [3, 6, 11, 17, 18, 20, 23, 26, 29], "underli": [3, 6, 21], "wrap": [3, 5, 6, 16, 21], "add_edit_modifi": [3, 4, 6, 8, 9, 20, 23, 25, 28], "modifi": [3, 4, 6, 8, 9, 12, 13, 14, 20, 23, 25, 28, 29, 30], "callabl": [3, 4, 6, 8, 9, 11, 12, 13, 14, 16, 20, 23, 25, 26, 28, 29], "calculate_total_s": [3, 4, 6, 8, 9, 20, 23, 25, 28], "By": [3, 4, 6, 8, 11, 14, 19, 20, 23, 25, 28, 29], "size": [3, 4, 6, 8, 9, 11, 20, 21, 22, 23, 25, 28, 30, 31, 33], "equal": [3, 4, 5, 6, 11, 16, 17, 18, 26], "length": [3, 4, 6, 8, 11, 28], "represent": [3, 4, 6, 8, 9, 13, 14, 19, 20, 21, 23, 25, 28, 29, 30, 31], "len": [3, 4, 6, 8, 9, 11, 20, 23, 25, 28], "howev": [3, 4, 6, 8, 9, 11, 13, 20, 23, 24, 25, 27, 28, 30], "mai": [3, 6, 22, 24], "overrid": [3, 6, 11, 13, 16, 18], "whatev": [3, 6], "requir": [3, 4, 6, 8, 12, 14, 17, 23, 28, 29], "collect": [3, 6, 11, 12, 16, 17, 28, 31], "alwai": [3, 4, 5, 6, 8, 9, 11, 13, 16, 20, 23, 25, 27, 28], "copi": [3, 4, 6, 8, 9, 16, 20, 23, 25, 26, 28], "t": [3, 4, 6, 8, 9, 12, 13, 14, 15, 16, 18, 20, 23, 25, 26, 28, 29], "deep": [3, 4, 6, 8, 9, 20, 23, 25, 28], "copy_from": [3, 4, 6, 8, 9, 20, 23, 25, 28], "c": [3, 4, 6, 8, 9, 14, 16, 20, 23, 25, 26, 28, 29], "instanc": [3, 4, 6, 8, 9, 13, 14, 16, 18, 20, 21, 23, 25, 26, 28, 29], "df": [3, 4, 6, 8, 9, 20, 23, 25, 28], "perform": [3, 4, 6, 8, 9, 16, 20, 23, 25, 28, 30, 32], "depth": [3, 4, 6, 8, 9, 20, 23, 25, 28], "first": [3, 4, 6, 8, 9, 13, 16, 20, 23, 25, 26, 28, 32], "travers": [3, 4, 6, 8, 9, 20, 23, 25, 28], "includ": [3, 4, 6, 8, 9, 11, 12, 20, 23, 25, 27, 28, 32], "stack": [3, 4, 6, 8, 9, 11, 20, 23, 25, 28], "while": [3, 4, 5, 6, 8, 9, 12, 16, 20, 23, 24, 25, 28], "pop": [3, 4, 5, 6, 8, 9, 12, 16, 18, 20, 23, 25, 26, 28], "revers": [3, 4, 6, 8, 9, 11, 12, 13, 20, 23, 25, 28], "against": [3, 4, 6, 8, 9, 13, 20, 23, 25, 28], "version": [3, 4, 6, 8, 9, 14, 16, 20, 23, 25, 28, 29, 31, 32, 33], "being": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 17, 20, 23, 25, 26, 28, 29, 31, 32], "editable_dict": [3, 4, 6, 8, 9, 20, 23, 25, 28], "ani": [3, 4, 5, 6, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "__dict__": [3, 4, 6, 8, 9, 11, 20, 23, 25, 28], "therein": [3, 4, 6, 9, 20, 23, 28], "ret": [3, 4, 6, 8, 9, 20, 23, 25, 28], "is_leaf": [3, 4, 6, 8, 9, 20, 23, 25, 28], "kei": [3, 4, 5, 6, 9, 12, 14, 17, 20, 21, 23, 26, 28, 30, 32], "item": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 20, 23, 24, 25, 26, 28, 29, 30], "isinst": [3, 4, 6, 9, 13, 20, 23, 28], "make_edit": [3, 4, 6, 8, 9, 20, 23, 25, 28], "wherea": [3, 4, 6, 8, 9, 20, 23, 25, 28], "calcul": [3, 4, 6, 8, 9, 15, 16, 20, 23, 25, 26, 28], "best": [3, 4, 6, 8, 9, 13, 20, 23, 24, 25, 28], "get_all_edit_context": [3, 4, 6, 8, 9, 20, 23, 25, 28], "context": [3, 4, 6, 8, 9, 11, 14, 20, 21, 23, 25, 28, 29], "pair": [3, 4, 6, 8, 9, 11, 16, 20, 23, 25, 26, 28, 30], "note": [3, 4, 6, 8, 9, 13, 16, 18, 20, 23, 25, 28], "explod": [3, 4, 6, 8, 9, 20, 23, 25, 28], "sequenc": [3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 17, 20, 23, 24, 26, 27, 28, 29, 31, 32, 33], "get_all_edit": [3, 4, 6, 8, 9, 20, 23, 25, 28, 32], "also": [3, 4, 6, 8, 9, 11, 12, 13, 14, 20, 23, 25, 26, 27, 28, 29, 32], "__class__": [3, 4, 6, 8, 9, 13, 14, 20, 23, 25, 28, 29], "edited_typ": [3, 4, 6, 8, 9, 20, 23, 25, 28], "therebi": [3, 4, 6, 8, 9, 14, 20, 23, 25, 28], "mutabl": [3, 4, 6, 8, 9, 20, 23, 25, 26, 28], "setter": [3, 4, 6, 8, 9, 20, 23, 25, 28], "itself": [3, 4, 6, 8, 9, 12, 14, 16, 19, 20, 23, 24, 25, 28, 29, 32], "child": [3, 4, 6, 8, 9, 12, 14, 20, 23, 25, 28, 29], "must": [3, 4, 6, 8, 9, 11, 16, 18, 20, 22, 23, 25, 28], "repr": [3, 6], "write": [3, 6, 8, 13, 14, 20, 21, 22, 23, 25, 28, 29], "print_parent_context": [3, 4, 6, 8, 9, 20, 23, 25, 28], "for_child": [3, 4, 6, 8, 9, 20, 23, 25, 28], "element": [3, 4, 6, 8, 9, 12, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 30], "index": [3, 4, 6, 8, 9, 14, 20, 23, 25, 26, 28, 29, 31], "expect": [3, 4, 6, 8, 9, 16, 20, 23, 25, 28], "noth": [3, 4, 6, 8, 9, 16, 20, 23, 25, 28], "to_obj": [3, 4, 6, 8, 9, 20, 23, 25, 28], "immut": [3, 4, 6, 8, 9, 20, 23, 25, 28, 32], "time": [3, 4, 6, 8, 9, 12, 14, 15, 16, 20, 23, 25, 26, 28, 29, 30], "memoiz": [3, 4, 6, 8, 9, 16, 20, 23, 25, 28], "allow_key_edit": [3, 4, 23, 28], "auto_match_kei": [3, 4, 17, 23, 28], "allow_list_edit": [3, 4, 8, 28], "allow_list_edits_when_same_length": [3, 4, 8, 28], "check_for_cyc": 3, "ignore_cycl": 3, "kwarg": [3, 4, 5, 8, 9, 11, 13, 14, 16, 20, 21, 22, 23, 25, 26, 28, 29], "__getattr__": 3, "undefin": [3, 12, 16], "initi": [3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29], "keyword": [3, 8, 13, 14, 20, 23, 25, 26, 28, 29], "arg": [3, 4, 5, 8, 9, 11, 13, 14, 16, 20, 21, 22, 23, 25, 26, 28, 29], "compos": 3, "finit": [3, 5, 24], "neg": [3, 5, 26], "avail": [3, 11, 13], "determin": [3, 8, 11, 13, 14, 16, 18, 20, 23, 24, 25, 27, 28, 29, 32, 34], "longer": 3, "regardless": [3, 16, 18], "our": [3, 32], "fulli": [3, 5, 15, 16, 24], "whose": [3, 22], "known": [3, 24], "constant": [3, 5, 11, 12, 23], "kwd": [3, 26], "all_children_are_leav": [3, 4, 8, 9, 20, 23, 25, 28], "leav": [3, 4, 8, 9, 20, 23, 25, 28], "thei": [3, 4, 5, 8, 9, 12, 16, 18, 20, 21, 23, 25, 26, 28, 30, 31], "pure": [3, 4, 8, 9, 12, 16, 20, 23, 25, 28], "map": [3, 4, 8, 9, 11, 15, 16, 20, 23, 25, 26, 28, 31], "sole": [3, 4, 8, 9, 11, 15, 17, 20, 23, 25, 28], "commandlin": [3, 4, 8, 9, 20, 23, 25, 28, 31], "express": [3, 4, 7, 8, 9, 20, 23, 25, 28, 31, 33], "evalu": [3, 4, 8, 9, 11, 20, 23, 25, 28], "multiset": [3, 16, 31, 33], "unlik": 3, "effici": [3, 16, 24, 26], "altern": 3, "duplic": [3, 23], "__contains__": [3, 4, 23], "k": [3, 4, 12, 23, 26, 32], "_": [3, 4, 6, 11, 14, 23], "run": [3, 4, 23, 27], "worst": [3, 4, 23], "linear": [3, 4, 23], "sought": [3, 4, 23], "exist": [3, 4, 5, 17, 23, 24, 26, 30, 31, 33], "__getitem__": [3, 4, 23, 26], "look": [3, 4, 8, 13, 14, 20, 23, 25, 28, 29], "up": [3, 4, 8, 13, 14, 20, 23, 24, 25, 26, 28, 29], "kvp": [3, 4, 23], "keyerror": [3, 4, 11, 16, 18, 23, 26], "found": [3, 4, 11, 13, 23, 24, 26], "container_typ": [3, 4, 8, 11, 23, 25, 28], "hashablecount": [3, 4, 17, 23, 31, 33], "store": [3, 4, 11, 12, 16, 23, 25, 26], "_children": [3, 4, 8, 23, 25, 28], "n": [3, 4, 8, 11, 16, 18, 21, 22, 23, 25, 26, 28], "classmethod": [3, 4, 6, 7, 16, 18, 23, 26], "from_dict": [3, 4, 23], "source_dict": [3, 4, 23], "sourc": [3, 4, 14, 15, 23, 26, 28, 29, 30, 32], "similar": [3, 4, 9, 23, 30], "sinc": [3, 4, 5, 8, 16, 17, 23, 30, 32], "make_key_value_pair_nod": [3, 4, 23], "sequenceformatt": [3, 4, 8, 14, 20, 23, 28, 29, 31, 33], "dure": 3, "add_to_collect": 3, "gener": [3, 4, 11, 12, 13, 16, 24, 25, 26, 30, 31, 32], "compris": [3, 15, 32], "mixin": 3, "In": [3, 5, 26, 30, 31], "practic": [3, 16, 31], "almost": [3, 16], "instanti": [3, 8, 13, 14, 20, 22, 23, 25, 28, 29], "edited_cost": 3, "appli": [3, 7, 21, 31], "sum": [3, 4, 8, 11, 16, 23, 25, 26, 28], "upper_bound": [3, 5], "instead": [3, 4, 9, 21, 23, 26], "type_nam": 3, "default_mimetyp": 3, "format": [3, 8, 14, 16, 20, 21, 23, 25, 28, 29, 30, 31, 33, 34], "registri": [3, 13], "inclus": [3, 5], "command": [3, 13, 21, 22, 27, 28, 32], "line": [3, 8, 21, 22, 27, 28, 30, 32], "argument": [3, 5, 8, 11, 13, 25], "auto": [3, 5, 11], "detect": [3, 23], "short": 3, "via": 3, "valueerror": [3, 5, 11, 12, 14, 16, 23, 25], "conflict": 3, "preexist": [3, 13], "intermedi": [3, 13, 14, 19, 20, 25, 28, 29, 31], "pars": [3, 8, 14, 19, 20, 28, 29, 31, 33], "human": [3, 8, 14, 19, 20, 28, 29], "readabl": [3, 8, 13, 14, 19, 20, 21, 22, 28, 29], "failur": [3, 8, 14, 19, 20, 28, 29], "throw": [3, 8, 14, 19, 20, 28, 29], "On": [3, 8, 14, 19, 20, 28, 29], "success": [3, 8, 14, 15, 19, 20, 28, 29], "default_inst": [3, 8, 13, 14, 19, 20, 23, 25, 28, 29, 32], "namespac": [3, 13], "abcmeta": [3, 13], "metaclass": [3, 8, 13, 14, 20, 23, 25, 28, 29], "them": [3, 5, 14, 16, 26, 28, 29], "lookup": [3, 11, 13], "clsdict": [3, 13], "__instancecheck__": [3, 13], "cl": [3, 8, 13, 14, 20, 23, 25, 28, 29], "__subclasscheck__": [3, 13], "issubclass": [3, 13], "_abc_caches_clear": [3, 13], "clear": [3, 12, 13, 16, 18, 26], "cach": [3, 11, 13], "_abc_registry_clear": [3, 13], "_dump_registri": [3, 13], "helper": [3, 13, 16], "mro": [3, 13], "resolut": [3, 13], "order": [3, 4, 9, 12, 13, 16, 18, 23, 24, 26, 31], "virtual": [3, 13], "allow": [3, 11, 13, 26, 28, 32], "usag": [3, 11, 13], "attempt": [3, 5, 16, 24], "two": [3, 13, 15, 16, 18, 26, 31, 32], "share": 3, "current": [3, 11, 23, 24, 28], "protect": [3, 11, 23, 25], "member": [3, 4, 9, 11, 12, 16, 18, 23, 24, 25, 32], "__len__": [3, 4, 8, 23, 25, 26, 28], "number": [3, 4, 8, 11, 12, 13, 14, 21, 23, 24, 25, 26, 27, 28, 29], "total": [3, 4, 8, 14, 23, 24, 25, 28, 29], "output": [3, 13, 16, 21, 22, 23, 26, 32], "sequenceedit": [3, 15, 17, 31, 33], "remaind": [3, 11, 25], "get_formatt": [3, 8, 14, 15, 17, 20, 23, 25, 28, 29, 31, 33, 34], "autom": [3, 13, 15, 17, 25], "cast": [3, 15, 17, 25], "float_lik": 3, "formattercheck": [3, 8, 14, 20, 23, 25, 28, 29, 31, 33], "static": [3, 6, 8, 11, 13, 14, 20, 21, 23, 25, 28, 29], "__new__": [3, 8, 13, 14, 20, 23, 25, 28, 29], "popul": [3, 8, 13, 14, 20, 23, 25, 26, 28, 29], "sub_formatt": [3, 8, 13, 14, 20, 23, 25, 28, 29], "base_formatt": [3, 8, 13, 14, 20, 23, 25, 28, 29], "is_parti": [3, 8, 13, 14, 20, 23, 25, 28, 29], "manual": [3, 8, 13, 14, 20, 22, 23, 25, 28, 29], "node_or_edit": [3, 8, 14, 20, 23, 25, 28, 29, 34], "with_edit": [3, 8, 14, 20, 23, 25, 28, 29, 34], "veri": [3, 8, 14, 20, 23, 25, 28, 29], "complex": [3, 8, 11, 14, 20, 23, 25, 28, 29, 31], "due": [3, 8, 14, 20, 23, 25, 28, 29], "see": [3, 8, 13, 14, 20, 22, 23, 25, 28, 29, 31, 32, 34], "detail": [3, 8, 14, 20, 23, 25, 28, 29], "descript": [3, 8, 14, 20, 23, 25, 28, 29], "sub_format_typ": [3, 8, 13, 14, 20, 23, 25, 28, 29], "to_insert": [3, 17], "insert_into": 3, "penalti": [3, 15], "insert_str": 3, "int_lik": 3, "from_kvp": 3, "to_kvp": 3, "__eq__": [3, 4, 16, 18], "keyvaluepair": [3, 4], "compar": [3, 4, 5, 8, 12, 13, 16, 18, 28, 31], "otherwis": [3, 4, 11, 26, 34], "smaller": [3, 4, 5], "blue": [3, 4, 14, 23], "bright": [3, 4, 14, 21], "white": [3, 4], "match_from": 3, "match_to": 3, "null": [3, 16, 18], "initial_cost": 3, "compound": 3, "choos": [3, 34], "among": 3, "compet": 3, "search": [3, 31, 33], "iterativetighteningsearch": [3, 31, 33], "One": [3, 5], "choic": [3, 6, 23], "best_poss": 3, "yet": [3, 13, 15, 24, 26], "to_remov": [3, 17], "remove_from": [3, 32], "remove_str": 3, "to_replac": 3, "replace_with": 3, "escap": [3, 8, 14, 21, 28, 29], "onc": [3, 14, 15, 28, 29], "charact": [3, 11, 14, 21, 28, 29], "is_quot": [3, 14, 28, 29], "print_stringedit": [3, 14, 28, 29], "print_stringnod": [3, 14, 20, 28, 29], "write_char": [3, 14, 28, 29], "num_edit": [3, 14, 28, 29], "need": [3, 8, 14, 16, 28, 29, 32], "alreadi": [3, 5, 11, 12, 14, 16, 21, 28, 29], "configur": [3, 14, 28, 29], "prior": [3, 14, 16, 28, 29], "write_end_quot": [3, 14, 28, 29], "end": [3, 11, 14, 15, 20, 21, 23, 25, 26, 28, 29], "quot": [3, 14, 28, 29], "necessari": [3, 5, 13, 15, 16, 21, 28, 29], "write_start_quot": [3, 14, 28, 29], "start": [3, 11, 13, 14, 15, 20, 21, 23, 25, 28, 29, 30, 31], "string_lik": 3, "intend": [3, 5, 6], "hand": 3, "dynam": [3, 13], "both": [3, 5, 13, 16, 26, 31, 32], "variabl": [3, 11, 13, 32], "new_nod": 3, "wrapped_tree_nod": 3, "Its": [3, 31], "accept": [3, 12, 16, 18, 26, 28], "itertool": 3, "chain": 3, "els": [3, 13, 22, 26], "mime_typ": 3, "At": 3, "least": [3, 8, 14, 20, 23, 25, 26, 28, 29], "guess": 3, "guess_typ": 3, "could": [3, 13, 16, 27], "s1": 3, "s2": 3, "editdist": [3, 31, 33], "comput": [3, 11, 15, 16, 17, 18, 21], "distanc": [3, 15, 30], "between": [3, 14, 15, 16, 20, 23, 25, 28, 29, 32], "list1": 3, "list2": 3, "insert_remove_penalti": [3, 15], "levenshtein": [3, 30, 31, 33], "syntax": [4, 23, 32], "dataclassnod": [4, 23, 31, 33], "Be": [4, 9, 23], "care": [4, 9, 23], "post_init": [4, 9, 23], "editedtreenod": [4, 6, 8, 9, 15, 17, 20, 23, 25, 28, 31, 32, 33], "compoundedit": [4, 6, 8, 9, 17, 20, 23, 25, 28, 31, 33], "after": [4, 5, 8, 9, 11, 12, 14, 15, 20, 22, 23, 25, 26, 28, 29], "superclass": [4, 9, 23], "__mro__": [4, 9, 13, 23], "target": [4, 15], "mappingnod": [4, 8, 9, 14, 20, 23, 25, 28, 31, 33], "func": [4, 5, 21], "remov": [4, 8, 12, 14, 15, 16, 18, 21, 24, 26, 28, 29, 31, 32, 33], "insert": [4, 8, 11, 12, 14, 15, 26, 28, 29, 31, 33], "keyvaluepairnod": [4, 14, 17, 20, 23, 28, 29, 31, 32, 33], "leafnod": [4, 6, 8, 14, 20, 23, 28, 29, 31, 33], "from_nam": 4, "slice": [4, 11], "p": [5, 8, 14, 20, 23, 25, 28, 29, 30, 32], "posit": [5, 8, 26], "20": [5, 16], "30": 5, "varieti": 5, "data": [5, 6, 16, 18, 26, 32], "structur": [5, 6, 16, 18, 26, 30, 31, 32], "algorithm": [5, 11, 12, 15, 16, 18, 24, 30, 32], "g": [5, 11, 13, 21, 24, 30], "negative_infin": [5, 31, 33], "positive_infin": [5, 31, 33], "shrink": [5, 16, 24], "were": [5, 13, 16, 24], "suffici": 5, "distinct": [5, 16], "differenti": [5, 32], "domin": 5, "event": [5, 16], "ident": [5, 18], "id": [5, 11], "constitut": 5, "where": [5, 11, 13, 14, 21, 23], "infinit": 5, "primarili": 5, "unbound": [5, 15, 26, 30], "lower_bound": [5, 15, 34], "intersect": [5, 16, 18, 26], "to_interv": 5, "interv": 5, "intervaltre": 5, "packag": 5, "ensur": [5, 11], "overlap": [5, 16], "b": [5, 16, 24, 26], "smallest": [5, 12, 16, 24, 31, 33], "minimum": [5, 15, 16, 17, 26, 30], "repeatedli": 5, "ignor": [5, 23, 26], "heap": [5, 12], "fibonacciheap": [5, 31, 33], "push": [5, 12], "simplifi": 6, "ir": 6, "build_str": [6, 23], "nonetyp": [6, 23], "build_non": [6, 23], "build_float": [6, 23], "build_bool": [6, 23], "frozenset": [6, 11, 16, 18, 23], "build_set": [6, 23], "build_dict": [6, 23], "expand_dict": [6, 23], "_resolv": [6, 23], "obj_typ": [6, 23], "resolv": [6, 11, 13, 23], "boolnod": [6, 20, 23, 31, 33], "floatnod": [6, 20, 23, 31, 33], "nullnod": [6, 23, 31, 33], "multisetnod": [6, 14, 16, 17, 23, 31, 33], "root_obj": [6, 23], "node_typ": [6, 13, 23], "default_build": [6, 23], "default_expand": [6, 23], "resolve_build": [6, 23], "resolve_expand": [6, 23], "condit": 7, "dif": [8, 13, 14, 20, 28, 29, 30, 31], "render": [8, 14, 20, 27, 28, 29, 32], "text": [8, 11, 14, 22, 28, 29], "top": 8, "level": 8, "print_leafnod": [8, 14, 20, 28, 29], "column": [8, 26], "row": [8, 26], "writer": [8, 22, 31, 33], "writerow": 8, "json": [8, 13, 23, 25, 30, 31, 32, 33], "jsonformatt": [8, 23, 31, 32, 33], "edit_print": [8, 14, 20, 23, 25, 28, 29], "simpli": [8, 13, 14, 20, 23, 25, 28, 29], "deleg": [8, 14, 17, 20, 23, 25, 28, 29, 34], "partial": [8, 12, 14, 16, 20, 23, 25, 28, 29], "item_newlin": [8, 14, 20, 23, 25, 28, 29], "is_first": [8, 14, 20, 23, 25, 28, 29], "is_last": [8, 14, 20, 23, 25, 28, 29], "singl": 8, "items_ind": [8, 14, 20, 23, 25, 28, 29], "indent": [8, 14, 20, 21, 23, 25, 28, 29], "immedi": [8, 13, 14, 20, 23, 25, 28, 29], "start_symbol": [8, 14, 20, 23, 25, 28, 29], "befor": [8, 11, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29], "print_csvrow": 8, "print_sequencenod": [8, 14, 20, 23, 25, 28, 29], "just": [8, 13, 20, 23, 25, 28, 29, 32], "newlin": [8, 13, 14, 20, 21, 22, 23, 25, 28, 29], "last": [8, 13, 14, 15, 20, 22, 23, 25, 26, 28, 29], "becaus": [8, 13, 16], "print_csvnod": 8, "reader": 8, "extra": [8, 14, 20, 21, 22, 23, 25, 28, 29], "abstractcompoundedit": [9, 15, 17, 23, 25, 28, 31, 33], "abstractedit": [9, 17, 23, 25, 28, 31, 33], "util": [10, 30, 32, 33], "safer": 11, "eval": 11, "infix": 11, "adjust": 11, "preced": [11, 13], "getitem": 11, "modicum": 11, "safeti": 11, "access": [11, 26], "programm": 11, "disallow": 11, "privat": 11, "rpn": 11, "raw_str": 11, "op": 11, "5": [11, 16, 26, 30], "lambda": [11, 12, 14, 16, 20, 23, 25, 28, 29], "0x135057f80": 11, "0x135057d40": 11, "local": [11, 13], "40": 11, "1234": 11, "elid": 11, "trace": 11, "cannot": [11, 24, 30], "read": [11, 21, 22, 26, 31], "0x127808170": 11, "0x127805ef0": 11, "offset": [11, 21, 22], "15": [11, 30], "default_glob": [11, 31, 33], "global": [11, 13, 21, 24], "ab": 11, "ascii": 11, "bin": 11, "bytearrai": 11, "chr": 11, "enumer": 11, "filter": 11, "hash": [11, 16, 18, 26], "hex": 11, "max": [11, 26], "min": 11, "oct": 11, "ord": [11, 16], "round": 11, "sort": [11, 12, 16, 24, 26, 30, 31, 33], "zip": 11, "operators_by_nam": [11, 31, 33], "identifier_byt": [11, 31, 33], "letter": 11, "plu": [11, 21, 26], "close": [11, 21, 22], "bracket": 11, "raw_text": 11, "raw": 11, "within": 11, "raw_token": 11, "origin": [11, 30, 32], "start_token_typ": 11, "alia": [11, 23], "collection_typ": 11, "datastructur": [11, 16], "keep": [11, 21, 26], "track": [11, 21], "polish": 11, "notat": 11, "state": [11, 12], "omit": [11, 12, 14, 20, 21, 22, 23, 25, 26, 28, 29], "get_valu": 11, "liter": 11, "numer": 11, "meta": 11, "inject": 11, "fix": 11, "ariti": 11, "indic": [11, 16, 32], "is_list": 11, "open": [11, 26], "discard": [11, 16, 18], "delimit": [11, 14, 20, 23, 25, 27, 28, 29], "is_function_cal": 11, "enum": 11, "bitwise_and": 11, "9": 11, "bitwise_left_shift": 11, "6": [11, 30], "bitwise_not": 11, "bitwise_or": 11, "11": 11, "bitwise_right_shift": 11, "bitwise_xor": 11, "divis": 11, "8": 11, "function_cal": 11, "greater_than": 11, "7": [11, 30], "greater_than_equ": 11, "IN": 11, "int_divis": 11, "less_than": 11, "less_than_equ": 11, "logical_and": 11, "12": [11, 16], "logical_not": 11, "logical_or": 11, "13": 11, "member_access": 11, "not_equ": 11, "subtract": [11, 26], "ternary_condit": 11, "ternary_els": 11, "14": [11, 16], "unary_minu": 11, "unary_plu": 11, "prioriti": 11, "execut": [11, 30], "is_left_associ": 11, "include_in_global_operator_t": 11, "consum": 11, "left_associ": 11, "left": [11, 12, 15], "programmat": [11, 23], "pari": 11, "runtimeerror": 11, "with_traceback": 11, "tb": 11, "__traceback__": 11, "stream": [11, 21, 22, 26, 32], "io": [11, 21, 22], "commenc": 11, "has_next": 11, "peek": [11, 12], "next": [11, 13, 15], "would": [11, 13, 32], "actual": [11, 12, 21, 34], "prev_token": 11, "previou": 11, "get": [11, 12, 26], "getattr": 11, "permit": [11, 14, 21, 29], "retriev": 11, "underscor": 11, "startswith": 11, "request": [11, 13], "api": [11, 21], "behavior": [11, 12, 13, 16], "shunt": 11, "yard": 11, "expression_str": 11, "stream_or_str": 11, "mani": [12, 26], "speedup": 12, "amort": 12, "decrease_kei": 12, "decreas": [12, 15], "extract": 12, "comparison": [12, 32], "min_nod": 12, "without": [12, 21], "delet": 12, "assumpt": [12, 24], "incorrect": [12, 24], "lead": 12, "corrupt": 12, "add_child": 12, "increment": 12, "degre": 12, "sibl": 12, "prevent": [12, 13], "manipul": 12, "mark": [12, 21], "remove_child": 12, "decrement": 12, "right": [12, 15], "wrapper": 12, "reusabl": 13, "textual": 13, "ti": 13, "problem": [13, 16, 24, 30], "capabl": [13, 16], "librari": [13, 26, 32], "yaml": [13, 31, 32, 33], "Or": [13, 26], "enabl": [13, 21, 24], "through": [13, 16, 21], "develop": [13, 16, 27], "mean": 13, "user": 13, "deal": 13, "come": 13, "plai": 13, "wizardri": 13, "bit": 13, "infer": 13, "figur": 13, "out": [13, 21, 26], "specif": [13, 24, 31], "make": [13, 24], "stringformatt": [13, 14, 28, 29, 31, 33], "print_str": 13, "thing": 13, "registr": 13, "disabl": 13, "intformatt": 13, "print_int": 13, "work": [13, 15, 16, 17, 32], "demonstr": 13, "inherit": 13, "fooformatt": 13, "print_foo": 13, "straightforward": 13, "enough": 13, "separ": [13, 30], "barformatt": 13, "print_bar": 13, "cool": 13, "huh": 13, "collis": 13, "join": [13, 31], "oof": 13, "As": [13, 32], "prefer": 13, "got": 13, "lucki": 13, "printout": 13, "though": [13, 16, 26], "happen": 13, "That": 13, "desir": 13, "To": [13, 32], "compartment": 13, "insid": 13, "formtter": 13, "organ": 13, "hierarch": 13, "barstringformatt": 13, "now": 13, "invok": [13, 14, 23], "describ": 13, "proper": 13, "activ": 13, "abov": [13, 15], "__name__": 13, "repeat": [13, 26], "process": 13, "subformatt": 13, "point": [13, 15, 30], "decid": 13, "everi": [13, 21], "begin": [13, 26], "print_": 13, "verifi": 13, "insofar": 13, "checker": 13, "typeerror": 13, "hint": [13, 21, 22], "correct": 13, "made": [13, 22], "accord": 13, "javascript": 14, "symbol": [14, 20, 23, 25, 27, 28, 29], "end_symbol": [14, 20, 23, 25, 28, 29], "delimiter_callback": [14, 20, 23, 25, 28, 29], "print_mappingnod": [14, 20, 23, 28, 29], "print_multisetnod": [14, 20, 23, 28, 29], "print_containernod": [14, 29], "fallback": [14, 29], "xml": [14, 29, 31, 33], "xmlelement": [14, 29, 31, 33], "print_keyvaluepairnod": [14, 20, 28, 29], "dump": 14, "print_xmlel": [14, 28], "print_listnod": [14, 20, 23, 28, 29], "stringedit": [14, 28, 29, 31, 32, 33], "python_obj": [14, 23], "force_leaf_nod": 14, "unsupport": [14, 23], "onlin": [15, 30], "metric": [15, 30], "improv": [15, 24, 30], "converg": [15, 24, 30], "optim": [15, 16, 24, 30], "discov": [15, 16, 30], "from_seq": 15, "to_seq": 15, "matrix": [15, 16, 26], "diagon": 15, "cell": [15, 26], "reconstruct": [15, 32], "updat": [15, 16, 26, 27], "observ": 15, "monoton": [15, 24], "incomplet": 15, "canon": [15, 30], "solv": [16, 24, 30], "variant": 16, "much": [16, 18], "code": [16, 21], "nearli": 16, "karp": 16, "weight": [16, 30], "bipartit": [16, 30], "karp78": 16, "find": [16, 17, 24, 34], "minim": 16, "part": 16, "scipi": [16, 26], "asymptot": 16, "inferior": 16, "superior": 16, "compil": 16, "compon": [16, 32], "interest": 16, "d": [16, 26], "edge_weight": 16, "97": 16, "99": 16, "101": 16, "103": 16, "105": 16, "from_nodes_index": 16, "matched_to_nodes_index": 16, "matched_edge_weight": 16, "16": 16, "18": 16, "richard": 16, "m": [16, 30], "mn": 16, "log": 16, "1978": 16, "cost_bar": 16, "cost_star": 16, "_from_iter": [16, 18], "signatur": [16, 18], "_hash": [16, 18], "don": [16, 18], "__hash__": [16, 18], "hashabl": [16, 18], "compat": [16, 18, 22], "ought": [16, 18], "freedom": [16, 18], "effect": [16, 18, 26, 30], "present": [16, 26], "shallow": [16, 26], "differ": [16, 24, 32], "difference_upd": 16, "intersection_upd": 16, "isdisjoint": [16, 18], "issubset": 16, "report": 16, "issuperset": 16, "symmetric_differ": 16, "symmetr": 16, "exactli": 16, "symmetric_difference_upd": 16, "construct_edg": 16, "sorted_neighbor": 16, "matcher": 16, "direct": 16, "overridden": [16, 25], "flip_direct": 16, "path_to": 16, "from_any_of": 16, "is_speci": 16, "head": [16, 27], "tail": 16, "get_edg": 16, "atop": [16, 28], "select": 16, "graph": [16, 30, 31], "make_distinct": [16, 31, 33], "Then": 16, "multisetedit": [16, 31, 33], "dens": 16, "lazili": 16, "realiz": 16, "partwai": 16, "better": 16, "linear_sum_assign": 16, "faster": 16, "retain": 16, "ever": 16, "free_destin": 16, "free_sourc": 16, "min_valu": 16, "max_valu": 16, "dtype": 16, "numpi": 16, "w": [16, 26], "second": 16, "rest": 16, "nativ": [16, 26], "larger": [16, 17], "64": 16, "63": 16, "matched_to_node_index": 16, "boolean": 16, "latter": [17, 31], "conta": 17, "from_set": 17, "to_set": 17, "unord": [17, 31], "weightedbipartitematch": [17, 31, 33], "These": 17, "typic": [17, 25, 27], "nor": 17, "enforc": 17, "signific": 17, "amount": 17, "hold": [18, 26], "those": 18, "upon": 18, "initial_obj": 18, "mutableset": 18, "unhash": 18, "slow": 18, "absent": 18, "pydiffformatt": [19, 31, 33], "appl": 20, "print_boolnod": 20, "print_floatnod": 20, "print_integernod": 20, "print_plistnod": 20, "write_obj": [20, 29], "sever": [21, 31], "reason": [21, 30, 31], "toggl": 21, "ansi": 21, "color": 21, "logic": 21, "pretti": 21, "concurr": 21, "statu": [21, 22], "tqdm": [21, 22], "html": [21, 31, 33], "rather": [21, 32], "default_print": [21, 31, 32, 33], "sy": [21, 22, 26], "stdout": [21, 22, 32], "fore": 21, "ansifor": 21, "ansiback": 21, "style": [21, 25], "ansistyl": 21, "termin": 21, "foreground": 21, "background": 21, "bg_color": 21, "foreground_color": 21, "dim": 21, "end_cod": 21, "is_appli": 21, "start_cod": 21, "combining_mark": 21, "combin": 21, "written": [21, 22], "__enter__": [21, 26], "interact": [21, 26, 28, 32], "flush": [21, 22], "buffer": [21, 22], "isatti": [21, 22], "tty": 21, "marks_str": 21, "raw_writ": 21, "modif": 21, "get_back": 21, "get_for": 21, "titl": 21, "out_stream": [21, 22], "ansi_color": 21, "quiet": [21, 22], "progress": [21, 31, 33], "suppress": [21, 22], "fileno": [21, 22], "along": [21, 22], "html_element": 21, "element_nam": 21, "inlin": 21, "step": [21, 32], "indent_str": 21, "four": [21, 26, 32], "space": [21, 24], "mode": [21, 22], "ellipsi": [21, 22], "anystr": [21, 22], "readlin": [21, 22], "limit": [21, 22], "seek": [21, 22], "whenc": [21, 22], "seekabl": [21, 22], "status_stream": [21, 22], "textio": [21, 22], "strike": 21, "tell": [21, 22], "trang": [21, 22], "truncat": [21, 22], "under_plu": 21, "underneath": 21, "writabl": [21, 22], "write_raw": [21, 22], "stderr": [21, 22], "writelin": [21, 22], "fake": 21, "emit": 21, "statuswrit": [21, 31, 33], "subset": 21, "full": 22, "lifetim": 22, "control": 22, "block": 22, "lost": 22, "memori": [23, 26, 31], "document": [23, 27, 32], "_ast": 23, "build_modul": 23, "build_ast_list": 23, "build_assign": 23, "build_nam": 23, "expr": 23, "build_const": 23, "build_cal": 23, "importfrom": 23, "build_import_from": 23, "build_alia": 23, "build_attribut": 23, "build_ast_dict": 23, "subscript": [23, 31, 33], "build_subscript": 23, "expand_modul": 23, "expand_collect": 23, "expand_assign": 23, "expand_const": 23, "expand_cal": 23, "expand_import_from": 23, "expand_ast_dict": 23, "expand_subscript": 23, "as_nam": 23, "jsondictformatt": [23, 25, 31, 33], "jsonlistformatt": [23, 25, 31, 33], "print_pyalia": 23, "print_subscript": 23, "print_assign": 23, "print_import": 23, "print_modul": 23, "class_nam": 23, "attr": 23, "from_obj": 23, "fixedkeydictnod": [23, 31, 33], "print_cal": 23, "print_callargu": 23, "print_keywordargu": 23, "pykeywordargu": 23, "red": 23, "light": 23, "print_pyobj": 23, "print_pyobjattribut": 23, "print_pyobjfixedattribut": 23, "ast": [23, 31, 33], "cycl": 23, "from_py_obj": 23, "to_py_obj": 23, "reveal": 24, "100": 24, "200": 24, "50": 24, "1000": 24, "60": 24, "500": 24, "guarante": 24, "toward": 24, "conform": 24, "150": 24, "160": 24, "155": 24, "153": 24, "about": 24, "rate": 24, "goal": 24, "computation": 24, "fewest": 24, "__bool__": 24, "good": 24, "greatli": 24, "speed": 24, "li": 24, "outsid": 24, "best_match": 24, "thu": 24, "feasibl": 24, "goal_test": 24, "remove_best": 24, "therefor": [24, 30, 32], "reach": 24, "your": 24, "produc": [24, 32], "interleav": 25, "counter": 26, "__add__": 26, "count": 26, "abbb": 26, "bcc": 26, "__and__": 26, "__delitem__": 26, "elem": 26, "miss": 26, "__iadd__": 26, "inplac": 26, "__iand__": 26, "__ior__": 26, "maximum": 26, "__isub__": 26, "abbbc": 26, "bccd": 26, "__missing__": 26, "__neg__": 26, "strip": 26, "flip": 26, "sign": 26, "__or__": 26, "__pos__": 26, "__sub__": 26, "_keep_posit": 26, "intern": [26, 34], "abcabc": 26, "knuth": 26, "prime": 26, "factor": 26, "1836": 26, "17": 26, "prime_factor": 26, "loop": 26, "multipli": 26, "fromkei": 26, "v": 26, "view": 26, "most_common": 26, "common": 26, "abracadabra": 26, "r": 26, "popitem": 26, "lifo": 26, "setdefault": 26, "replac": [26, 31, 33], "reduc": 26, "below": 26, "witch": 26, "watch": 26, "h": 26, "minu": 26, "ordereddict": 26, "rememb": 26, "encount": 26, "And": 26, "gallahad": 26, "od": 26, "move_to_end": 26, "move": 26, "fifo": 26, "num_row": 26, "num_col": 26, "default_valu": 26, "mutablemap": 26, "spars": 26, "matric": 26, "homogen": 26, "sparsematrixrow": 26, "row_num": 26, "col": 26, "indexerror": 26, "content": 26, "approxim": 26, "shape": 26, "lack": 26, "footprint": 26, "matrox": 26, "num_filled_el": 26, "explicitli": 26, "prefix": 26, "suffix": 26, "temporari": 26, "clean": 26, "tmp": 26, "var": 26, "folder": 26, "hrvzrctx6tg2_j17gb6wckph0000gn": 26, "tmpkza5fvr_": 26, "__exit__": 26, "traceback": 26, "filenam": 26, "hasattr": 26, "measur": 26, "central": 27, "inform": 27, "setup": 27, "py": 27, "dev_build": [27, 31, 33], "coincid": 27, "releas": 27, "deploi": 27, "pypi": 27, "git": 27, "branch": 27, "__version__": [27, 31, 33], "major": 27, "minor": 27, "revis": 27, "version_str": [27, 31, 33], "codebas": 27, "ref": 27, "q": 27, "parser": 28, "etre": 28, "elementtre": 28, "xhtml": 28, "tag": 28, "attrib": 28, "attrib_edit": 28, "child_edit": 28, "tag_edit": 28, "text_edit": 28, "path_or_element_tre": 28, "vnd": 29, "has_newlin": 29, "polynomi": 30, "tractabl": 30, "restrict": 30, "dag": 30, "forest": 30, "constraint": [30, 31, 33], "exploit": 30, "particular": 30, "challeng": 30, "extant": 30, "take": 30, "zab": 30, "woo": 30, "foobar": 30, "tool": 30, "canonic": 30, "per": 30, "tradit": 30, "cat": 30, "jq": 30, "u": 30, "Not": 30, "entir": 30, "particularli": 30, "larg": 30, "break": 30, "wagner": 30, "fischer": 30, "destin": 30, "http": 30, "en": 30, "wikipedia": 30, "org": 30, "wiki": 30, "graph_isomorphism_problem": 30, "directed_acyclic_graph": 30, "online_algorithm": 30, "constructive_proof": 30, "levenshtein_dist": [30, 31, 33], "e2": 30, "80": 30, "93fischer_algorithm": 30, "assignment_problem": 30, "np": 30, "purpos": 31, "merg": 31, "csv": [31, 33], "portmanteau": 31, "graftag": 31, "togeth": 31, "grow": 31, "why": [31, 33], "focus": 31, "instruct": 31, "github": 31, "page": 31, "footnot": 31, "constantcostedit": [31, 33], "editcollect": [31, 33], "editsequ": [31, 33], "filetypewatch": [31, 33], "fixedkeydictnodeedit": [31, 33], "keyvaluepairedit": [31, 33], "possibleedit": [31, 33], "treenodemeta": [31, 33], "explode_edit": [31, 33], "get_filetyp": [31, 33], "string_edit_dist": [31, 33], "callargu": [31, 33], "callkeyword": [31, 33], "keywordargu": [31, 33], "boundedcompar": [31, 33], "constantbound": [31, 33], "infin": [31, 33], "min_bound": [31, 33], "repeat_until_tighten": [31, 33], "cyclicrefer": [31, 33], "conditionalmatch": [31, 33], "matchif": [31, 33], "matchunless": [31, 33], "csvformatt": [31, 33], "csvnode": [31, 33], "csvrow": [31, 33], "csvrowformatt": [31, 33], "dataclassedit": [31, 33], "closebracket": [31, 33], "closeparen": [31, 33], "collectioninfo": [31, 33], "comma": [31, 33], "fixedsizecollect": [31, 33], "floattoken": [31, 33], "functioncal": [31, 33], "identifiertoken": [31, 33], "integertoken": [31, 33], "numerictoken": [31, 33], "openbracket": [31, 33], "openparen": [31, 33], "operatortoken": [31, 33], "pairedendtoken": [31, 33], "pairedstarttoken": [31, 33], "pairedtoken": [31, 33], "parenthesi": [31, 33], "parseerror": [31, 33], "stringtoken": [31, 33], "token": [31, 33], "get_memb": [31, 33], "infix_to_rpn": [31, 33], "fibonacci": [31, 33], "heapnod": [31, 33], "maxfibonacciheap": [31, 33], "reversedcompar": [31, 33], "basicformatt": [31, 33], "json5": [31, 33], "jsonstringformatt": [31, 33], "edg": [31, 33], "matchingfromnod": [31, 33], "matchingnod": [31, 33], "matchingtonod": [31, 33], "pathset": [31, 33], "queueelement": [31, 33], "sortededg": [31, 33], "weightedbipartitematcherpartial_implement": [31, 33], "get_dtyp": [31, 33], "min_weight_bipartite_match": [31, 33], "object_set": [31, 33], "identityhash": [31, 33], "objectset": [31, 33], "plist": [31, 33], "plistformatt": [31, 33], "plistnod": [31, 33], "plistsequenceformatt": [31, 33], "ansicontext": [31, 33], "combiningmarkcontext": [31, 33], "combiningmarkwrit": [31, 33], "htmlansicontext": [31, 33], "htmlprinter": [31, 33], "nullansicontext": [31, 33], "nullwrit": [31, 33], "rawwrit": [31, 33], "only_ansi": [31, 33], "pydiff": [31, 32, 33], "astbuild": [31, 33], "pyalia": [31, 33], "pydictformatt": [31, 33], "pyimportformatt": [31, 33], "pylistformatt": [31, 33], "pymoduleformatt": [31, 33], "pyobj": [31, 33], "pyobjattribut": [31, 33], "pyobjbuild": [31, 33], "pyobjedit": [31, 33], "pyobjfixedattribut": [31, 33], "pyobjformatt": [31, 33], "ast_to_tre": [31, 33], "print_diff": [31, 32, 33], "fixedlengthsequenceedit": [31, 33], "orderedcount": [31, 33], "sparsematrix": [31, 33], "tempfil": [31, 33], "getsizeof": [31, 33], "largest": [31, 33], "git_branch": [31, 33], "xmlchildformatt": [31, 33], "xmlelementattribformatt": [31, 33], "xmlelementchildren": [31, 33], "xmlelementedit": [31, 33], "xmlelementobj": [31, 33], "xmlformatt": [31, 33], "xmlstringformatt": [31, 33], "yamldictformatt": [31, 33], "yamlformatt": [31, 32, 33], "yamlkeyvaluepairformatt": [31, 33], "yamllistformatt": [31, 33], "yamlstringformatt": [31, 33], "from_tre": 32, "to_tre": 32, "maintain": 32, "characterist": 32, "too": 32, "editeddictnod": 32, "editedkeyvaluepairnod": 32, "editedstringnod": 32, "editedlistnod": 32, "editedintegernod": 32, "chose": 32, "did": 32, "independ": 32, "thank": 32, "abil": 32, "quickli": 32, "obj1": 32, "obj2": 32, "baz": 32, "bak": 32, "ba": 32, "z": 32, "fail": 34, "warn": 34}, "objects": {"": [[3, 0, 0, "-", "graphtage"]], "graphtage": [[3, 1, 1, "", "AbstractCompoundEdit"], [3, 1, 1, "", "AbstractEdit"], [3, 1, 1, "", "BoolNode"], [3, 1, 1, "", "BuildOptions"], [3, 1, 1, "", "CompoundEdit"], [3, 1, 1, "", "ConstantCostEdit"], [3, 1, 1, "", "ContainerNode"], [3, 1, 1, "", "DictNode"], [3, 1, 1, "", "Edit"], [3, 1, 1, "", "EditCollection"], [3, 1, 1, "", "EditSequence"], [3, 1, 1, "", "EditedTreeNode"], [3, 1, 1, "", "Filetype"], [3, 1, 1, "", "FiletypeWatcher"], [3, 1, 1, "", "FixedKeyDictNode"], [3, 1, 1, "", "FixedKeyDictNodeEdit"], [3, 1, 1, "", "FloatNode"], [3, 1, 1, "", "GraphtageFormatter"], [3, 1, 1, "", "Insert"], [3, 1, 1, "", "IntegerNode"], [3, 1, 1, "", "KeyValuePairEdit"], [3, 1, 1, "", "KeyValuePairNode"], [3, 1, 1, "", "LeafNode"], [3, 1, 1, "", "ListNode"], [3, 1, 1, "", "MappingNode"], [3, 1, 1, "", "Match"], [3, 1, 1, "", "MultiSetNode"], [3, 1, 1, "", "NullNode"], [3, 1, 1, "", "PossibleEdits"], [3, 1, 1, "", "Remove"], [3, 1, 1, "", "Replace"], [3, 1, 1, "", "StringEdit"], [3, 1, 1, "", "StringFormatter"], [3, 1, 1, "", "StringNode"], [3, 1, 1, "", "TreeNode"], [3, 1, 1, "", "TreeNodeMeta"], [4, 0, 0, "-", "ast"], [5, 0, 0, "-", "bounds"], [6, 0, 0, "-", "builder"], [7, 0, 0, "-", "constraints"], [8, 0, 0, "-", "csv"], [9, 0, 0, "-", "dataclasses"], [10, 0, 0, "-", "debug"], [3, 5, 1, "", "explode_edits"], [11, 0, 0, "-", "expressions"], [12, 0, 0, "-", "fibonacci"], [13, 0, 0, "-", "formatter"], [3, 5, 1, "", "get_filetype"], [14, 0, 0, "-", "json"], [15, 0, 0, "-", "levenshtein"], [16, 0, 0, "-", "matching"], [17, 0, 0, "-", "multiset"], [18, 0, 0, "-", "object_set"], [19, 0, 0, "-", "pickle"], [20, 0, 0, "-", "plist"], [21, 0, 0, "-", "printer"], [22, 0, 0, "-", "progress"], [23, 0, 0, "-", "pydiff"], [24, 0, 0, "-", "search"], [25, 0, 0, "-", "sequences"], [3, 5, 1, "", "string_edit_distance"], [26, 0, 0, "-", "utils"], [27, 0, 0, "-", "version"], [28, 0, 0, "-", "xml"], [29, 0, 0, "-", "yaml"]], "graphtage.AbstractCompoundEdit": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 2, 1, "", "edits"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.AbstractEdit": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.BoolNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.BuildOptions": [[3, 2, 1, "", "__getattr__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "copy"]], "graphtage.CompoundEdit": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "bounds"], [3, 2, 1, "", "edits"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.ConstantCostEdit": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.ContainerNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.DictNode": [[3, 2, 1, "", "__contains__"], [3, 2, 1, "", "__getitem__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 4, 1, "", "container_type"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "items"], [3, 2, 1, "", "make_edited"], [3, 2, 1, "", "make_key_value_pair_node"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.Edit": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "bounds"], [3, 3, 1, "id0", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "id1", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.EditCollection": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 2, 1, "", "edits"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.EditSequence": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 2, 1, "", "edits"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.EditedTreeNode": [[3, 2, 1, "", "__init__"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edited_cost"]], "graphtage.Filetype": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "build_tree"], [3, 2, 1, "", "build_tree_handling_errors"], [3, 3, 1, "", "default_instance"], [3, 2, 1, "", "get_default_formatter"]], "graphtage.FiletypeWatcher": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__instancecheck__"], [3, 2, 1, "", "__subclasscheck__"], [3, 2, 1, "", "_abc_caches_clear"], [3, 2, 1, "", "_abc_registry_clear"], [3, 2, 1, "", "_dump_registry"], [3, 2, 1, "", "mro"], [3, 2, 1, "", "register"]], "graphtage.FixedKeyDictNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__len__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 4, 1, "", "container_type"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "items"], [3, 2, 1, "", "make_edited"], [3, 2, 1, "", "make_key_value_pair_node"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.FixedKeyDictNodeEdit": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 2, 1, "", "edits"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 4, 1, "", "sequence"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.FloatNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.GraphtageFormatter": [[3, 3, 1, "", "DEFAULT_INSTANCE"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__new__"], [3, 2, 1, "", "get_formatter"], [3, 3, 1, "", "is_partial"], [3, 3, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 4, 1, "", "root"], [3, 3, 1, "", "sub_format_types"], [3, 3, 1, "", "sub_formatters"]], "graphtage.Insert": [[3, 3, 1, "", "INSERT_STRING"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 4, 1, "", "insert_into"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "to_insert"], [3, 4, 1, "", "valid"]], "graphtage.IntegerNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.KeyValuePairEdit": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 2, 1, "", "edits"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.KeyValuePairNode": [[3, 2, 1, "", "__eq__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.LeafNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.ListNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__len__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 4, 1, "", "container_type"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.MappingNode": [[3, 2, 1, "", "__contains__"], [3, 2, 1, "", "__getitem__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "items"], [3, 2, 1, "", "make_edited"], [3, 2, 1, "", "make_key_value_pair_node"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.Match": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.MultiSetNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 4, 1, "", "container_type"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.NullNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.PossibleEdits": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "best_possibility"], [3, 2, 1, "", "bounds"], [3, 2, 1, "", "edits"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.Remove": [[3, 3, 1, "", "REMOVE_STRING"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.Replace": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.StringEdit": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__lt__"], [3, 2, 1, "", "_debug_tighten_bounds"], [3, 2, 1, "", "bounds"], [3, 3, 1, "", "from_node"], [3, 2, 1, "", "has_non_zero_cost"], [3, 3, 1, "", "initial_bounds"], [3, 2, 1, "", "is_complete"], [3, 2, 1, "", "on_diff"], [3, 2, 1, "", "print"], [3, 2, 1, "", "tighten_bounds"], [3, 4, 1, "", "valid"]], "graphtage.StringFormatter": [[3, 3, 1, "", "DEFAULT_INSTANCE"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__new__"], [3, 2, 1, "", "context"], [3, 2, 1, "", "escape"], [3, 2, 1, "", "get_formatter"], [3, 3, 1, "", "is_partial"], [3, 3, 1, "", "is_quoted"], [3, 3, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_StringEdit"], [3, 2, 1, "", "print_StringNode"], [3, 4, 1, "", "root"], [3, 3, 1, "", "sub_format_types"], [3, 3, 1, "", "sub_formatters"], [3, 2, 1, "", "write_char"], [3, 2, 1, "", "write_end_quote"], [3, 2, 1, "", "write_start_quote"]], "graphtage.StringNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.TreeNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_edit_modifier"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "copy_from"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edit_contexts"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 4, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_parent_context"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.TreeNodeMeta": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__instancecheck__"], [3, 2, 1, "", "__subclasscheck__"], [3, 2, 1, "", "_abc_caches_clear"], [3, 2, 1, "", "_abc_registry_clear"], [3, 2, 1, "", "_dump_registry"], [3, 2, 1, "", "edited_type"], [3, 2, 1, "", "mro"], [3, 2, 1, "", "register"]], "graphtage.ast": [[4, 1, 1, "", "Assignment"], [4, 1, 1, "", "Call"], [4, 1, 1, "", "CallArguments"], [4, 1, 1, "", "CallKeywords"], [4, 1, 1, "", "Import"], [4, 1, 1, "", "KeywordArgument"], [4, 1, 1, "", "Module"], [4, 1, 1, "", "Subscript"]], "graphtage.ast.Assignment": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "add_edit_modifier"], [4, 2, 1, "", "all_children_are_leaves"], [4, 2, 1, "", "calculate_total_size"], [4, 2, 1, "", "children"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "copy_from"], [4, 2, 1, "", "dfs"], [4, 2, 1, "", "diff"], [4, 2, 1, "", "editable_dict"], [4, 4, 1, "", "edited"], [4, 2, 1, "", "edits"], [4, 2, 1, "", "get_all_edit_contexts"], [4, 2, 1, "", "get_all_edits"], [4, 4, 1, "", "is_leaf"], [4, 2, 1, "", "items"], [4, 2, 1, "", "make_edited"], [4, 4, 1, "", "parent"], [4, 2, 1, "", "post_init"], [4, 2, 1, "", "print"], [4, 2, 1, "", "print_parent_context"], [4, 3, 1, "", "targets"], [4, 2, 1, "", "to_obj"], [4, 4, 1, "", "total_size"], [4, 3, 1, "", "value"]], "graphtage.ast.Call": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "add_edit_modifier"], [4, 2, 1, "", "all_children_are_leaves"], [4, 3, 1, "", "args"], [4, 2, 1, "", "calculate_total_size"], [4, 2, 1, "", "children"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "copy_from"], [4, 2, 1, "", "dfs"], [4, 2, 1, "", "diff"], [4, 2, 1, "", "editable_dict"], [4, 4, 1, "", "edited"], [4, 2, 1, "", "edits"], [4, 3, 1, "", "func"], [4, 2, 1, "", "get_all_edit_contexts"], [4, 2, 1, "", "get_all_edits"], [4, 4, 1, "", "is_leaf"], [4, 2, 1, "", "items"], [4, 3, 1, "", "kwargs"], [4, 2, 1, "", "make_edited"], [4, 4, 1, "", "parent"], [4, 2, 1, "", "post_init"], [4, 2, 1, "", "print"], [4, 2, 1, "", "print_parent_context"], [4, 2, 1, "", "to_obj"], [4, 4, 1, "", "total_size"]], "graphtage.ast.CallArguments": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__iter__"], [4, 2, 1, "", "__len__"], [4, 2, 1, "", "add_edit_modifier"], [4, 2, 1, "", "all_children_are_leaves"], [4, 2, 1, "", "calculate_total_size"], [4, 2, 1, "", "children"], [4, 4, 1, "", "container_type"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "copy_from"], [4, 2, 1, "", "dfs"], [4, 2, 1, "", "diff"], [4, 2, 1, "", "editable_dict"], [4, 4, 1, "", "edited"], [4, 2, 1, "", "edits"], [4, 2, 1, "", "get_all_edit_contexts"], [4, 2, 1, "", "get_all_edits"], [4, 4, 1, "", "is_leaf"], [4, 2, 1, "", "make_edited"], [4, 4, 1, "", "parent"], [4, 2, 1, "", "print"], [4, 2, 1, "", "print_parent_context"], [4, 2, 1, "", "to_obj"], [4, 4, 1, "", "total_size"]], "graphtage.ast.CallKeywords": [[4, 2, 1, "", "__contains__"], [4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "add_edit_modifier"], [4, 2, 1, "", "all_children_are_leaves"], [4, 2, 1, "", "calculate_total_size"], [4, 2, 1, "", "children"], [4, 4, 1, "", "container_type"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "copy_from"], [4, 2, 1, "", "dfs"], [4, 2, 1, "", "diff"], [4, 2, 1, "", "editable_dict"], [4, 4, 1, "", "edited"], [4, 2, 1, "", "edits"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "get_all_edit_contexts"], [4, 2, 1, "", "get_all_edits"], [4, 4, 1, "", "is_leaf"], [4, 2, 1, "", "items"], [4, 2, 1, "", "make_edited"], [4, 2, 1, "", "make_key_value_pair_node"], [4, 4, 1, "", "parent"], [4, 2, 1, "", "print"], [4, 2, 1, "", "print_parent_context"], [4, 2, 1, "", "to_obj"], [4, 4, 1, "", "total_size"]], "graphtage.ast.Import": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "add_edit_modifier"], [4, 2, 1, "", "all_children_are_leaves"], [4, 2, 1, "", "calculate_total_size"], [4, 2, 1, "", "children"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "copy_from"], [4, 2, 1, "", "dfs"], [4, 2, 1, "", "diff"], [4, 2, 1, "", "editable_dict"], [4, 4, 1, "", "edited"], [4, 2, 1, "", "edits"], [4, 3, 1, "", "from_name"], [4, 2, 1, "", "get_all_edit_contexts"], [4, 2, 1, "", "get_all_edits"], [4, 4, 1, "", "is_leaf"], [4, 2, 1, "", "items"], [4, 2, 1, "", "make_edited"], [4, 3, 1, "", "names"], [4, 4, 1, "", "parent"], [4, 2, 1, "", "post_init"], [4, 2, 1, "", "print"], [4, 2, 1, "", "print_parent_context"], [4, 2, 1, "", "to_obj"], [4, 4, 1, "", "total_size"]], "graphtage.ast.KeywordArgument": [[4, 2, 1, "", "__eq__"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "__lt__"], [4, 2, 1, "", "add_edit_modifier"], [4, 2, 1, "", "all_children_are_leaves"], [4, 2, 1, "", "calculate_total_size"], [4, 2, 1, "", "children"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "copy_from"], [4, 2, 1, "", "dfs"], [4, 2, 1, "", "diff"], [4, 2, 1, "", "editable_dict"], [4, 4, 1, "", "edited"], [4, 2, 1, "", "edits"], [4, 2, 1, "", "get_all_edit_contexts"], [4, 2, 1, "", "get_all_edits"], [4, 4, 1, "", "is_leaf"], [4, 2, 1, "", "make_edited"], [4, 4, 1, "", "parent"], [4, 2, 1, "", "print"], [4, 2, 1, "", "print_parent_context"], [4, 2, 1, "", "to_obj"], [4, 4, 1, "", "total_size"]], "graphtage.ast.Module": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__iter__"], [4, 2, 1, "", "__len__"], [4, 2, 1, "", "add_edit_modifier"], [4, 2, 1, "", "all_children_are_leaves"], [4, 2, 1, "", "calculate_total_size"], [4, 2, 1, "", "children"], [4, 4, 1, "", "container_type"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "copy_from"], [4, 2, 1, "", "dfs"], [4, 2, 1, "", "diff"], [4, 2, 1, "", "editable_dict"], [4, 4, 1, "", "edited"], [4, 2, 1, "", "edits"], [4, 2, 1, "", "get_all_edit_contexts"], [4, 2, 1, "", "get_all_edits"], [4, 4, 1, "", "is_leaf"], [4, 2, 1, "", "make_edited"], [4, 4, 1, "", "parent"], [4, 2, 1, "", "print"], [4, 2, 1, "", "print_parent_context"], [4, 2, 1, "", "to_obj"], [4, 4, 1, "", "total_size"]], "graphtage.ast.Subscript": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "add_edit_modifier"], [4, 2, 1, "", "all_children_are_leaves"], [4, 2, 1, "", "calculate_total_size"], [4, 2, 1, "", "children"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "copy_from"], [4, 2, 1, "", "dfs"], [4, 2, 1, "", "diff"], [4, 2, 1, "", "editable_dict"], [4, 4, 1, "", "edited"], [4, 2, 1, "", "edits"], [4, 2, 1, "", "get_all_edit_contexts"], [4, 2, 1, "", "get_all_edits"], [4, 4, 1, "", "is_leaf"], [4, 2, 1, "", "items"], [4, 2, 1, "", "make_edited"], [4, 4, 1, "", "parent"], [4, 2, 1, "", "post_init"], [4, 2, 1, "", "print"], [4, 2, 1, "", "print_parent_context"], [4, 3, 1, "", "slice"], [4, 2, 1, "", "to_obj"], [4, 4, 1, "", "total_size"], [4, 3, 1, "", "value"]], "graphtage.bounds": [[5, 1, 1, "", "Bounded"], [5, 1, 1, "", "BoundedComparator"], [5, 1, 1, "", "ConstantBound"], [5, 1, 1, "", "Infinity"], [5, 3, 1, "", "NEGATIVE_INFINITY"], [5, 3, 1, "", "POSITIVE_INFINITY"], [5, 1, 1, "", "Range"], [5, 5, 1, "", "make_distinct"], [5, 5, 1, "", "min_bounded"], [5, 5, 1, "", "repeat_until_tightened"], [5, 5, 1, "", "sort"]], "graphtage.bounds.Bounded": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "bounds"], [5, 2, 1, "", "tighten_bounds"]], "graphtage.bounds.BoundedComparator": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "__lt__"], [5, 3, 1, "", "bounded"]], "graphtage.bounds.ConstantBound": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "bounds"], [5, 2, 1, "", "tighten_bounds"]], "graphtage.bounds.Infinity": [[5, 2, 1, "", "__init__"], [5, 4, 1, "", "positive"]], "graphtage.bounds.Range": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "definitive"], [5, 2, 1, "", "dominates"], [5, 4, 1, "", "finite"], [5, 2, 1, "", "intersect"], [5, 3, 1, "", "lower_bound"], [5, 2, 1, "", "to_interval"], [5, 3, 1, "", "upper_bound"]], "graphtage.builder": [[6, 1, 1, "", "BasicBuilder"], [6, 1, 1, "", "Builder"], [6, 1, 1, "", "CyclicReference"]], "graphtage.builder.BasicBuilder": [[6, 3, 1, "", "BUILDERS"], [6, 3, 1, "", "EXPANDERS"], [6, 2, 1, "", "__init__"], [6, 2, 1, "", "_resolve"], [6, 2, 1, "", "build"], [6, 2, 1, "", "build_bool"], [6, 2, 1, "", "build_dict"], [6, 2, 1, "", "build_float"], [6, 2, 1, "", "build_int"], [6, 2, 1, "", "build_list"], [6, 2, 1, "", "build_none"], [6, 2, 1, "", "build_set"], [6, 2, 1, "", "build_str"], [6, 2, 1, "", "build_tree"], [6, 2, 1, "", "builder"], [6, 2, 1, "", "default_builder"], [6, 2, 1, "", "default_expander"], [6, 2, 1, "", "expand"], [6, 2, 1, "", "expand_dict"], [6, 2, 1, "", "expand_list"], [6, 2, 1, "", "expander"], [6, 2, 1, "", "resolve_builder"], [6, 2, 1, "", "resolve_expander"]], "graphtage.builder.Builder": [[6, 3, 1, "", "BUILDERS"], [6, 3, 1, "", "EXPANDERS"], [6, 2, 1, "", "__init__"], [6, 2, 1, "", "_resolve"], [6, 2, 1, "", "build"], [6, 2, 1, "", "build_tree"], [6, 2, 1, "", "builder"], [6, 2, 1, "", "default_builder"], [6, 2, 1, "", "default_expander"], [6, 2, 1, "", "expand"], [6, 2, 1, "", "expander"], [6, 2, 1, "", "resolve_builder"], [6, 2, 1, "", "resolve_expander"]], "graphtage.builder.CyclicReference": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "add_edit_modifier"], [6, 2, 1, "", "calculate_total_size"], [6, 2, 1, "", "children"], [6, 2, 1, "", "copy"], [6, 2, 1, "", "copy_from"], [6, 2, 1, "", "dfs"], [6, 2, 1, "", "diff"], [6, 2, 1, "", "editable_dict"], [6, 4, 1, "", "edited"], [6, 2, 1, "", "edits"], [6, 2, 1, "", "get_all_edit_contexts"], [6, 2, 1, "", "get_all_edits"], [6, 4, 1, "", "is_leaf"], [6, 2, 1, "", "make_edited"], [6, 4, 1, "", "parent"], [6, 2, 1, "", "print"], [6, 2, 1, "", "print_parent_context"], [6, 2, 1, "", "to_obj"], [6, 4, 1, "", "total_size"]], "graphtage.constraints": [[7, 1, 1, "", "ConditionalMatcher"], [7, 1, 1, "", "MatchIf"], [7, 1, 1, "", "MatchUnless"]], "graphtage.constraints.ConditionalMatcher": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "apply"]], "graphtage.constraints.MatchIf": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "apply"]], "graphtage.constraints.MatchUnless": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "apply"]], "graphtage.csv": [[8, 1, 1, "", "CSV"], [8, 1, 1, "", "CSVFormatter"], [8, 1, 1, "", "CSVNode"], [8, 1, 1, "", "CSVRow"], [8, 1, 1, "", "CSVRowFormatter"], [8, 1, 1, "", "CSVRows"], [8, 5, 1, "", "build_tree"]], "graphtage.csv.CSV": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "build_tree"], [8, 2, 1, "", "build_tree_handling_errors"], [8, 3, 1, "", "default_instance"], [8, 2, 1, "", "get_default_formatter"]], "graphtage.csv.CSVFormatter": [[8, 3, 1, "", "DEFAULT_INSTANCE"], [8, 2, 1, "", "__init__"], [8, 2, 1, "", "__new__"], [8, 2, 1, "", "get_formatter"], [8, 3, 1, "", "is_partial"], [8, 3, 1, "", "parent"], [8, 2, 1, "", "print"], [8, 2, 1, "", "print_LeafNode"], [8, 4, 1, "", "root"], [8, 3, 1, "", "sub_format_types"], [8, 3, 1, "", "sub_formatters"]], "graphtage.csv.CSVNode": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "__iter__"], [8, 2, 1, "", "__len__"], [8, 2, 1, "", "add_edit_modifier"], [8, 2, 1, "", "all_children_are_leaves"], [8, 2, 1, "", "calculate_total_size"], [8, 2, 1, "", "children"], [8, 4, 1, "", "container_type"], [8, 2, 1, "", "copy"], [8, 2, 1, "", "copy_from"], [8, 2, 1, "", "dfs"], [8, 2, 1, "", "diff"], [8, 2, 1, "", "editable_dict"], [8, 4, 1, "", "edited"], [8, 2, 1, "", "edits"], [8, 2, 1, "", "get_all_edit_contexts"], [8, 2, 1, "", "get_all_edits"], [8, 4, 1, "", "is_leaf"], [8, 2, 1, "", "make_edited"], [8, 4, 1, "", "parent"], [8, 2, 1, "", "print"], [8, 2, 1, "", "print_parent_context"], [8, 2, 1, "", "to_obj"], [8, 4, 1, "", "total_size"]], "graphtage.csv.CSVRow": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "__iter__"], [8, 2, 1, "", "__len__"], [8, 2, 1, "", "add_edit_modifier"], [8, 2, 1, "", "all_children_are_leaves"], [8, 2, 1, "", "calculate_total_size"], [8, 2, 1, "", "children"], [8, 4, 1, "", "container_type"], [8, 2, 1, "", "copy"], [8, 2, 1, "", "copy_from"], [8, 2, 1, "", "dfs"], [8, 2, 1, "", "diff"], [8, 2, 1, "", "editable_dict"], [8, 4, 1, "", "edited"], [8, 2, 1, "", "edits"], [8, 2, 1, "", "get_all_edit_contexts"], [8, 2, 1, "", "get_all_edits"], [8, 4, 1, "", "is_leaf"], [8, 2, 1, "", "make_edited"], [8, 4, 1, "", "parent"], [8, 2, 1, "", "print"], [8, 2, 1, "", "print_parent_context"], [8, 2, 1, "", "to_obj"], [8, 4, 1, "", "total_size"]], "graphtage.csv.CSVRowFormatter": [[8, 3, 1, "", "DEFAULT_INSTANCE"], [8, 2, 1, "", "__init__"], [8, 2, 1, "", "__new__"], [8, 2, 1, "", "edit_print"], [8, 2, 1, "", "get_formatter"], [8, 3, 1, "", "is_partial"], [8, 2, 1, "", "item_newline"], [8, 2, 1, "", "items_indent"], [8, 3, 1, "", "parent"], [8, 2, 1, "", "print"], [8, 2, 1, "", "print_CSVRow"], [8, 2, 1, "", "print_SequenceNode"], [8, 4, 1, "", "root"], [8, 3, 1, "", "sub_format_types"], [8, 3, 1, "", "sub_formatters"]], "graphtage.csv.CSVRows": [[8, 3, 1, "", "DEFAULT_INSTANCE"], [8, 2, 1, "", "__init__"], [8, 2, 1, "", "__new__"], [8, 2, 1, "", "edit_print"], [8, 2, 1, "", "get_formatter"], [8, 3, 1, "", "is_partial"], [8, 2, 1, "", "item_newline"], [8, 2, 1, "", "items_indent"], [8, 3, 1, "", "parent"], [8, 2, 1, "", "print"], [8, 2, 1, "", "print_CSVNode"], [8, 2, 1, "", "print_SequenceNode"], [8, 4, 1, "", "root"], [8, 3, 1, "", "sub_format_types"], [8, 3, 1, "", "sub_formatters"]], "graphtage.dataclasses": [[9, 1, 1, "", "DataClassEdit"], [9, 1, 1, "", "DataClassNode"]], "graphtage.dataclasses.DataClassEdit": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__iter__"], [9, 2, 1, "", "__lt__"], [9, 2, 1, "", "_debug_tighten_bounds"], [9, 2, 1, "", "bounds"], [9, 2, 1, "", "edits"], [9, 3, 1, "", "from_node"], [9, 2, 1, "", "has_non_zero_cost"], [9, 3, 1, "", "initial_bounds"], [9, 2, 1, "", "is_complete"], [9, 2, 1, "", "on_diff"], [9, 2, 1, "", "print"], [9, 2, 1, "", "tighten_bounds"], [9, 4, 1, "", "valid"]], "graphtage.dataclasses.DataClassNode": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "add_edit_modifier"], [9, 2, 1, "", "all_children_are_leaves"], [9, 2, 1, "", "calculate_total_size"], [9, 2, 1, "", "children"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "copy_from"], [9, 2, 1, "", "dfs"], [9, 2, 1, "", "diff"], [9, 2, 1, "", "editable_dict"], [9, 4, 1, "", "edited"], [9, 2, 1, "", "edits"], [9, 2, 1, "", "get_all_edit_contexts"], [9, 2, 1, "", "get_all_edits"], [9, 4, 1, "", "is_leaf"], [9, 2, 1, "", "items"], [9, 2, 1, "", "make_edited"], [9, 4, 1, "", "parent"], [9, 2, 1, "", "post_init"], [9, 2, 1, "", "print"], [9, 2, 1, "", "print_parent_context"], [9, 2, 1, "", "to_obj"], [9, 4, 1, "", "total_size"]], "graphtage.debug": [[10, 1, 1, "", "Debuggable"]], "graphtage.debug.Debuggable": [[10, 2, 1, "", "__init__"]], "graphtage.expressions": [[11, 1, 1, "", "CloseBracket"], [11, 1, 1, "", "CloseParen"], [11, 1, 1, "", "CollectionInfo"], [11, 1, 1, "", "Comma"], [11, 3, 1, "", "DEFAULT_GLOBALS"], [11, 1, 1, "", "Expression"], [11, 1, 1, "", "FixedSizeCollection"], [11, 1, 1, "", "FloatToken"], [11, 1, 1, "", "FunctionCall"], [11, 3, 1, "", "IDENTIFIER_BYTES"], [11, 1, 1, "", "IdentifierToken"], [11, 1, 1, "", "IntegerToken"], [11, 1, 1, "", "NumericToken"], [11, 3, 1, "", "OPERATORS_BY_NAME"], [11, 1, 1, "", "OpenBracket"], [11, 1, 1, "", "OpenParen"], [11, 1, 1, "", "Operator"], [11, 1, 1, "", "OperatorToken"], [11, 1, 1, "", "PairedEndToken"], [11, 1, 1, "", "PairedStartToken"], [11, 1, 1, "", "PairedToken"], [11, 1, 1, "", "Parenthesis"], [11, 1, 1, "", "ParseError"], [11, 1, 1, "", "StringToken"], [11, 1, 1, "", "Token"], [11, 1, 1, "", "Tokenizer"], [11, 5, 1, "", "get_member"], [11, 5, 1, "", "infix_to_rpn"], [11, 5, 1, "", "parse"], [11, 5, 1, "", "tokenize"]], "graphtage.expressions.CloseBracket": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "name"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"], [11, 3, 1, "", "start_token_type"]], "graphtage.expressions.CloseParen": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "name"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"], [11, 3, 1, "", "start_token_type"]], "graphtage.expressions.CollectionInfo": [[11, 2, 1, "", "__init__"]], "graphtage.expressions.Comma": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"]], "graphtage.expressions.Expression": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "eval"], [11, 2, 1, "", "get_value"]], "graphtage.expressions.FixedSizeCollection": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "container_type"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"], [11, 3, 1, "", "size"]], "graphtage.expressions.FloatToken": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"], [11, 3, 1, "", "value"]], "graphtage.expressions.FunctionCall": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "offset"], [11, 3, 1, "", "op"], [11, 4, 1, "", "raw_token"]], "graphtage.expressions.IdentifierToken": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "name"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"]], "graphtage.expressions.IntegerToken": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"], [11, 3, 1, "", "value"]], "graphtage.expressions.NumericToken": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"], [11, 3, 1, "", "value"]], "graphtage.expressions.OpenBracket": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "discard"], [11, 3, 1, "", "is_list"], [11, 3, 1, "", "name"], [11, 3, 1, "", "offset"], [11, 3, 1, "", "op"], [11, 4, 1, "", "raw_token"]], "graphtage.expressions.OpenParen": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "discard"], [11, 3, 1, "", "name"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"]], "graphtage.expressions.Operator": [[11, 3, 1, "", "ADDITION"], [11, 3, 1, "", "BITWISE_AND"], [11, 3, 1, "", "BITWISE_LEFT_SHIFT"], [11, 3, 1, "", "BITWISE_NOT"], [11, 3, 1, "", "BITWISE_OR"], [11, 3, 1, "", "BITWISE_RIGHT_SHIFT"], [11, 3, 1, "", "BITWISE_XOR"], [11, 3, 1, "", "DIVISION"], [11, 3, 1, "", "EQUALS"], [11, 3, 1, "", "FUNCTION_CALL"], [11, 3, 1, "", "GETITEM"], [11, 3, 1, "", "GREATER_THAN"], [11, 3, 1, "", "GREATER_THAN_EQUAL"], [11, 3, 1, "", "IN"], [11, 3, 1, "", "INT_DIVISION"], [11, 3, 1, "", "LESS_THAN"], [11, 3, 1, "", "LESS_THAN_EQUAL"], [11, 3, 1, "", "LOGICAL_AND"], [11, 3, 1, "", "LOGICAL_NOT"], [11, 3, 1, "", "LOGICAL_OR"], [11, 3, 1, "", "MEMBER_ACCESS"], [11, 3, 1, "", "MULTIPLICATION"], [11, 3, 1, "", "NOT_EQUAL"], [11, 3, 1, "", "REMAINDER"], [11, 3, 1, "", "SUBTRACTION"], [11, 3, 1, "", "TERNARY_CONDITIONAL"], [11, 3, 1, "", "TERNARY_ELSE"], [11, 3, 1, "", "UNARY_MINUS"], [11, 3, 1, "", "UNARY_PLUS"], [11, 2, 1, "", "__init__"], [11, 3, 1, "", "arity"], [11, 3, 1, "", "execute"], [11, 3, 1, "", "expand"], [11, 3, 1, "", "left_associative"], [11, 3, 1, "", "priority"], [11, 3, 1, "", "token"]], "graphtage.expressions.OperatorToken": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "offset"], [11, 3, 1, "", "op"], [11, 4, 1, "", "raw_token"]], "graphtage.expressions.PairedEndToken": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "name"], [11, 3, 1, "", "start_token_type"]], "graphtage.expressions.PairedStartToken": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "discard"], [11, 3, 1, "", "name"]], "graphtage.expressions.PairedToken": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "name"]], "graphtage.expressions.Parenthesis": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"]], "graphtage.expressions.ParseError": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "args"], [11, 2, 1, "", "with_traceback"]], "graphtage.expressions.StringToken": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"]], "graphtage.expressions.Token": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "offset"], [11, 4, 1, "", "raw_token"]], "graphtage.expressions.Tokenizer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "__iter__"], [11, 2, 1, "", "has_next"], [11, 2, 1, "", "next"], [11, 2, 1, "", "peek"], [11, 3, 1, "", "prev_token"]], "graphtage.fibonacci": [[12, 1, 1, "", "FibonacciHeap"], [12, 1, 1, "", "HeapNode"], [12, 1, 1, "", "MaxFibonacciHeap"], [12, 1, 1, "", "ReversedComparator"]], "graphtage.fibonacci.FibonacciHeap": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "clear"], [12, 2, 1, "", "decrease_key"], [12, 3, 1, "", "key"], [12, 4, 1, "", "min_node"], [12, 2, 1, "", "nodes"], [12, 2, 1, "", "peek"], [12, 2, 1, "", "pop"], [12, 2, 1, "", "push"], [12, 2, 1, "", "remove"]], "graphtage.fibonacci.HeapNode": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "__iter__"], [12, 2, 1, "", "add_child"], [12, 3, 1, "", "child"], [12, 4, 1, "", "children"], [12, 3, 1, "", "degree"], [12, 3, 1, "", "deleted"], [12, 3, 1, "", "item"], [12, 3, 1, "", "key"], [12, 3, 1, "", "left"], [12, 3, 1, "", "mark"], [12, 3, 1, "", "parent"], [12, 2, 1, "", "remove_child"], [12, 3, 1, "", "right"], [12, 4, 1, "", "siblings"]], "graphtage.fibonacci.MaxFibonacciHeap": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "clear"], [12, 2, 1, "", "decrease_key"], [12, 3, 1, "", "key"], [12, 4, 1, "", "min_node"], [12, 2, 1, "", "nodes"], [12, 2, 1, "", "peek"], [12, 2, 1, "", "pop"], [12, 2, 1, "", "push"], [12, 2, 1, "", "remove"]], "graphtage.fibonacci.ReversedComparator": [[12, 2, 1, "", "__init__"]], "graphtage.formatter": [[13, 1, 1, "", "BasicFormatter"], [13, 1, 1, "", "Formatter"], [13, 1, 1, "", "FormatterChecker"], [13, 5, 1, "", "get_formatter"]], "graphtage.formatter.BasicFormatter": [[13, 3, 1, "", "DEFAULT_INSTANCE"], [13, 2, 1, "", "__init__"], [13, 2, 1, "", "__new__"], [13, 2, 1, "", "get_formatter"], [13, 3, 1, "", "is_partial"], [13, 3, 1, "", "parent"], [13, 2, 1, "", "print"], [13, 4, 1, "", "root"], [13, 3, 1, "", "sub_format_types"], [13, 3, 1, "", "sub_formatters"]], "graphtage.formatter.Formatter": [[13, 3, 1, "", "DEFAULT_INSTANCE"], [13, 2, 1, "", "__init__"], [13, 2, 1, "", "__new__"], [13, 2, 1, "", "get_formatter"], [13, 3, 1, "", "is_partial"], [13, 3, 1, "", "parent"], [13, 2, 1, "", "print"], [13, 4, 1, "", "root"], [13, 3, 1, "", "sub_format_types"], [13, 3, 1, "", "sub_formatters"]], "graphtage.formatter.FormatterChecker": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "__instancecheck__"], [13, 2, 1, "", "__subclasscheck__"], [13, 2, 1, "", "_abc_caches_clear"], [13, 2, 1, "", "_abc_registry_clear"], [13, 2, 1, "", "_dump_registry"], [13, 2, 1, "", "mro"], [13, 2, 1, "", "register"]], "graphtage.json": [[14, 1, 1, "", "JSON"], [14, 1, 1, "", "JSON5"], [14, 1, 1, "", "JSONDictFormatter"], [14, 1, 1, "", "JSONFormatter"], [14, 1, 1, "", "JSONListFormatter"], [14, 1, 1, "", "JSONStringFormatter"], [14, 5, 1, "", "build_tree"]], "graphtage.json.JSON": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "build_tree"], [14, 2, 1, "", "build_tree_handling_errors"], [14, 3, 1, "", "default_instance"], [14, 2, 1, "", "get_default_formatter"]], "graphtage.json.JSON5": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "build_tree"], [14, 2, 1, "", "build_tree_handling_errors"], [14, 3, 1, "", "default_instance"], [14, 2, 1, "", "get_default_formatter"]], "graphtage.json.JSONDictFormatter": [[14, 3, 1, "", "DEFAULT_INSTANCE"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 2, 1, "", "edit_print"], [14, 2, 1, "", "get_formatter"], [14, 3, 1, "", "is_partial"], [14, 2, 1, "", "item_newline"], [14, 2, 1, "", "items_indent"], [14, 3, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_MappingNode"], [14, 2, 1, "", "print_MultiSetNode"], [14, 2, 1, "", "print_SequenceNode"], [14, 4, 1, "", "root"], [14, 3, 1, "", "sub_format_types"], [14, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONFormatter": [[14, 3, 1, "", "DEFAULT_INSTANCE"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 2, 1, "", "get_formatter"], [14, 3, 1, "", "is_partial"], [14, 3, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_ContainerNode"], [14, 2, 1, "", "print_KeyValuePairNode"], [14, 2, 1, "", "print_LeafNode"], [14, 2, 1, "", "print_XMLElement"], [14, 4, 1, "", "root"], [14, 3, 1, "", "sub_format_types"], [14, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONListFormatter": [[14, 3, 1, "", "DEFAULT_INSTANCE"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 2, 1, "", "edit_print"], [14, 2, 1, "", "get_formatter"], [14, 3, 1, "", "is_partial"], [14, 2, 1, "", "item_newline"], [14, 2, 1, "", "items_indent"], [14, 3, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_ListNode"], [14, 2, 1, "", "print_SequenceNode"], [14, 4, 1, "", "root"], [14, 3, 1, "", "sub_format_types"], [14, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONStringFormatter": [[14, 3, 1, "", "DEFAULT_INSTANCE"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 2, 1, "", "context"], [14, 2, 1, "", "escape"], [14, 2, 1, "", "get_formatter"], [14, 3, 1, "", "is_partial"], [14, 3, 1, "", "is_quoted"], [14, 3, 1, "", "parent"], [14, 2, 1, "", "print"], [14, 2, 1, "", "print_StringEdit"], [14, 2, 1, "", "print_StringNode"], [14, 4, 1, "", "root"], [14, 3, 1, "", "sub_format_types"], [14, 3, 1, "", "sub_formatters"], [14, 2, 1, "", "write_char"], [14, 2, 1, "", "write_end_quote"], [14, 2, 1, "", "write_start_quote"]], "graphtage.levenshtein": [[15, 1, 1, "", "EditDistance"], [15, 5, 1, "", "levenshtein_distance"]], "graphtage.levenshtein.EditDistance": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__iter__"], [15, 2, 1, "", "__lt__"], [15, 2, 1, "", "_debug_tighten_bounds"], [15, 2, 1, "", "bounds"], [15, 2, 1, "", "edits"], [15, 3, 1, "", "from_node"], [15, 2, 1, "", "has_non_zero_cost"], [15, 3, 1, "", "initial_bounds"], [15, 2, 1, "", "is_complete"], [15, 2, 1, "", "on_diff"], [15, 2, 1, "", "print"], [15, 4, 1, "", "sequence"], [15, 2, 1, "", "tighten_bounds"], [15, 4, 1, "", "valid"]], "graphtage.matching": [[16, 1, 1, "", "Edge"], [16, 1, 1, "", "Matching"], [16, 1, 1, "", "MatchingFromNode"], [16, 1, 1, "", "MatchingNode"], [16, 1, 1, "", "MatchingToNode"], [16, 1, 1, "", "PathSet"], [16, 1, 1, "", "QueueElement"], [16, 1, 1, "", "SortedEdges"], [16, 1, 1, "", "WeightedBipartiteMatcher"], [16, 1, 1, "", "WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION"], [16, 5, 1, "", "get_dtype"], [16, 5, 1, "", "min_weight_bipartite_matching"]], "graphtage.matching.Edge": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "bounds"], [16, 4, 1, "", "cost_bar"], [16, 4, 1, "", "cost_star"], [16, 2, 1, "", "tighten_bounds"]], "graphtage.matching.Matching": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "_from_iterable"], [16, 2, 1, "", "_hash"], [16, 2, 1, "", "add"], [16, 2, 1, "", "bounds"], [16, 2, 1, "", "clear"], [16, 2, 1, "", "copy"], [16, 2, 1, "", "difference"], [16, 2, 1, "", "difference_update"], [16, 2, 1, "", "discard"], [16, 2, 1, "", "intersection"], [16, 2, 1, "", "intersection_update"], [16, 2, 1, "", "isdisjoint"], [16, 2, 1, "", "issubset"], [16, 2, 1, "", "issuperset"], [16, 2, 1, "", "pop"], [16, 2, 1, "", "remove"], [16, 2, 1, "", "symmetric_difference"], [16, 2, 1, "", "symmetric_difference_update"], [16, 2, 1, "", "tighten_bounds"], [16, 2, 1, "", "union"], [16, 2, 1, "", "update"]], "graphtage.matching.MatchingFromNode": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "construct_edges"], [16, 2, 1, "", "edges"], [16, 4, 1, "", "sorted_neighbors"]], "graphtage.matching.MatchingNode": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "construct_edges"], [16, 2, 1, "", "edges"]], "graphtage.matching.MatchingToNode": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "construct_edges"], [16, 2, 1, "", "edges"]], "graphtage.matching.PathSet": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "_from_iterable"], [16, 2, 1, "", "_hash"], [16, 2, 1, "", "add"], [16, 2, 1, "", "bounds"], [16, 2, 1, "", "clear"], [16, 2, 1, "", "copy"], [16, 2, 1, "", "difference"], [16, 2, 1, "", "difference_update"], [16, 2, 1, "", "discard"], [16, 2, 1, "", "intersection"], [16, 2, 1, "", "intersection_update"], [16, 2, 1, "", "isdisjoint"], [16, 2, 1, "", "issubset"], [16, 2, 1, "", "issuperset"], [16, 2, 1, "", "path_to"], [16, 2, 1, "", "pop"], [16, 2, 1, "", "remove"], [16, 2, 1, "", "symmetric_difference"], [16, 2, 1, "", "symmetric_difference_update"], [16, 2, 1, "", "tighten_bounds"], [16, 2, 1, "", "union"], [16, 2, 1, "", "update"]], "graphtage.matching.QueueElement": [[16, 2, 1, "", "__init__"]], "graphtage.matching.SortedEdges": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "head"], [16, 2, 1, "", "tail"]], "graphtage.matching.WeightedBipartiteMatcher": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "bounds"], [16, 4, 1, "", "edges"], [16, 2, 1, "", "is_complete"], [16, 4, 1, "", "matching"], [16, 2, 1, "", "tighten_bounds"]], "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "bounds"], [16, 2, 1, "", "free_destinations"], [16, 2, 1, "", "free_sources"], [16, 2, 1, "", "tighten_bounds"]], "graphtage.multiset": [[17, 1, 1, "", "MultiSetEdit"]], "graphtage.multiset.MultiSetEdit": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "__iter__"], [17, 2, 1, "", "__lt__"], [17, 2, 1, "", "_debug_tighten_bounds"], [17, 2, 1, "", "bounds"], [17, 2, 1, "", "edits"], [17, 3, 1, "", "from_node"], [17, 2, 1, "", "has_non_zero_cost"], [17, 3, 1, "", "initial_bounds"], [17, 2, 1, "", "is_complete"], [17, 2, 1, "", "on_diff"], [17, 2, 1, "", "print"], [17, 4, 1, "", "sequence"], [17, 2, 1, "", "tighten_bounds"], [17, 3, 1, "", "to_insert"], [17, 3, 1, "", "to_remove"], [17, 4, 1, "", "valid"]], "graphtage.object_set": [[18, 1, 1, "", "IdentityHash"], [18, 1, 1, "", "ObjectSet"]], "graphtage.object_set.IdentityHash": [[18, 2, 1, "", "__init__"]], "graphtage.object_set.ObjectSet": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "_from_iterable"], [18, 2, 1, "", "_hash"], [18, 2, 1, "", "add"], [18, 2, 1, "", "clear"], [18, 2, 1, "", "discard"], [18, 2, 1, "", "isdisjoint"], [18, 2, 1, "", "pop"], [18, 2, 1, "", "remove"]], "graphtage.pickle": [[19, 1, 1, "", "Pickle"]], "graphtage.pickle.Pickle": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "build_tree"], [19, 2, 1, "", "build_tree_handling_errors"], [19, 3, 1, "", "default_instance"], [19, 2, 1, "", "get_default_formatter"]], "graphtage.plist": [[20, 1, 1, "", "PLIST"], [20, 1, 1, "", "PLISTFormatter"], [20, 1, 1, "", "PLISTNode"], [20, 1, 1, "", "PLISTSequenceFormatter"], [20, 5, 1, "", "build_tree"]], "graphtage.plist.PLIST": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "build_tree"], [20, 2, 1, "", "build_tree_handling_errors"], [20, 3, 1, "", "default_instance"], [20, 2, 1, "", "get_default_formatter"]], "graphtage.plist.PLISTFormatter": [[20, 3, 1, "", "DEFAULT_INSTANCE"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__new__"], [20, 2, 1, "", "get_formatter"], [20, 3, 1, "", "is_partial"], [20, 3, 1, "", "parent"], [20, 2, 1, "", "print"], [20, 2, 1, "", "print_BoolNode"], [20, 2, 1, "", "print_FloatNode"], [20, 2, 1, "", "print_IntegerNode"], [20, 2, 1, "", "print_LeafNode"], [20, 2, 1, "", "print_PLISTNode"], [20, 2, 1, "", "print_StringNode"], [20, 4, 1, "", "root"], [20, 3, 1, "", "sub_format_types"], [20, 3, 1, "", "sub_formatters"], [20, 2, 1, "", "write_obj"]], "graphtage.plist.PLISTNode": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "add_edit_modifier"], [20, 2, 1, "", "all_children_are_leaves"], [20, 2, 1, "", "calculate_total_size"], [20, 2, 1, "", "children"], [20, 2, 1, "", "copy"], [20, 2, 1, "", "copy_from"], [20, 2, 1, "", "dfs"], [20, 2, 1, "", "diff"], [20, 2, 1, "", "editable_dict"], [20, 4, 1, "", "edited"], [20, 2, 1, "", "edits"], [20, 2, 1, "", "get_all_edit_contexts"], [20, 2, 1, "", "get_all_edits"], [20, 4, 1, "", "is_leaf"], [20, 2, 1, "", "make_edited"], [20, 4, 1, "", "parent"], [20, 2, 1, "", "print"], [20, 2, 1, "", "print_parent_context"], [20, 2, 1, "", "to_obj"], [20, 4, 1, "", "total_size"]], "graphtage.plist.PLISTSequenceFormatter": [[20, 3, 1, "", "DEFAULT_INSTANCE"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__new__"], [20, 2, 1, "", "edit_print"], [20, 2, 1, "", "get_formatter"], [20, 3, 1, "", "is_partial"], [20, 2, 1, "", "item_newline"], [20, 2, 1, "", "items_indent"], [20, 3, 1, "", "parent"], [20, 2, 1, "", "print"], [20, 2, 1, "", "print_KeyValuePairNode"], [20, 2, 1, "", "print_ListNode"], [20, 2, 1, "", "print_MappingNode"], [20, 2, 1, "", "print_MultiSetNode"], [20, 2, 1, "", "print_SequenceNode"], [20, 4, 1, "", "root"], [20, 3, 1, "", "sub_format_types"], [20, 3, 1, "", "sub_formatters"]], "graphtage.printer": [[21, 1, 1, "", "ANSIContext"], [21, 1, 1, "", "CombiningMarkContext"], [21, 1, 1, "", "CombiningMarkWriter"], [21, 3, 1, "", "DEFAULT_PRINTER"], [21, 1, 1, "", "HTMLANSIContext"], [21, 1, 1, "", "HTMLPrinter"], [21, 1, 1, "", "NullANSIContext"], [21, 1, 1, "", "NullWriter"], [21, 1, 1, "", "Printer"], [21, 1, 1, "", "RawWriter"], [21, 1, 1, "", "Writer"], [21, 5, 1, "", "only_ansi"]], "graphtage.printer.ANSIContext": [[21, 2, 1, "", "__init__"], [21, 4, 1, "", "back"], [21, 2, 1, "", "background"], [21, 2, 1, "", "bright"], [21, 2, 1, "", "color"], [21, 2, 1, "", "dim"], [21, 4, 1, "", "end_code"], [21, 4, 1, "", "fore"], [21, 3, 1, "", "is_applied"], [21, 4, 1, "", "parent"], [21, 4, 1, "", "root"], [21, 4, 1, "", "start_code"], [21, 4, 1, "", "style"]], "graphtage.printer.CombiningMarkContext": [[21, 2, 1, "", "__init__"]], "graphtage.printer.CombiningMarkWriter": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "add"], [21, 2, 1, "", "context"], [21, 3, 1, "", "enabled"], [21, 2, 1, "", "flush"], [21, 2, 1, "", "isatty"], [21, 4, 1, "", "marks"], [21, 4, 1, "", "marks_str"], [21, 3, 1, "", "parent"], [21, 2, 1, "", "raw_write"], [21, 2, 1, "", "remove"], [21, 2, 1, "", "write"]], "graphtage.printer.HTMLANSIContext": [[21, 2, 1, "", "__init__"], [21, 4, 1, "", "back"], [21, 2, 1, "", "background"], [21, 2, 1, "", "bright"], [21, 2, 1, "", "color"], [21, 2, 1, "", "dim"], [21, 4, 1, "", "end_code"], [21, 4, 1, "", "fore"], [21, 2, 1, "", "get_back"], [21, 2, 1, "", "get_fore"], [21, 3, 1, "", "is_applied"], [21, 4, 1, "", "parent"], [21, 4, 1, "", "root"], [21, 4, 1, "", "start_code"], [21, 3, 1, "", "stream"], [21, 4, 1, "", "style"]], "graphtage.printer.HTMLPrinter": [[21, 2, 1, "", "__init__"], [21, 4, 1, "", "ansi_color"], [21, 2, 1, "", "background"], [21, 2, 1, "", "bright"], [21, 2, 1, "", "close"], [21, 4, 1, "", "closed"], [21, 2, 1, "", "color"], [21, 2, 1, "", "context"], [21, 2, 1, "", "dim"], [21, 2, 1, "", "fileno"], [21, 2, 1, "", "flush"], [21, 2, 1, "", "html_element"], [21, 2, 1, "", "indent"], [21, 3, 1, "", "indent_str"], [21, 3, 1, "", "indents"], [21, 2, 1, "", "isatty"], [21, 4, 1, "", "mode"], [21, 4, 1, "", "name"], [21, 2, 1, "", "newline"], [21, 3, 1, "", "out_stream"], [21, 3, 1, "", "quiet"], [21, 2, 1, "", "raw_write"], [21, 2, 1, "", "read"], [21, 2, 1, "", "readable"], [21, 2, 1, "", "readline"], [21, 2, 1, "", "readlines"], [21, 2, 1, "", "seek"], [21, 2, 1, "", "seekable"], [21, 3, 1, "", "status_stream"], [21, 2, 1, "", "strike"], [21, 2, 1, "", "tell"], [21, 2, 1, "", "tqdm"], [21, 2, 1, "", "trange"], [21, 2, 1, "", "truncate"], [21, 2, 1, "", "under_plus"], [21, 2, 1, "", "writable"], [21, 2, 1, "", "write"], [21, 3, 1, "", "write_raw"], [21, 2, 1, "", "writelines"]], "graphtage.printer.NullANSIContext": [[21, 2, 1, "", "__init__"]], "graphtage.printer.NullWriter": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "flush"], [21, 2, 1, "", "isatty"], [21, 2, 1, "", "write"]], "graphtage.printer.Printer": [[21, 2, 1, "", "__init__"], [21, 4, 1, "", "ansi_color"], [21, 2, 1, "", "background"], [21, 2, 1, "", "bright"], [21, 2, 1, "", "close"], [21, 4, 1, "", "closed"], [21, 2, 1, "", "color"], [21, 2, 1, "", "context"], [21, 2, 1, "", "dim"], [21, 2, 1, "", "fileno"], [21, 2, 1, "", "flush"], [21, 2, 1, "", "indent"], [21, 3, 1, "", "indent_str"], [21, 3, 1, "", "indents"], [21, 2, 1, "", "isatty"], [21, 4, 1, "", "mode"], [21, 4, 1, "", "name"], [21, 2, 1, "", "newline"], [21, 3, 1, "", "out_stream"], [21, 3, 1, "", "quiet"], [21, 2, 1, "", "raw_write"], [21, 2, 1, "", "read"], [21, 2, 1, "", "readable"], [21, 2, 1, "", "readline"], [21, 2, 1, "", "readlines"], [21, 2, 1, "", "seek"], [21, 2, 1, "", "seekable"], [21, 3, 1, "", "status_stream"], [21, 2, 1, "", "strike"], [21, 2, 1, "", "tell"], [21, 2, 1, "", "tqdm"], [21, 2, 1, "", "trange"], [21, 2, 1, "", "truncate"], [21, 2, 1, "", "under_plus"], [21, 2, 1, "", "writable"], [21, 2, 1, "", "write"], [21, 3, 1, "", "write_raw"], [21, 2, 1, "", "writelines"]], "graphtage.printer.RawWriter": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "flush"], [21, 2, 1, "", "isatty"], [21, 2, 1, "", "raw_write"], [21, 2, 1, "", "write"]], "graphtage.printer.Writer": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "flush"], [21, 2, 1, "", "isatty"], [21, 2, 1, "", "write"]], "graphtage.progress": [[22, 1, 1, "", "StatusWriter"]], "graphtage.progress.StatusWriter": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "close"], [22, 4, 1, "", "closed"], [22, 2, 1, "", "fileno"], [22, 2, 1, "", "flush"], [22, 2, 1, "", "isatty"], [22, 4, 1, "", "mode"], [22, 4, 1, "", "name"], [22, 3, 1, "", "quiet"], [22, 2, 1, "", "read"], [22, 2, 1, "", "readable"], [22, 2, 1, "", "readline"], [22, 2, 1, "", "readlines"], [22, 2, 1, "", "seek"], [22, 2, 1, "", "seekable"], [22, 3, 1, "", "status_stream"], [22, 2, 1, "", "tell"], [22, 2, 1, "", "tqdm"], [22, 2, 1, "", "trange"], [22, 2, 1, "", "truncate"], [22, 2, 1, "", "writable"], [22, 2, 1, "", "write"], [22, 3, 1, "", "write_raw"], [22, 2, 1, "", "writelines"]], "graphtage.pydiff": [[23, 1, 1, "", "ASTBuilder"], [23, 1, 1, "", "PyAlias"], [23, 1, 1, "", "PyDictFormatter"], [23, 1, 1, "", "PyDiffFormatter"], [23, 1, 1, "", "PyImportFormatter"], [23, 1, 1, "", "PyListFormatter"], [23, 1, 1, "", "PyModuleFormatter"], [23, 1, 1, "", "PyObj"], [23, 1, 1, "", "PyObjAttribute"], [23, 1, 1, "", "PyObjAttributes"], [23, 1, 1, "", "PyObjBuilder"], [23, 1, 1, "", "PyObjEdit"], [23, 1, 1, "", "PyObjFixedAttributes"], [23, 1, 1, "", "PyObjFormatter"], [23, 5, 1, "", "ast_to_tree"], [23, 5, 1, "", "build_tree"], [23, 5, 1, "", "diff"], [23, 5, 1, "", "print_diff"]], "graphtage.pydiff.ASTBuilder": [[23, 3, 1, "", "BUILDERS"], [23, 3, 1, "", "EXPANDERS"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "_resolve"], [23, 2, 1, "", "build"], [23, 2, 1, "", "build_alias"], [23, 2, 1, "", "build_assign"], [23, 2, 1, "", "build_ast_dict"], [23, 2, 1, "", "build_ast_list"], [23, 2, 1, "", "build_attribute"], [23, 2, 1, "", "build_bool"], [23, 2, 1, "", "build_call"], [23, 2, 1, "", "build_constant"], [23, 2, 1, "", "build_dict"], [23, 2, 1, "", "build_float"], [23, 2, 1, "", "build_import_from"], [23, 2, 1, "", "build_int"], [23, 2, 1, "", "build_list"], [23, 2, 1, "", "build_module"], [23, 2, 1, "", "build_name"], [23, 2, 1, "", "build_none"], [23, 2, 1, "", "build_set"], [23, 2, 1, "", "build_str"], [23, 2, 1, "", "build_subscript"], [23, 2, 1, "", "build_tree"], [23, 2, 1, "", "builder"], [23, 2, 1, "", "default_builder"], [23, 2, 1, "", "default_expander"], [23, 2, 1, "", "expand"], [23, 2, 1, "", "expand_assign"], [23, 2, 1, "", "expand_ast_dict"], [23, 2, 1, "", "expand_call"], [23, 2, 1, "", "expand_collection"], [23, 2, 1, "", "expand_constant"], [23, 2, 1, "", "expand_dict"], [23, 2, 1, "", "expand_import_from"], [23, 2, 1, "", "expand_list"], [23, 2, 1, "", "expand_module"], [23, 2, 1, "", "expand_subscript"], [23, 2, 1, "", "expander"], [23, 3, 1, "", "options"], [23, 2, 1, "", "resolve_builder"], [23, 2, 1, "", "resolve_expander"]], "graphtage.pydiff.PyAlias": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "add_edit_modifier"], [23, 2, 1, "", "all_children_are_leaves"], [23, 3, 1, "", "as_name"], [23, 2, 1, "", "calculate_total_size"], [23, 2, 1, "", "children"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "copy_from"], [23, 2, 1, "", "dfs"], [23, 2, 1, "", "diff"], [23, 2, 1, "", "editable_dict"], [23, 4, 1, "", "edited"], [23, 2, 1, "", "edits"], [23, 2, 1, "", "get_all_edit_contexts"], [23, 2, 1, "", "get_all_edits"], [23, 4, 1, "", "is_leaf"], [23, 2, 1, "", "items"], [23, 2, 1, "", "make_edited"], [23, 3, 1, "", "name"], [23, 4, 1, "", "parent"], [23, 2, 1, "", "post_init"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_parent_context"], [23, 2, 1, "", "to_obj"], [23, 4, 1, "", "total_size"]], "graphtage.pydiff.PyDictFormatter": [[23, 3, 1, "", "DEFAULT_INSTANCE"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__new__"], [23, 3, 1, "", "delimiter_callback"], [23, 2, 1, "", "edit_print"], [23, 2, 1, "", "get_formatter"], [23, 3, 1, "", "is_partial"], [23, 2, 1, "", "item_newline"], [23, 2, 1, "", "items_indent"], [23, 3, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_MappingNode"], [23, 2, 1, "", "print_MultiSetNode"], [23, 2, 1, "", "print_SequenceNode"], [23, 4, 1, "", "root"], [23, 3, 1, "", "sub_format_types"], [23, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyDiffFormatter": [[23, 3, 1, "", "DEFAULT_INSTANCE"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__new__"], [23, 2, 1, "", "get_formatter"], [23, 3, 1, "", "is_partial"], [23, 3, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_PyAlias"], [23, 2, 1, "", "print_Subscript"], [23, 4, 1, "", "root"], [23, 3, 1, "", "sub_format_types"], [23, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyImportFormatter": [[23, 3, 1, "", "DEFAULT_INSTANCE"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__new__"], [23, 2, 1, "", "edit_print"], [23, 2, 1, "", "get_formatter"], [23, 3, 1, "", "is_partial"], [23, 2, 1, "", "item_newline"], [23, 2, 1, "", "items_indent"], [23, 3, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_Assignment"], [23, 2, 1, "", "print_Import"], [23, 2, 1, "", "print_SequenceNode"], [23, 4, 1, "", "root"], [23, 3, 1, "", "sub_format_types"], [23, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyListFormatter": [[23, 3, 1, "", "DEFAULT_INSTANCE"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__new__"], [23, 3, 1, "", "delimiter_callback"], [23, 2, 1, "", "edit_print"], [23, 2, 1, "", "get_formatter"], [23, 3, 1, "", "is_partial"], [23, 2, 1, "", "item_newline"], [23, 2, 1, "", "items_indent"], [23, 3, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_ListNode"], [23, 2, 1, "", "print_SequenceNode"], [23, 4, 1, "", "root"], [23, 3, 1, "", "sub_format_types"], [23, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyModuleFormatter": [[23, 3, 1, "", "DEFAULT_INSTANCE"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__new__"], [23, 2, 1, "", "edit_print"], [23, 2, 1, "", "get_formatter"], [23, 3, 1, "", "is_partial"], [23, 2, 1, "", "item_newline"], [23, 2, 1, "", "items_indent"], [23, 3, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_Module"], [23, 2, 1, "", "print_SequenceNode"], [23, 4, 1, "", "root"], [23, 3, 1, "", "sub_format_types"], [23, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyObj": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "add_edit_modifier"], [23, 2, 1, "", "all_children_are_leaves"], [23, 2, 1, "", "calculate_total_size"], [23, 2, 1, "", "children"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "copy_from"], [23, 2, 1, "", "dfs"], [23, 2, 1, "", "diff"], [23, 2, 1, "", "editable_dict"], [23, 4, 1, "", "edited"], [23, 2, 1, "", "edits"], [23, 2, 1, "", "get_all_edit_contexts"], [23, 2, 1, "", "get_all_edits"], [23, 4, 1, "", "is_leaf"], [23, 2, 1, "", "make_edited"], [23, 4, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_parent_context"], [23, 2, 1, "", "to_obj"], [23, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjAttribute": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "add_edit_modifier"], [23, 2, 1, "", "all_children_are_leaves"], [23, 3, 1, "", "attr"], [23, 2, 1, "", "calculate_total_size"], [23, 2, 1, "", "children"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "copy_from"], [23, 2, 1, "", "dfs"], [23, 2, 1, "", "diff"], [23, 2, 1, "", "editable_dict"], [23, 4, 1, "", "edited"], [23, 2, 1, "", "edits"], [23, 2, 1, "", "get_all_edit_contexts"], [23, 2, 1, "", "get_all_edits"], [23, 4, 1, "", "is_leaf"], [23, 2, 1, "", "items"], [23, 2, 1, "", "make_edited"], [23, 3, 1, "", "object"], [23, 4, 1, "", "parent"], [23, 2, 1, "", "post_init"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_parent_context"], [23, 2, 1, "", "to_obj"], [23, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjAttributes": [[23, 2, 1, "", "__contains__"], [23, 2, 1, "", "__getitem__"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "add_edit_modifier"], [23, 2, 1, "", "all_children_are_leaves"], [23, 2, 1, "", "calculate_total_size"], [23, 2, 1, "", "children"], [23, 4, 1, "", "container_type"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "copy_from"], [23, 2, 1, "", "dfs"], [23, 2, 1, "", "diff"], [23, 2, 1, "", "editable_dict"], [23, 4, 1, "", "edited"], [23, 2, 1, "", "edits"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "get_all_edit_contexts"], [23, 2, 1, "", "get_all_edits"], [23, 4, 1, "", "is_leaf"], [23, 2, 1, "", "items"], [23, 2, 1, "", "make_edited"], [23, 2, 1, "", "make_key_value_pair_node"], [23, 4, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_parent_context"], [23, 2, 1, "", "to_obj"], [23, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjBuilder": [[23, 3, 1, "", "BUILDERS"], [23, 3, 1, "", "EXPANDERS"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "_resolve"], [23, 2, 1, "", "build"], [23, 2, 1, "", "build_bool"], [23, 2, 1, "", "build_dict"], [23, 2, 1, "", "build_float"], [23, 2, 1, "", "build_int"], [23, 2, 1, "", "build_list"], [23, 2, 1, "", "build_none"], [23, 2, 1, "", "build_set"], [23, 2, 1, "", "build_str"], [23, 2, 1, "", "build_tree"], [23, 2, 1, "", "builder"], [23, 2, 1, "", "default_builder"], [23, 2, 1, "", "default_expander"], [23, 2, 1, "", "expand"], [23, 2, 1, "", "expand_dict"], [23, 2, 1, "", "expand_list"], [23, 2, 1, "", "expander"], [23, 3, 1, "", "options"], [23, 2, 1, "", "resolve_builder"], [23, 2, 1, "", "resolve_expander"]], "graphtage.pydiff.PyObjEdit": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "__iter__"], [23, 2, 1, "", "__lt__"], [23, 2, 1, "", "_debug_tighten_bounds"], [23, 2, 1, "", "bounds"], [23, 2, 1, "", "edits"], [23, 3, 1, "", "from_node"], [23, 2, 1, "", "has_non_zero_cost"], [23, 3, 1, "", "initial_bounds"], [23, 2, 1, "", "is_complete"], [23, 2, 1, "", "on_diff"], [23, 2, 1, "", "print"], [23, 2, 1, "", "tighten_bounds"], [23, 4, 1, "", "valid"]], "graphtage.pydiff.PyObjFixedAttributes": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "__len__"], [23, 2, 1, "", "add_edit_modifier"], [23, 2, 1, "", "all_children_are_leaves"], [23, 2, 1, "", "calculate_total_size"], [23, 2, 1, "", "children"], [23, 4, 1, "", "container_type"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "copy_from"], [23, 2, 1, "", "dfs"], [23, 2, 1, "", "diff"], [23, 2, 1, "", "editable_dict"], [23, 4, 1, "", "edited"], [23, 2, 1, "", "edits"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "get_all_edit_contexts"], [23, 2, 1, "", "get_all_edits"], [23, 4, 1, "", "is_leaf"], [23, 2, 1, "", "items"], [23, 2, 1, "", "make_edited"], [23, 2, 1, "", "make_key_value_pair_node"], [23, 4, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_parent_context"], [23, 2, 1, "", "to_obj"], [23, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjFormatter": [[23, 3, 1, "", "DEFAULT_INSTANCE"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__new__"], [23, 2, 1, "", "edit_print"], [23, 2, 1, "", "get_formatter"], [23, 3, 1, "", "is_partial"], [23, 2, 1, "", "item_newline"], [23, 2, 1, "", "items_indent"], [23, 3, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_Call"], [23, 2, 1, "", "print_CallArguments"], [23, 2, 1, "", "print_KeywordArgument"], [23, 2, 1, "", "print_PyObj"], [23, 2, 1, "", "print_PyObjAttribute"], [23, 2, 1, "", "print_PyObjAttributes"], [23, 2, 1, "", "print_PyObjFixedAttributes"], [23, 2, 1, "", "print_SequenceNode"], [23, 4, 1, "", "root"], [23, 3, 1, "", "sub_format_types"], [23, 3, 1, "", "sub_formatters"]], "graphtage.search": [[24, 1, 1, "", "IterativeTighteningSearch"]], "graphtage.search.IterativeTighteningSearch": [[24, 2, 1, "", "__bool__"], [24, 2, 1, "", "__init__"], [24, 4, 1, "", "best_match"], [24, 2, 1, "", "bounds"], [24, 2, 1, "", "goal_test"], [24, 2, 1, "", "remove_best"], [24, 2, 1, "", "search"], [24, 2, 1, "", "tighten_bounds"]], "graphtage.sequences": [[25, 1, 1, "", "FixedLengthSequenceEdit"], [25, 1, 1, "", "SequenceEdit"], [25, 1, 1, "", "SequenceFormatter"], [25, 1, 1, "", "SequenceNode"]], "graphtage.sequences.FixedLengthSequenceEdit": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__iter__"], [25, 2, 1, "", "__lt__"], [25, 2, 1, "", "_debug_tighten_bounds"], [25, 2, 1, "", "bounds"], [25, 2, 1, "", "edits"], [25, 3, 1, "", "from_node"], [25, 2, 1, "", "has_non_zero_cost"], [25, 3, 1, "", "initial_bounds"], [25, 2, 1, "", "is_complete"], [25, 2, 1, "", "on_diff"], [25, 2, 1, "", "print"], [25, 4, 1, "", "sequence"], [25, 2, 1, "", "tighten_bounds"], [25, 4, 1, "", "valid"]], "graphtage.sequences.SequenceEdit": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__iter__"], [25, 2, 1, "", "__lt__"], [25, 2, 1, "", "_debug_tighten_bounds"], [25, 2, 1, "", "bounds"], [25, 2, 1, "", "edits"], [25, 3, 1, "", "from_node"], [25, 2, 1, "", "has_non_zero_cost"], [25, 3, 1, "", "initial_bounds"], [25, 2, 1, "", "is_complete"], [25, 2, 1, "", "on_diff"], [25, 2, 1, "", "print"], [25, 4, 1, "", "sequence"], [25, 2, 1, "", "tighten_bounds"], [25, 4, 1, "", "valid"]], "graphtage.sequences.SequenceFormatter": [[25, 3, 1, "", "DEFAULT_INSTANCE"], [25, 2, 1, "", "__init__"], [25, 2, 1, "", "__new__"], [25, 2, 1, "", "edit_print"], [25, 2, 1, "", "get_formatter"], [25, 3, 1, "", "is_partial"], [25, 2, 1, "", "item_newline"], [25, 2, 1, "", "items_indent"], [25, 3, 1, "", "parent"], [25, 2, 1, "", "print"], [25, 2, 1, "", "print_SequenceNode"], [25, 4, 1, "", "root"], [25, 3, 1, "", "sub_format_types"], [25, 3, 1, "", "sub_formatters"]], "graphtage.sequences.SequenceNode": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__iter__"], [25, 2, 1, "", "__len__"], [25, 2, 1, "", "add_edit_modifier"], [25, 2, 1, "", "all_children_are_leaves"], [25, 2, 1, "", "calculate_total_size"], [25, 2, 1, "", "children"], [25, 4, 1, "", "container_type"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "copy_from"], [25, 2, 1, "", "dfs"], [25, 2, 1, "", "diff"], [25, 2, 1, "", "editable_dict"], [25, 4, 1, "", "edited"], [25, 2, 1, "", "edits"], [25, 2, 1, "", "get_all_edit_contexts"], [25, 2, 1, "", "get_all_edits"], [25, 4, 1, "", "is_leaf"], [25, 2, 1, "", "make_edited"], [25, 4, 1, "", "parent"], [25, 2, 1, "", "print"], [25, 2, 1, "", "print_parent_context"], [25, 2, 1, "", "to_obj"], [25, 4, 1, "", "total_size"]], "graphtage.utils": [[26, 1, 1, "", "HashableCounter"], [26, 1, 1, "", "OrderedCounter"], [26, 1, 1, "", "Sized"], [26, 1, 1, "", "SparseMatrix"], [26, 1, 1, "", "Tempfile"], [26, 5, 1, "", "getsizeof"], [26, 5, 1, "", "largest"], [26, 5, 1, "", "smallest"]], "graphtage.utils.HashableCounter": [[26, 2, 1, "", "__add__"], [26, 2, 1, "", "__and__"], [26, 2, 1, "", "__delitem__"], [26, 2, 1, "", "__iadd__"], [26, 2, 1, "", "__iand__"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__ior__"], [26, 2, 1, "", "__isub__"], [26, 2, 1, "", "__missing__"], [26, 2, 1, "", "__neg__"], [26, 2, 1, "", "__or__"], [26, 2, 1, "", "__pos__"], [26, 2, 1, "", "__sub__"], [26, 2, 1, "", "_keep_positive"], [26, 2, 1, "", "clear"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "elements"], [26, 2, 1, "", "fromkeys"], [26, 2, 1, "", "get"], [26, 2, 1, "", "items"], [26, 2, 1, "", "keys"], [26, 2, 1, "", "most_common"], [26, 2, 1, "", "pop"], [26, 2, 1, "", "popitem"], [26, 2, 1, "", "setdefault"], [26, 2, 1, "", "subtract"], [26, 2, 1, "", "update"], [26, 2, 1, "", "values"]], "graphtage.utils.OrderedCounter": [[26, 2, 1, "", "__add__"], [26, 2, 1, "", "__and__"], [26, 2, 1, "", "__delitem__"], [26, 2, 1, "", "__iadd__"], [26, 2, 1, "", "__iand__"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__ior__"], [26, 2, 1, "", "__isub__"], [26, 2, 1, "", "__missing__"], [26, 2, 1, "", "__neg__"], [26, 2, 1, "", "__or__"], [26, 2, 1, "", "__pos__"], [26, 2, 1, "", "__sub__"], [26, 2, 1, "", "_keep_positive"], [26, 2, 1, "", "clear"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "elements"], [26, 2, 1, "", "fromkeys"], [26, 2, 1, "", "get"], [26, 2, 1, "", "items"], [26, 2, 1, "", "keys"], [26, 2, 1, "", "most_common"], [26, 2, 1, "", "move_to_end"], [26, 2, 1, "", "pop"], [26, 2, 1, "", "popitem"], [26, 2, 1, "", "setdefault"], [26, 2, 1, "", "subtract"], [26, 2, 1, "", "update"], [26, 2, 1, "", "values"]], "graphtage.utils.Sized": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "getsizeof"]], "graphtage.utils.SparseMatrix": [[26, 1, 1, "", "SparseMatrixRow"], [26, 2, 1, "", "__getitem__"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__len__"], [26, 2, 1, "", "clear"], [26, 3, 1, "", "default_value"], [26, 2, 1, "", "get"], [26, 2, 1, "", "getsizeof"], [26, 2, 1, "", "items"], [26, 2, 1, "", "keys"], [26, 3, 1, "", "num_cols"], [26, 2, 1, "", "num_filled_elements"], [26, 3, 1, "", "num_rows"], [26, 3, 1, "", "rows"], [26, 2, 1, "", "shape"], [26, 2, 1, "", "values"]], "graphtage.utils.SparseMatrix.SparseMatrixRow": [[26, 2, 1, "", "__getitem__"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__iter__"], [26, 2, 1, "", "__len__"], [26, 2, 1, "", "clear"], [26, 3, 1, "", "default_value"], [26, 2, 1, "", "get"], [26, 2, 1, "", "getsizeof"], [26, 2, 1, "", "items"], [26, 2, 1, "", "keys"], [26, 3, 1, "", "num_cols"], [26, 2, 1, "", "pop"], [26, 2, 1, "", "popitem"], [26, 3, 1, "", "row"], [26, 3, 1, "", "row_num"], [26, 2, 1, "", "setdefault"], [26, 2, 1, "", "shape"], [26, 2, 1, "", "update"], [26, 2, 1, "", "values"]], "graphtage.utils.Tempfile": [[26, 2, 1, "", "__enter__"], [26, 2, 1, "", "__exit__"], [26, 2, 1, "", "__init__"]], "graphtage.version": [[27, 3, 1, "", "DEV_BUILD"], [27, 3, 1, "", "VERSION_STRING"], [27, 3, 1, "", "__version__"], [27, 5, 1, "", "git_branch"]], "graphtage.xml": [[28, 1, 1, "", "HTML"], [28, 1, 1, "", "XML"], [28, 1, 1, "", "XMLChildFormatter"], [28, 1, 1, "", "XMLElement"], [28, 1, 1, "", "XMLElementAttribFormatter"], [28, 1, 1, "", "XMLElementChildren"], [28, 1, 1, "", "XMLElementEdit"], [28, 1, 1, "", "XMLElementObj"], [28, 1, 1, "", "XMLFormatter"], [28, 1, 1, "", "XMLStringFormatter"], [28, 5, 1, "", "build_tree"]], "graphtage.xml.HTML": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "build_tree"], [28, 2, 1, "", "build_tree_handling_errors"], [28, 3, 1, "", "default_instance"], [28, 2, 1, "", "get_default_formatter"]], "graphtage.xml.XML": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "build_tree"], [28, 2, 1, "", "build_tree_handling_errors"], [28, 3, 1, "", "default_instance"], [28, 2, 1, "", "get_default_formatter"]], "graphtage.xml.XMLChildFormatter": [[28, 3, 1, "", "DEFAULT_INSTANCE"], [28, 2, 1, "", "__init__"], [28, 2, 1, "", "__new__"], [28, 3, 1, "", "delimiter_callback"], [28, 2, 1, "", "edit_print"], [28, 2, 1, "", "get_formatter"], [28, 3, 1, "", "is_partial"], [28, 2, 1, "", "item_newline"], [28, 2, 1, "", "items_indent"], [28, 3, 1, "", "parent"], [28, 2, 1, "", "print"], [28, 2, 1, "", "print_ListNode"], [28, 2, 1, "", "print_SequenceNode"], [28, 4, 1, "", "root"], [28, 3, 1, "", "sub_format_types"], [28, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLElement": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "add_edit_modifier"], [28, 2, 1, "", "all_children_are_leaves"], [28, 2, 1, "", "calculate_total_size"], [28, 2, 1, "", "children"], [28, 2, 1, "", "copy"], [28, 2, 1, "", "copy_from"], [28, 2, 1, "", "dfs"], [28, 2, 1, "", "diff"], [28, 2, 1, "", "editable_dict"], [28, 4, 1, "", "edited"], [28, 2, 1, "", "edits"], [28, 2, 1, "", "get_all_edit_contexts"], [28, 2, 1, "", "get_all_edits"], [28, 4, 1, "", "is_leaf"], [28, 2, 1, "", "make_edited"], [28, 4, 1, "", "parent"], [28, 2, 1, "", "print"], [28, 2, 1, "", "print_parent_context"], [28, 3, 1, "", "tag"], [28, 3, 1, "", "text"], [28, 2, 1, "", "to_obj"], [28, 4, 1, "", "total_size"]], "graphtage.xml.XMLElementAttribFormatter": [[28, 3, 1, "", "DEFAULT_INSTANCE"], [28, 2, 1, "", "__init__"], [28, 2, 1, "", "__new__"], [28, 3, 1, "", "delimiter_callback"], [28, 2, 1, "", "edit_print"], [28, 2, 1, "", "get_formatter"], [28, 3, 1, "", "is_partial"], [28, 2, 1, "", "item_newline"], [28, 2, 1, "", "items_indent"], [28, 3, 1, "", "parent"], [28, 2, 1, "", "print"], [28, 2, 1, "", "print_KeyValuePairNode"], [28, 2, 1, "", "print_MappingNode"], [28, 2, 1, "", "print_MultiSetNode"], [28, 2, 1, "", "print_SequenceNode"], [28, 4, 1, "", "root"], [28, 3, 1, "", "sub_format_types"], [28, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLElementChildren": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__iter__"], [28, 2, 1, "", "__len__"], [28, 2, 1, "", "add_edit_modifier"], [28, 2, 1, "", "all_children_are_leaves"], [28, 2, 1, "", "calculate_total_size"], [28, 2, 1, "", "children"], [28, 4, 1, "", "container_type"], [28, 2, 1, "", "copy"], [28, 2, 1, "", "copy_from"], [28, 2, 1, "", "dfs"], [28, 2, 1, "", "diff"], [28, 2, 1, "", "editable_dict"], [28, 4, 1, "", "edited"], [28, 2, 1, "", "edits"], [28, 2, 1, "", "get_all_edit_contexts"], [28, 2, 1, "", "get_all_edits"], [28, 4, 1, "", "is_leaf"], [28, 2, 1, "", "make_edited"], [28, 4, 1, "", "parent"], [28, 2, 1, "", "print"], [28, 2, 1, "", "print_parent_context"], [28, 2, 1, "", "to_obj"], [28, 4, 1, "", "total_size"]], "graphtage.xml.XMLElementEdit": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "__iter__"], [28, 2, 1, "", "__lt__"], [28, 2, 1, "", "_debug_tighten_bounds"], [28, 3, 1, "", "attrib_edit"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "child_edit"], [28, 2, 1, "", "edits"], [28, 3, 1, "", "from_node"], [28, 2, 1, "", "has_non_zero_cost"], [28, 3, 1, "", "initial_bounds"], [28, 2, 1, "", "is_complete"], [28, 2, 1, "", "on_diff"], [28, 2, 1, "", "print"], [28, 3, 1, "", "tag_edit"], [28, 3, 1, "", "text_edit"], [28, 2, 1, "", "tighten_bounds"], [28, 4, 1, "", "valid"]], "graphtage.xml.XMLElementObj": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "attrib"], [28, 3, 1, "", "children"], [28, 3, 1, "", "tag"], [28, 3, 1, "", "text"]], "graphtage.xml.XMLFormatter": [[28, 3, 1, "", "DEFAULT_INSTANCE"], [28, 2, 1, "", "__init__"], [28, 2, 1, "", "__new__"], [28, 2, 1, "", "get_formatter"], [28, 3, 1, "", "is_partial"], [28, 3, 1, "", "parent"], [28, 2, 1, "", "print"], [28, 2, 1, "", "print_LeafNode"], [28, 2, 1, "", "print_XMLElement"], [28, 4, 1, "", "root"], [28, 3, 1, "", "sub_format_types"], [28, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLStringFormatter": [[28, 3, 1, "", "DEFAULT_INSTANCE"], [28, 2, 1, "", "__init__"], [28, 2, 1, "", "__new__"], [28, 2, 1, "", "context"], [28, 2, 1, "", "escape"], [28, 2, 1, "", "get_formatter"], [28, 3, 1, "", "is_partial"], [28, 3, 1, "", "is_quoted"], [28, 3, 1, "", "parent"], [28, 2, 1, "", "print"], [28, 2, 1, "", "print_StringEdit"], [28, 2, 1, "", "print_StringNode"], [28, 4, 1, "", "root"], [28, 3, 1, "", "sub_format_types"], [28, 3, 1, "", "sub_formatters"], [28, 2, 1, "", "write_char"], [28, 2, 1, "", "write_end_quote"], [28, 2, 1, "", "write_start_quote"]], "graphtage.yaml": [[29, 1, 1, "", "YAML"], [29, 1, 1, "", "YAMLDictFormatter"], [29, 1, 1, "", "YAMLFormatter"], [29, 1, 1, "", "YAMLKeyValuePairFormatter"], [29, 1, 1, "", "YAMLListFormatter"], [29, 1, 1, "", "YAMLStringFormatter"], [29, 5, 1, "", "build_tree"]], "graphtage.yaml.YAML": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "build_tree"], [29, 2, 1, "", "build_tree_handling_errors"], [29, 3, 1, "", "default_instance"], [29, 2, 1, "", "get_default_formatter"]], "graphtage.yaml.YAMLDictFormatter": [[29, 3, 1, "", "DEFAULT_INSTANCE"], [29, 2, 1, "", "__init__"], [29, 2, 1, "", "__new__"], [29, 3, 1, "", "delimiter_callback"], [29, 2, 1, "", "edit_print"], [29, 2, 1, "", "get_formatter"], [29, 3, 1, "", "is_partial"], [29, 2, 1, "", "item_newline"], [29, 2, 1, "", "items_indent"], [29, 3, 1, "", "parent"], [29, 2, 1, "", "print"], [29, 2, 1, "", "print_MappingNode"], [29, 2, 1, "", "print_MultiSetNode"], [29, 2, 1, "", "print_SequenceNode"], [29, 4, 1, "", "root"], [29, 3, 1, "", "sub_format_types"], [29, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLFormatter": [[29, 3, 1, "", "DEFAULT_INSTANCE"], [29, 2, 1, "", "__init__"], [29, 2, 1, "", "__new__"], [29, 2, 1, "", "get_formatter"], [29, 3, 1, "", "is_partial"], [29, 3, 1, "", "parent"], [29, 2, 1, "", "print"], [29, 2, 1, "", "print_ContainerNode"], [29, 2, 1, "", "print_LeafNode"], [29, 4, 1, "", "root"], [29, 3, 1, "", "sub_format_types"], [29, 3, 1, "", "sub_formatters"], [29, 2, 1, "", "write_obj"]], "graphtage.yaml.YAMLKeyValuePairFormatter": [[29, 3, 1, "", "DEFAULT_INSTANCE"], [29, 2, 1, "", "__init__"], [29, 2, 1, "", "__new__"], [29, 2, 1, "", "get_formatter"], [29, 3, 1, "", "is_partial"], [29, 3, 1, "", "parent"], [29, 2, 1, "", "print"], [29, 2, 1, "", "print_KeyValuePairNode"], [29, 4, 1, "", "root"], [29, 3, 1, "", "sub_format_types"], [29, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLListFormatter": [[29, 3, 1, "", "DEFAULT_INSTANCE"], [29, 2, 1, "", "__init__"], [29, 2, 1, "", "__new__"], [29, 3, 1, "", "delimiter_callback"], [29, 2, 1, "", "edit_print"], [29, 2, 1, "", "get_formatter"], [29, 3, 1, "", "is_partial"], [29, 2, 1, "", "item_newline"], [29, 2, 1, "", "items_indent"], [29, 3, 1, "", "parent"], [29, 2, 1, "", "print"], [29, 2, 1, "", "print_ListNode"], [29, 2, 1, "", "print_SequenceNode"], [29, 4, 1, "", "root"], [29, 3, 1, "", "sub_format_types"], [29, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLStringFormatter": [[29, 3, 1, "", "DEFAULT_INSTANCE"], [29, 2, 1, "", "__init__"], [29, 2, 1, "", "__new__"], [29, 2, 1, "", "context"], [29, 2, 1, "", "escape"], [29, 2, 1, "", "get_formatter"], [29, 3, 1, "", "has_newline"], [29, 3, 1, "", "is_partial"], [29, 3, 1, "", "is_quoted"], [29, 3, 1, "", "parent"], [29, 2, 1, "", "print"], [29, 2, 1, "", "print_StringEdit"], [29, 2, 1, "", "print_StringNode"], [29, 4, 1, "", "root"], [29, 3, 1, "", "sub_format_types"], [29, 3, 1, "", "sub_formatters"], [29, 2, 1, "", "write_char"], [29, 2, 1, "", "write_end_quote"], [29, 2, 1, "", "write_start_quote"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"construct": 0, "graphtag": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "tree": [0, 30], "expand": 0, "children": 0, "custom": 0, "node": [0, 32], "extend": [1, 31], "defin": 2, "new": 2, "filetyp": [2, 3], "match": [2, 3, 16, 30], "implement": 2, "class": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29], "abstractcompoundedit": 3, "abstractedit": 3, "boolnod": 3, "buildopt": 3, "compoundedit": 3, "constantcostedit": 3, "containernod": 3, "dictnod": 3, "edit": [3, 32], "editcollect": 3, "editsequ": 3, "editedtreenod": 3, "filetypewatch": 3, "fixedkeydictnod": 3, "fixedkeydictnodeedit": 3, "floatnod": 3, "graphtageformatt": 3, "insert": 3, "integernod": 3, "keyvaluepairedit": 3, "keyvaluepairnod": 3, "leafnod": 3, "listnod": 3, "mappingnod": 3, "multisetnod": 3, "nullnod": 3, "possibleedit": 3, "remov": 3, "replac": 3, "stringedit": 3, "stringformatt": 3, "stringnod": 3, "treenod": 3, "treenodemeta": 3, "function": [3, 5, 8, 11, 13, 14, 15, 16, 20, 21, 23, 26, 27, 28, 29], "explode_edit": 3, "get_filetyp": 3, "string_edit_dist": 3, "ast": 4, "assign": 4, "call": 4, "callargu": 4, "callkeyword": 4, "import": 4, "keywordargu": 4, "modul": [4, 13], "subscript": 4, "bound": 5, "boundedcompar": 5, "constantbound": 5, "infin": 5, "rang": 5, "make_distinct": 5, "min_bound": 5, "repeat_until_tighten": 5, "sort": 5, "builder": 6, "basicbuild": 6, "cyclicrefer": 6, "constraint": 7, "conditionalmatch": 7, "matchif": 7, "matchunless": 7, "csv": 8, "csvformatt": 8, "csvnode": 8, "csvrow": 8, "csvrowformatt": 8, "build_tre": [8, 14, 20, 23, 28, 29], "dataclass": 9, "dataclassedit": 9, "dataclassnod": 9, "debug": 10, "debugg": 10, "express": 11, "closebracket": 11, "closeparen": 11, "collectioninfo": 11, "comma": 11, "fixedsizecollect": 11, "floattoken": 11, "functioncal": 11, "identifiertoken": 11, "integertoken": 11, "numerictoken": 11, "openbracket": 11, "openparen": 11, "oper": 11, "operatortoken": 11, "pairedendtoken": 11, "pairedstarttoken": 11, "pairedtoken": 11, "parenthesi": 11, "parseerror": 11, "stringtoken": 11, "token": 11, "get_memb": 11, "todo": 11, "infix_to_rpn": 11, "pars": 11, "fibonacci": 12, "fibonacciheap": 12, "heapnod": 12, "maxfibonacciheap": 12, "reversedcompar": 12, "formatt": 13, "why": [13, 30], "doe": 13, "exist": 13, "what": 13, "can": 13, "do": 13, "format": [13, 32], "protocol": [13, 34], "basicformatt": 13, "formattercheck": 13, "get_formatt": 13, "json": 14, "json5": 14, "jsondictformatt": 14, "jsonformatt": 14, "jsonlistformatt": 14, "jsonstringformatt": 14, "levenshtein": 15, "editdist": 15, "levenshtein_dist": 15, "edg": 16, "matchingfromnod": 16, "matchingnod": 16, "matchingtonod": 16, "pathset": 16, "queueelement": 16, "sortededg": 16, "weightedbipartitematch": 16, "weightedbipartitematcherpartial_implement": 16, "get_dtyp": 16, "min_weight_bipartite_match": 16, "multiset": 17, "multisetedit": 17, "object_set": 18, "identityhash": 18, "objectset": 18, "pickl": 19, "plist": 20, "plistformatt": 20, "plistnod": 20, "plistsequenceformatt": 20, "printer": 21, "ansicontext": 21, "combiningmarkcontext": 21, "combiningmarkwrit": 21, "htmlansicontext": 21, "htmlprinter": 21, "nullansicontext": 21, "nullwrit": 21, "rawwrit": 21, "writer": 21, "only_ansi": 21, "progress": 22, "statuswrit": 22, "pydiff": 23, "astbuild": 23, "pyalia": 23, "pydictformatt": 23, "pydiffformatt": 23, "pyimportformatt": 23, "pylistformatt": 23, "pymoduleformatt": 23, "pyobj": 23, "pyobjattribut": 23, "pyobjbuild": 23, "pyobjedit": 23, "pyobjfixedattribut": 23, "pyobjformatt": 23, "ast_to_tre": 23, "diff": 23, "print_diff": 23, "search": 24, "iterativetighteningsearch": 24, "sequenc": [25, 30], "fixedlengthsequenceedit": 25, "sequenceedit": 25, "sequenceformatt": 25, "sequencenod": 25, "util": [26, 31], "hashablecount": 26, "orderedcount": 26, "size": 26, "sparsematrix": 26, "tempfil": 26, "getsizeof": 26, "largest": 26, "smallest": 26, "version": 27, "git_branch": 27, "xml": 28, "html": 28, "xmlchildformatt": 28, "xmlelement": 28, "xmlelementattribformatt": 28, "xmlelementchildren": 28, "xmlelementedit": 28, "xmlelementobj": 28, "xmlformatt": 28, "xmlstringformatt": 28, "yaml": 29, "yamldictformatt": 29, "yamlformatt": 29, "yamlkeyvaluepairformatt": 29, "yamllistformatt": 29, "yamlstringformatt": 29, "how": [30, 31], "work": [30, 31], "map": 30, "i": 30, "complex": 30, "order": 30, "unord": 30, "collect": 30, "footnot": 30, "document": 31, "you": 31, "want": 31, "learn": 31, "us": [31, 32], "command": 31, "line": 31, "programmat": [31, 32], "interact": 31, "librari": 31, "modifi": 31, "ar": 31, "alreadi": 31, "familiar": 31, "just": 31, "need": 31, "an": 31, "api": [31, 33], "refer": 31, "curiou": 31, "more": 31, "about": 31, "content": 31, "indic": 31, "tabl": 31, "The": 32, "intermedi": 32, "represent": 32, "transform": 32, "appli": 32, "print": [32, 34], "result": 32, "dif": 32, "In": 32, "memori": 32, "python": 32, "object": 32}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Constructing Graphtage Trees": [[0, "constructing-graphtage-trees"]], "Expanding Children": [[0, "expanding-children"]], "Custom Nodes": [[0, "custom-nodes"]], "Extending Graphtage": [[1, "extending-graphtage"]], "Defining New Filetypes": [[2, "defining-new-filetypes"]], "Filetype Matching": [[2, "filetype-matching"]], "Implementing a New Filetype": [[2, "implementing-a-new-filetype"]], "graphtage": [[3, "module-graphtage"]], "graphtage classes": [[3, "graphtage-classes"]], "AbstractCompoundEdit": [[3, "abstractcompoundedit"]], "AbstractEdit": [[3, "abstractedit"]], "BoolNode": [[3, "boolnode"]], "BuildOptions": [[3, "buildoptions"]], "CompoundEdit": [[3, "compoundedit"]], "ConstantCostEdit": [[3, "constantcostedit"]], "ContainerNode": [[3, "containernode"]], "DictNode": [[3, "dictnode"]], "Edit": [[3, "edit"]], "EditCollection": [[3, "editcollection"]], "EditSequence": [[3, "editsequence"]], "EditedTreeNode": [[3, "editedtreenode"]], "Filetype": [[3, "filetype"]], "FiletypeWatcher": [[3, "filetypewatcher"]], "FixedKeyDictNode": [[3, "fixedkeydictnode"]], "FixedKeyDictNodeEdit": [[3, "fixedkeydictnodeedit"]], "FloatNode": [[3, "floatnode"]], "GraphtageFormatter": [[3, "graphtageformatter"]], "Insert": [[3, "insert"]], "IntegerNode": [[3, "integernode"]], "KeyValuePairEdit": [[3, "keyvaluepairedit"]], "KeyValuePairNode": [[3, "keyvaluepairnode"]], "LeafNode": [[3, "leafnode"]], "ListNode": [[3, "listnode"]], "MappingNode": [[3, "mappingnode"]], "Match": [[3, "match"]], "MultiSetNode": [[3, "multisetnode"]], "NullNode": [[3, "nullnode"]], "PossibleEdits": [[3, "possibleedits"]], "Remove": [[3, "remove"]], "Replace": [[3, "replace"]], "StringEdit": [[3, "stringedit"]], "StringFormatter": [[3, "stringformatter"]], "StringNode": [[3, "stringnode"]], "TreeNode": [[3, "treenode"]], "TreeNodeMeta": [[3, "treenodemeta"]], "graphtage functions": [[3, "graphtage-functions"]], "explode_edits": [[3, "explode-edits"]], "get_filetype": [[3, "get-filetype"]], "string_edit_distance": [[3, "string-edit-distance"]], "graphtage.ast": [[4, "module-graphtage.ast"]], "ast classes": [[4, "ast-classes"]], "Assignment": [[4, "assignment"]], "Call": [[4, "call"]], "CallArguments": [[4, "callarguments"]], "CallKeywords": [[4, "callkeywords"]], "Import": [[4, "import"]], "KeywordArgument": [[4, "keywordargument"]], "Module": [[4, "module"]], "Subscript": [[4, "subscript"]], "graphtage.bounds": [[5, "module-graphtage.bounds"]], "bounds classes": [[5, "bounds-classes"]], "Bounded": [[5, "bounded"]], "BoundedComparator": [[5, "boundedcomparator"]], "ConstantBound": [[5, "constantbound"]], "Infinity": [[5, "infinity"]], "Range": [[5, "range"]], "bounds functions": [[5, "bounds-functions"]], "make_distinct": [[5, "make-distinct"]], "min_bounded": [[5, "min-bounded"]], "repeat_until_tightened": [[5, "repeat-until-tightened"]], "sort": [[5, "sort"]], "graphtage.builder": [[6, "module-graphtage.builder"]], "builder classes": [[6, "builder-classes"]], "BasicBuilder": [[6, "basicbuilder"]], "Builder": [[6, "builder"]], "CyclicReference": [[6, "cyclicreference"]], "graphtage.constraints": [[7, "module-graphtage.constraints"]], "constraints classes": [[7, "constraints-classes"]], "ConditionalMatcher": [[7, "conditionalmatcher"]], "MatchIf": [[7, "matchif"]], "MatchUnless": [[7, "matchunless"]], "graphtage.csv": [[8, "module-graphtage.csv"]], "csv classes": [[8, "csv-classes"]], "CSV": [[8, "csv"]], "CSVFormatter": [[8, "csvformatter"]], "CSVNode": [[8, "csvnode"]], "CSVRow": [[8, "csvrow"]], "CSVRowFormatter": [[8, "csvrowformatter"]], "CSVRows": [[8, "csvrows"]], "csv functions": [[8, "csv-functions"]], "build_tree": [[8, "build-tree"], [14, "build-tree"], [20, "build-tree"], [23, "build-tree"], [28, "build-tree"], [29, "build-tree"]], "graphtage.dataclasses": [[9, "module-graphtage.dataclasses"]], "dataclasses classes": [[9, "dataclasses-classes"]], "DataClassEdit": [[9, "dataclassedit"]], "DataClassNode": [[9, "dataclassnode"]], "graphtage.debug": [[10, "module-graphtage.debug"]], "debug classes": [[10, "debug-classes"]], "Debuggable": [[10, "debuggable"]], "graphtage.expressions": [[11, "module-graphtage.expressions"]], "expressions classes": [[11, "expressions-classes"]], "CloseBracket": [[11, "closebracket"]], "CloseParen": [[11, "closeparen"]], "CollectionInfo": [[11, "collectioninfo"]], "Comma": [[11, "comma"]], "Expression": [[11, "expression"]], "FixedSizeCollection": [[11, "fixedsizecollection"]], "FloatToken": [[11, "floattoken"]], "FunctionCall": [[11, "functioncall"]], "IdentifierToken": [[11, "identifiertoken"]], "IntegerToken": [[11, "integertoken"]], "NumericToken": [[11, "numerictoken"]], "OpenBracket": [[11, "openbracket"]], "OpenParen": [[11, "openparen"]], "Operator": [[11, "operator"]], "OperatorToken": [[11, "operatortoken"]], "PairedEndToken": [[11, "pairedendtoken"]], "PairedStartToken": [[11, "pairedstarttoken"]], "PairedToken": [[11, "pairedtoken"]], "Parenthesis": [[11, "parenthesis"]], "ParseError": [[11, "parseerror"]], "StringToken": [[11, "stringtoken"]], "Token": [[11, "token"]], "Tokenizer": [[11, "tokenizer"]], "expressions functions": [[11, "expressions-functions"]], "get_member": [[11, "get-member"]], "Todo": [[11, "id1"]], "infix_to_rpn": [[11, "infix-to-rpn"]], "parse": [[11, "parse"]], "tokenize": [[11, "tokenize"]], "graphtage.fibonacci": [[12, "module-graphtage.fibonacci"]], "fibonacci classes": [[12, "fibonacci-classes"]], "FibonacciHeap": [[12, "fibonacciheap"]], "HeapNode": [[12, "heapnode"]], "MaxFibonacciHeap": [[12, "maxfibonacciheap"]], "ReversedComparator": [[12, "reversedcomparator"]], "graphtage.formatter": [[13, "module-graphtage.formatter"]], "Why does the formatter module exist?": [[13, "why-does-the-formatter-module-exist"]], "What the formatter module can do": [[13, "what-the-formatter-module-can-do"]], "Formatting Protocol": [[13, "formatting-protocol"]], "formatter classes": [[13, "formatter-classes"]], "BasicFormatter": [[13, "basicformatter"]], "Formatter": [[13, "formatter"]], "FormatterChecker": [[13, "formatterchecker"]], "formatter functions": [[13, "formatter-functions"]], "get_formatter": [[13, "get-formatter"]], "graphtage.json": [[14, "module-graphtage.json"]], "json classes": [[14, "json-classes"]], "JSON": [[14, "json"]], "JSON5": [[14, "json5"]], "JSONDictFormatter": [[14, "jsondictformatter"]], "JSONFormatter": [[14, "jsonformatter"]], "JSONListFormatter": [[14, "jsonlistformatter"]], "JSONStringFormatter": [[14, "jsonstringformatter"]], "json functions": [[14, "json-functions"]], "graphtage.levenshtein": [[15, "module-graphtage.levenshtein"]], "levenshtein classes": [[15, "levenshtein-classes"]], "EditDistance": [[15, "editdistance"]], "levenshtein functions": [[15, "levenshtein-functions"]], "levenshtein_distance": [[15, "levenshtein-distance"]], "graphtage.matching": [[16, "module-graphtage.matching"]], "matching classes": [[16, "matching-classes"]], "Edge": [[16, "edge"]], "Matching": [[16, "matching"]], "MatchingFromNode": [[16, "matchingfromnode"]], "MatchingNode": [[16, "matchingnode"]], "MatchingToNode": [[16, "matchingtonode"]], "PathSet": [[16, "pathset"]], "QueueElement": [[16, "queueelement"]], "SortedEdges": [[16, "sortededges"]], "WeightedBipartiteMatcher": [[16, "weightedbipartitematcher"]], "WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION": [[16, "weightedbipartitematcherpartial-implementation"]], "matching functions": [[16, "matching-functions"]], "get_dtype": [[16, "get-dtype"]], "min_weight_bipartite_matching": [[16, "min-weight-bipartite-matching"]], "graphtage.multiset": [[17, "module-graphtage.multiset"]], "multiset classes": [[17, "multiset-classes"]], "MultiSetEdit": [[17, "multisetedit"]], "graphtage.object_set": [[18, "module-graphtage.object_set"]], "object_set classes": [[18, "object-set-classes"]], "IdentityHash": [[18, "identityhash"]], "ObjectSet": [[18, "objectset"]], "graphtage.pickle": [[19, "module-graphtage.pickle"]], "pickle classes": [[19, "pickle-classes"]], "Pickle": [[19, "pickle"]], "graphtage.plist": [[20, "module-graphtage.plist"]], "plist classes": [[20, "plist-classes"]], "PLIST": [[20, "plist"]], "PLISTFormatter": [[20, "plistformatter"]], "PLISTNode": [[20, "plistnode"]], "PLISTSequenceFormatter": [[20, "plistsequenceformatter"]], "plist functions": [[20, "plist-functions"]], "graphtage.printer": [[21, "module-graphtage.printer"]], "printer classes": [[21, "printer-classes"]], "ANSIContext": [[21, "ansicontext"]], "CombiningMarkContext": [[21, "combiningmarkcontext"]], "CombiningMarkWriter": [[21, "combiningmarkwriter"]], "HTMLANSIContext": [[21, "htmlansicontext"]], "HTMLPrinter": [[21, "htmlprinter"]], "NullANSIContext": [[21, "nullansicontext"]], "NullWriter": [[21, "nullwriter"]], "Printer": [[21, "printer"]], "RawWriter": [[21, "rawwriter"]], "Writer": [[21, "writer"]], "printer functions": [[21, "printer-functions"]], "only_ansi": [[21, "only-ansi"]], "graphtage.progress": [[22, "module-graphtage.progress"]], "progress classes": [[22, "progress-classes"]], "StatusWriter": [[22, "statuswriter"]], "graphtage.pydiff": [[23, "module-graphtage.pydiff"]], "pydiff classes": [[23, "pydiff-classes"]], "ASTBuilder": [[23, "astbuilder"]], "PyAlias": [[23, "pyalias"]], "PyDictFormatter": [[23, "pydictformatter"]], "PyDiffFormatter": [[23, "pydiffformatter"]], "PyImportFormatter": [[23, "pyimportformatter"]], "PyListFormatter": [[23, "pylistformatter"]], "PyModuleFormatter": [[23, "pymoduleformatter"]], "PyObj": [[23, "pyobj"]], "PyObjAttribute": [[23, "pyobjattribute"]], "PyObjAttributes": [[23, "pyobjattributes"]], "PyObjBuilder": [[23, "pyobjbuilder"]], "PyObjEdit": [[23, "pyobjedit"]], "PyObjFixedAttributes": [[23, "pyobjfixedattributes"]], "PyObjFormatter": [[23, "pyobjformatter"]], "pydiff functions": [[23, "pydiff-functions"]], "ast_to_tree": [[23, "ast-to-tree"]], "diff": [[23, "diff"]], "print_diff": [[23, "print-diff"]], "graphtage.search": [[24, "module-graphtage.search"]], "search classes": [[24, "search-classes"]], "IterativeTighteningSearch": [[24, "iterativetighteningsearch"]], "graphtage.sequences": [[25, "module-graphtage.sequences"]], "sequences classes": [[25, "sequences-classes"]], "FixedLengthSequenceEdit": [[25, "fixedlengthsequenceedit"]], "SequenceEdit": [[25, "sequenceedit"]], "SequenceFormatter": [[25, "sequenceformatter"]], "SequenceNode": [[25, "sequencenode"]], "graphtage.utils": [[26, "module-graphtage.utils"]], "utils classes": [[26, "utils-classes"]], "HashableCounter": [[26, "hashablecounter"]], "OrderedCounter": [[26, "orderedcounter"]], "Sized": [[26, "sized"]], "SparseMatrix": [[26, "sparsematrix"]], "Tempfile": [[26, "tempfile"]], "utils functions": [[26, "utils-functions"]], "getsizeof": [[26, "getsizeof"]], "largest": [[26, "largest"]], "smallest": [[26, "smallest"]], "graphtage.version": [[27, "module-graphtage.version"]], "version functions": [[27, "version-functions"]], "git_branch": [[27, "git-branch"]], "graphtage.xml": [[28, "module-graphtage.xml"]], "xml classes": [[28, "xml-classes"]], "HTML": [[28, "html"]], "XML": [[28, "xml"]], "XMLChildFormatter": [[28, "xmlchildformatter"]], "XMLElement": [[28, "xmlelement"]], "XMLElementAttribFormatter": [[28, "xmlelementattribformatter"]], "XMLElementChildren": [[28, "xmlelementchildren"]], "XMLElementEdit": [[28, "xmlelementedit"]], "XMLElementObj": [[28, "xmlelementobj"]], "XMLFormatter": [[28, "xmlformatter"]], "XMLStringFormatter": [[28, "xmlstringformatter"]], "xml functions": [[28, "xml-functions"]], "graphtage.yaml": [[29, "module-graphtage.yaml"]], "yaml classes": [[29, "yaml-classes"]], "YAML": [[29, "yaml"]], "YAMLDictFormatter": [[29, "yamldictformatter"]], "YAMLFormatter": [[29, "yamlformatter"]], "YAMLKeyValuePairFormatter": [[29, "yamlkeyvaluepairformatter"]], "YAMLListFormatter": [[29, "yamllistformatter"]], "YAMLStringFormatter": [[29, "yamlstringformatter"]], "yaml functions": [[29, "yaml-functions"]], "How Graphtage Works": [[30, "how-graphtage-works"]], "Why Mapping Trees is Complex": [[30, "why-mapping-trees-is-complex"]], "Matching Ordered Sequences": [[30, "matching-ordered-sequences"]], "Matching Unordered Collections": [[30, "matching-unordered-collections"]], "Footnotes": [[30, "footnotes"]], "Graphtage Documentation": [[31, "graphtage-documentation"]], "You want to learn how to use Graphtage as a command line utility.": [[31, null]], "You want to programmatically interact with Graphtage as a library.": [[31, null]], "You want to modify or extend Graphtage.": [[31, null]], "You are already familiar with Graphtage and just need an API reference.": [[31, null]], "You are curious and want to learn more about how Graphtage works.": [[31, null]], "Contents:": [[31, null]], "Indices and tables": [[31, "indices-and-tables"]], "Using Graphtage Programmatically": [[32, "using-graphtage-programmatically"]], "The Intermediate Representation": [[32, "the-intermediate-representation"]], "Transforming Nodes with Edits": [[32, "transforming-nodes-with-edits"]], "Applying Edits to Nodes": [[32, "applying-edits-to-nodes"]], "Formatting and Printing Results": [[32, "formatting-and-printing-results"]], "Diffing In-Memory Python Objects": [[32, "diffing-in-memory-python-objects"]], "Graphtage API": [[33, "graphtage-api"]], "Printing Protocol": [[34, "printing-protocol"]]}, "indexentries": {"abstractcompoundedit (class in graphtage)": [[3, "graphtage.AbstractCompoundEdit"]], "abstractedit (class in graphtage)": [[3, "graphtage.AbstractEdit"]], "boolnode (class in graphtage)": [[3, "graphtage.BoolNode"]], "buildoptions (class in graphtage)": [[3, "graphtage.BuildOptions"]], "compoundedit (class in graphtage)": [[3, "graphtage.CompoundEdit"]], "constantcostedit (class in graphtage)": [[3, "graphtage.ConstantCostEdit"]], "containernode (class in graphtage)": [[3, "graphtage.ContainerNode"]], "default_instance (graphtage.graphtageformatter attribute)": [[3, "graphtage.GraphtageFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.stringformatter attribute)": [[3, "graphtage.StringFormatter.DEFAULT_INSTANCE"]], "dictnode (class in graphtage)": [[3, "graphtage.DictNode"]], "edit (class in graphtage)": [[3, "graphtage.Edit"]], "editcollection (class in graphtage)": [[3, "graphtage.EditCollection"]], "editsequence (class in graphtage)": [[3, "graphtage.EditSequence"]], "editedtreenode (class in graphtage)": [[3, "graphtage.EditedTreeNode"]], "filetype (class in graphtage)": [[3, "graphtage.Filetype"]], "filetypewatcher (class in graphtage)": [[3, "graphtage.FiletypeWatcher"]], "fixedkeydictnode (class in graphtage)": [[3, "graphtage.FixedKeyDictNode"]], "fixedkeydictnodeedit (class in graphtage)": [[3, "graphtage.FixedKeyDictNodeEdit"]], "floatnode (class in graphtage)": [[3, "graphtage.FloatNode"]], "graphtageformatter (class in graphtage)": [[3, "graphtage.GraphtageFormatter"]], "insert_string (graphtage.insert attribute)": [[3, "graphtage.Insert.INSERT_STRING"]], "insert (class in graphtage)": [[3, "graphtage.Insert"]], "integernode (class in graphtage)": [[3, "graphtage.IntegerNode"]], "keyvaluepairedit (class in graphtage)": [[3, "graphtage.KeyValuePairEdit"]], "keyvaluepairnode (class in graphtage)": [[3, "graphtage.KeyValuePairNode"]], "leafnode (class in graphtage)": [[3, "graphtage.LeafNode"]], "listnode (class in graphtage)": [[3, "graphtage.ListNode"]], "mappingnode (class in graphtage)": [[3, "graphtage.MappingNode"]], "match (class in graphtage)": [[3, "graphtage.Match"]], "multisetnode (class in graphtage)": [[3, "graphtage.MultiSetNode"]], "nullnode (class in graphtage)": [[3, "graphtage.NullNode"]], "possibleedits (class in graphtage)": [[3, "graphtage.PossibleEdits"]], "remove_string (graphtage.remove attribute)": [[3, "graphtage.Remove.REMOVE_STRING"]], "remove (class in graphtage)": [[3, "graphtage.Remove"]], "replace (class in graphtage)": [[3, "graphtage.Replace"]], "stringedit (class in graphtage)": [[3, "graphtage.StringEdit"]], "stringformatter (class in graphtage)": [[3, "graphtage.StringFormatter"]], "stringnode (class in graphtage)": [[3, "graphtage.StringNode"]], "treenode (class in graphtage)": [[3, "graphtage.TreeNode"]], "treenodemeta (class in graphtage)": [[3, "graphtage.TreeNodeMeta"]], "__contains__() (graphtage.dictnode method)": [[3, "graphtage.DictNode.__contains__"]], "__contains__() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.__contains__"]], "__eq__() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.__eq__"]], "__getattr__() (graphtage.buildoptions method)": [[3, "graphtage.BuildOptions.__getattr__"]], "__getitem__() (graphtage.dictnode method)": [[3, "graphtage.DictNode.__getitem__"]], "__getitem__() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.__getitem__"]], "__init__() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit.__init__"]], "__init__() (graphtage.abstractedit method)": [[3, "graphtage.AbstractEdit.__init__"]], "__init__() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.__init__"]], "__init__() (graphtage.buildoptions method)": [[3, "graphtage.BuildOptions.__init__"]], "__init__() (graphtage.compoundedit method)": [[3, "graphtage.CompoundEdit.__init__"]], "__init__() (graphtage.constantcostedit method)": [[3, "graphtage.ConstantCostEdit.__init__"]], "__init__() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.__init__"]], "__init__() (graphtage.dictnode method)": [[3, "graphtage.DictNode.__init__"]], "__init__() (graphtage.edit method)": [[3, "graphtage.Edit.__init__"]], "__init__() (graphtage.editcollection method)": [[3, "graphtage.EditCollection.__init__"]], "__init__() (graphtage.editsequence method)": [[3, "graphtage.EditSequence.__init__"]], "__init__() (graphtage.editedtreenode method)": [[3, "graphtage.EditedTreeNode.__init__"]], "__init__() (graphtage.filetype method)": [[3, "graphtage.Filetype.__init__"]], "__init__() (graphtage.filetypewatcher method)": [[3, "graphtage.FiletypeWatcher.__init__"]], "__init__() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.__init__"]], "__init__() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit.__init__"]], "__init__() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.__init__"]], "__init__() (graphtage.graphtageformatter method)": [[3, "graphtage.GraphtageFormatter.__init__"]], "__init__() (graphtage.insert method)": [[3, "graphtage.Insert.__init__"]], "__init__() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.__init__"]], "__init__() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit.__init__"]], "__init__() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.__init__"]], "__init__() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.__init__"]], "__init__() (graphtage.listnode method)": [[3, "graphtage.ListNode.__init__"]], "__init__() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.__init__"]], "__init__() (graphtage.match method)": [[3, "graphtage.Match.__init__"]], "__init__() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.__init__"]], "__init__() (graphtage.nullnode method)": [[3, "graphtage.NullNode.__init__"]], "__init__() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.__init__"]], "__init__() (graphtage.remove method)": [[3, "graphtage.Remove.__init__"]], "__init__() (graphtage.replace method)": [[3, "graphtage.Replace.__init__"]], "__init__() (graphtage.stringedit method)": [[3, "graphtage.StringEdit.__init__"]], "__init__() (graphtage.stringformatter method)": [[3, "graphtage.StringFormatter.__init__"]], "__init__() (graphtage.stringnode method)": [[3, "graphtage.StringNode.__init__"]], "__init__() (graphtage.treenode method)": [[3, "graphtage.TreeNode.__init__"]], "__init__() (graphtage.treenodemeta method)": [[3, "graphtage.TreeNodeMeta.__init__"]], "__instancecheck__() (graphtage.filetypewatcher method)": [[3, "graphtage.FiletypeWatcher.__instancecheck__"]], "__instancecheck__() (graphtage.treenodemeta method)": [[3, "graphtage.TreeNodeMeta.__instancecheck__"]], "__iter__() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit.__iter__"]], "__iter__() (graphtage.compoundedit method)": [[3, "graphtage.CompoundEdit.__iter__"]], "__iter__() (graphtage.editcollection method)": [[3, "graphtage.EditCollection.__iter__"]], "__iter__() (graphtage.editsequence method)": [[3, "graphtage.EditSequence.__iter__"]], "__iter__() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit.__iter__"]], "__iter__() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit.__iter__"]], "__iter__() (graphtage.listnode method)": [[3, "graphtage.ListNode.__iter__"]], "__iter__() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.__iter__"]], "__iter__() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.__iter__"]], "__len__() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.__len__"]], "__len__() (graphtage.listnode method)": [[3, "graphtage.ListNode.__len__"]], "__lt__() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit.__lt__"]], "__lt__() (graphtage.abstractedit method)": [[3, "graphtage.AbstractEdit.__lt__"]], "__lt__() (graphtage.constantcostedit method)": [[3, "graphtage.ConstantCostEdit.__lt__"]], "__lt__() (graphtage.editcollection method)": [[3, "graphtage.EditCollection.__lt__"]], "__lt__() (graphtage.editsequence method)": [[3, "graphtage.EditSequence.__lt__"]], "__lt__() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit.__lt__"]], "__lt__() (graphtage.insert method)": [[3, "graphtage.Insert.__lt__"]], "__lt__() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit.__lt__"]], "__lt__() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.__lt__"]], "__lt__() (graphtage.match method)": [[3, "graphtage.Match.__lt__"]], "__lt__() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.__lt__"]], "__lt__() (graphtage.remove method)": [[3, "graphtage.Remove.__lt__"]], "__lt__() (graphtage.replace method)": [[3, "graphtage.Replace.__lt__"]], "__lt__() (graphtage.stringedit method)": [[3, "graphtage.StringEdit.__lt__"]], "__new__() (graphtage.graphtageformatter static method)": [[3, "graphtage.GraphtageFormatter.__new__"]], "__new__() (graphtage.stringformatter static method)": [[3, "graphtage.StringFormatter.__new__"]], "__subclasscheck__() (graphtage.filetypewatcher method)": [[3, "graphtage.FiletypeWatcher.__subclasscheck__"]], "__subclasscheck__() (graphtage.treenodemeta method)": [[3, "graphtage.TreeNodeMeta.__subclasscheck__"]], "_abc_caches_clear() (graphtage.filetypewatcher method)": [[3, "graphtage.FiletypeWatcher._abc_caches_clear"]], "_abc_caches_clear() (graphtage.treenodemeta method)": [[3, "graphtage.TreeNodeMeta._abc_caches_clear"]], "_abc_registry_clear() (graphtage.filetypewatcher method)": [[3, "graphtage.FiletypeWatcher._abc_registry_clear"]], "_abc_registry_clear() (graphtage.treenodemeta method)": [[3, "graphtage.TreeNodeMeta._abc_registry_clear"]], "_debug_tighten_bounds() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.abstractedit method)": [[3, "graphtage.AbstractEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.constantcostedit method)": [[3, "graphtage.ConstantCostEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.editcollection method)": [[3, "graphtage.EditCollection._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.editsequence method)": [[3, "graphtage.EditSequence._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.insert method)": [[3, "graphtage.Insert._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.match method)": [[3, "graphtage.Match._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.remove method)": [[3, "graphtage.Remove._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.replace method)": [[3, "graphtage.Replace._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.stringedit method)": [[3, "graphtage.StringEdit._debug_tighten_bounds"]], "_dump_registry() (graphtage.filetypewatcher method)": [[3, "graphtage.FiletypeWatcher._dump_registry"]], "_dump_registry() (graphtage.treenodemeta method)": [[3, "graphtage.TreeNodeMeta._dump_registry"]], "add_edit_modifier() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.dictnode method)": [[3, "graphtage.DictNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.listnode method)": [[3, "graphtage.ListNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.nullnode method)": [[3, "graphtage.NullNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.stringnode method)": [[3, "graphtage.StringNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.treenode method)": [[3, "graphtage.TreeNode.add_edit_modifier"]], "all_children_are_leaves() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.dictnode method)": [[3, "graphtage.DictNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.listnode method)": [[3, "graphtage.ListNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.all_children_are_leaves"]], "best_possibility() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.best_possibility"]], "bounds() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit.bounds"]], "bounds() (graphtage.abstractedit method)": [[3, "graphtage.AbstractEdit.bounds"]], "bounds() (graphtage.compoundedit method)": [[3, "graphtage.CompoundEdit.bounds"]], "bounds() (graphtage.constantcostedit method)": [[3, "graphtage.ConstantCostEdit.bounds"]], "bounds() (graphtage.edit method)": [[3, "graphtage.Edit.bounds"]], "bounds() (graphtage.editcollection method)": [[3, "graphtage.EditCollection.bounds"]], "bounds() (graphtage.editsequence method)": [[3, "graphtage.EditSequence.bounds"]], "bounds() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit.bounds"]], "bounds() (graphtage.insert method)": [[3, "graphtage.Insert.bounds"]], "bounds() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit.bounds"]], "bounds() (graphtage.match method)": [[3, "graphtage.Match.bounds"]], "bounds() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.bounds"]], "bounds() (graphtage.remove method)": [[3, "graphtage.Remove.bounds"]], "bounds() (graphtage.replace method)": [[3, "graphtage.Replace.bounds"]], "bounds() (graphtage.stringedit method)": [[3, "graphtage.StringEdit.bounds"]], "build_tree() (graphtage.filetype method)": [[3, "graphtage.Filetype.build_tree"]], "build_tree_handling_errors() (graphtage.filetype method)": [[3, "graphtage.Filetype.build_tree_handling_errors"]], "calculate_total_size() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.calculate_total_size"]], "calculate_total_size() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.calculate_total_size"]], "calculate_total_size() (graphtage.dictnode method)": [[3, "graphtage.DictNode.calculate_total_size"]], "calculate_total_size() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.calculate_total_size"]], "calculate_total_size() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.calculate_total_size"]], "calculate_total_size() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.calculate_total_size"]], "calculate_total_size() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.calculate_total_size"]], "calculate_total_size() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.calculate_total_size"]], "calculate_total_size() (graphtage.listnode method)": [[3, "graphtage.ListNode.calculate_total_size"]], "calculate_total_size() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.calculate_total_size"]], "calculate_total_size() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.calculate_total_size"]], "calculate_total_size() (graphtage.nullnode method)": [[3, "graphtage.NullNode.calculate_total_size"]], "calculate_total_size() (graphtage.stringnode method)": [[3, "graphtage.StringNode.calculate_total_size"]], "calculate_total_size() (graphtage.treenode method)": [[3, "graphtage.TreeNode.calculate_total_size"]], "children() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.children"]], "children() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.children"]], "children() (graphtage.dictnode method)": [[3, "graphtage.DictNode.children"]], "children() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.children"]], "children() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.children"]], "children() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.children"]], "children() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.children"]], "children() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.children"]], "children() (graphtage.listnode method)": [[3, "graphtage.ListNode.children"]], "children() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.children"]], "children() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.children"]], "children() (graphtage.nullnode method)": [[3, "graphtage.NullNode.children"]], "children() (graphtage.stringnode method)": [[3, "graphtage.StringNode.children"]], "children() (graphtage.treenode method)": [[3, "graphtage.TreeNode.children"]], "container_type (graphtage.dictnode property)": [[3, "graphtage.DictNode.container_type"]], "container_type (graphtage.fixedkeydictnode property)": [[3, "graphtage.FixedKeyDictNode.container_type"]], "container_type (graphtage.listnode property)": [[3, "graphtage.ListNode.container_type"]], "container_type (graphtage.multisetnode property)": [[3, "graphtage.MultiSetNode.container_type"]], "context() (graphtage.stringformatter method)": [[3, "graphtage.StringFormatter.context"]], "copy() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.copy"]], "copy() (graphtage.buildoptions method)": [[3, "graphtage.BuildOptions.copy"]], "copy() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.copy"]], "copy() (graphtage.dictnode method)": [[3, "graphtage.DictNode.copy"]], "copy() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.copy"]], "copy() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.copy"]], "copy() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.copy"]], "copy() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.copy"]], "copy() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.copy"]], "copy() (graphtage.listnode method)": [[3, "graphtage.ListNode.copy"]], "copy() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.copy"]], "copy() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.copy"]], "copy() (graphtage.nullnode method)": [[3, "graphtage.NullNode.copy"]], "copy() (graphtage.stringnode method)": [[3, "graphtage.StringNode.copy"]], "copy() (graphtage.treenode method)": [[3, "graphtage.TreeNode.copy"]], "copy_from() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.copy_from"]], "copy_from() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.copy_from"]], "copy_from() (graphtage.dictnode method)": [[3, "graphtage.DictNode.copy_from"]], "copy_from() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.copy_from"]], "copy_from() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.copy_from"]], "copy_from() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.copy_from"]], "copy_from() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.copy_from"]], "copy_from() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.copy_from"]], "copy_from() (graphtage.listnode method)": [[3, "graphtage.ListNode.copy_from"]], "copy_from() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.copy_from"]], "copy_from() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.copy_from"]], "copy_from() (graphtage.nullnode method)": [[3, "graphtage.NullNode.copy_from"]], "copy_from() (graphtage.stringnode method)": [[3, "graphtage.StringNode.copy_from"]], "copy_from() (graphtage.treenode method)": [[3, "graphtage.TreeNode.copy_from"]], "default_instance (graphtage.filetype attribute)": [[3, "graphtage.Filetype.default_instance"]], "dfs() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.dfs"]], "dfs() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.dfs"]], "dfs() (graphtage.dictnode method)": [[3, "graphtage.DictNode.dfs"]], "dfs() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.dfs"]], "dfs() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.dfs"]], "dfs() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.dfs"]], "dfs() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.dfs"]], "dfs() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.dfs"]], "dfs() (graphtage.listnode method)": [[3, "graphtage.ListNode.dfs"]], "dfs() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.dfs"]], "dfs() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.dfs"]], "dfs() (graphtage.nullnode method)": [[3, "graphtage.NullNode.dfs"]], "dfs() (graphtage.stringnode method)": [[3, "graphtage.StringNode.dfs"]], "dfs() (graphtage.treenode method)": [[3, "graphtage.TreeNode.dfs"]], "diff() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.diff"]], "diff() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.diff"]], "diff() (graphtage.dictnode method)": [[3, "graphtage.DictNode.diff"]], "diff() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.diff"]], "diff() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.diff"]], "diff() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.diff"]], "diff() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.diff"]], "diff() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.diff"]], "diff() (graphtage.listnode method)": [[3, "graphtage.ListNode.diff"]], "diff() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.diff"]], "diff() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.diff"]], "diff() (graphtage.nullnode method)": [[3, "graphtage.NullNode.diff"]], "diff() (graphtage.stringnode method)": [[3, "graphtage.StringNode.diff"]], "diff() (graphtage.treenode method)": [[3, "graphtage.TreeNode.diff"]], "editable_dict() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.editable_dict"]], "editable_dict() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.editable_dict"]], "editable_dict() (graphtage.dictnode method)": [[3, "graphtage.DictNode.editable_dict"]], "editable_dict() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.editable_dict"]], "editable_dict() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.editable_dict"]], "editable_dict() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.editable_dict"]], "editable_dict() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.editable_dict"]], "editable_dict() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.editable_dict"]], "editable_dict() (graphtage.listnode method)": [[3, "graphtage.ListNode.editable_dict"]], "editable_dict() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.editable_dict"]], "editable_dict() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.editable_dict"]], "editable_dict() (graphtage.nullnode method)": [[3, "graphtage.NullNode.editable_dict"]], "editable_dict() (graphtage.stringnode method)": [[3, "graphtage.StringNode.editable_dict"]], "editable_dict() (graphtage.treenode method)": [[3, "graphtage.TreeNode.editable_dict"]], "edited (graphtage.boolnode property)": [[3, "graphtage.BoolNode.edited"]], "edited (graphtage.containernode property)": [[3, "graphtage.ContainerNode.edited"]], "edited (graphtage.dictnode property)": [[3, "graphtage.DictNode.edited"]], "edited (graphtage.editedtreenode property)": [[3, "graphtage.EditedTreeNode.edited"]], "edited (graphtage.fixedkeydictnode property)": [[3, "graphtage.FixedKeyDictNode.edited"]], "edited (graphtage.floatnode property)": [[3, "graphtage.FloatNode.edited"]], "edited (graphtage.integernode property)": [[3, "graphtage.IntegerNode.edited"]], "edited (graphtage.keyvaluepairnode property)": [[3, "graphtage.KeyValuePairNode.edited"]], "edited (graphtage.leafnode property)": [[3, "graphtage.LeafNode.edited"]], "edited (graphtage.listnode property)": [[3, "graphtage.ListNode.edited"]], "edited (graphtage.mappingnode property)": [[3, "graphtage.MappingNode.edited"]], "edited (graphtage.multisetnode property)": [[3, "graphtage.MultiSetNode.edited"]], "edited (graphtage.nullnode property)": [[3, "graphtage.NullNode.edited"]], "edited (graphtage.stringnode property)": [[3, "graphtage.StringNode.edited"]], "edited (graphtage.treenode property)": [[3, "graphtage.TreeNode.edited"]], "edited_cost() (graphtage.editedtreenode method)": [[3, "graphtage.EditedTreeNode.edited_cost"]], "edited_type() (graphtage.treenodemeta method)": [[3, "graphtage.TreeNodeMeta.edited_type"]], "edits() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit.edits"]], "edits() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.edits"]], "edits() (graphtage.compoundedit method)": [[3, "graphtage.CompoundEdit.edits"]], "edits() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.edits"]], "edits() (graphtage.dictnode method)": [[3, "graphtage.DictNode.edits"]], "edits() (graphtage.editcollection method)": [[3, "graphtage.EditCollection.edits"]], "edits() (graphtage.editsequence method)": [[3, "graphtage.EditSequence.edits"]], "edits() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.edits"]], "edits() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit.edits"]], "edits() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.edits"]], "edits() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.edits"]], "edits() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit.edits"]], "edits() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.edits"]], "edits() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.edits"]], "edits() (graphtage.listnode method)": [[3, "graphtage.ListNode.edits"]], "edits() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.edits"]], "edits() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.edits"]], "edits() (graphtage.nullnode method)": [[3, "graphtage.NullNode.edits"]], "edits() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.edits"]], "edits() (graphtage.stringnode method)": [[3, "graphtage.StringNode.edits"]], "edits() (graphtage.treenode method)": [[3, "graphtage.TreeNode.edits"]], "escape() (graphtage.stringformatter method)": [[3, "graphtage.StringFormatter.escape"]], "explode_edits() (in module graphtage)": [[3, "graphtage.explode_edits"]], "from_dict() (graphtage.dictnode class method)": [[3, "graphtage.DictNode.from_dict"]], "from_dict() (graphtage.fixedkeydictnode class method)": [[3, "graphtage.FixedKeyDictNode.from_dict"]], "from_dict() (graphtage.mappingnode class method)": [[3, "graphtage.MappingNode.from_dict"]], "from_node (graphtage.abstractcompoundedit attribute)": [[3, "graphtage.AbstractCompoundEdit.from_node"]], "from_node (graphtage.abstractedit attribute)": [[3, "graphtage.AbstractEdit.from_node"]], "from_node (graphtage.compoundedit attribute)": [[3, "graphtage.CompoundEdit.from_node"]], "from_node (graphtage.constantcostedit attribute)": [[3, "graphtage.ConstantCostEdit.from_node"]], "from_node (graphtage.edit attribute)": [[3, "graphtage.Edit.from_node"], [3, "id0"]], "from_node (graphtage.editcollection attribute)": [[3, "graphtage.EditCollection.from_node"]], "from_node (graphtage.editsequence attribute)": [[3, "graphtage.EditSequence.from_node"]], "from_node (graphtage.fixedkeydictnodeedit attribute)": [[3, "graphtage.FixedKeyDictNodeEdit.from_node"]], "from_node (graphtage.insert attribute)": [[3, "graphtage.Insert.from_node"]], "from_node (graphtage.keyvaluepairedit attribute)": [[3, "graphtage.KeyValuePairEdit.from_node"]], "from_node (graphtage.match attribute)": [[3, "graphtage.Match.from_node"]], "from_node (graphtage.possibleedits attribute)": [[3, "graphtage.PossibleEdits.from_node"]], "from_node (graphtage.remove attribute)": [[3, "graphtage.Remove.from_node"]], "from_node (graphtage.replace attribute)": [[3, "graphtage.Replace.from_node"]], "from_node (graphtage.stringedit attribute)": [[3, "graphtage.StringEdit.from_node"]], "get_all_edit_contexts() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.dictnode method)": [[3, "graphtage.DictNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.listnode method)": [[3, "graphtage.ListNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.nullnode method)": [[3, "graphtage.NullNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.stringnode method)": [[3, "graphtage.StringNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.treenode method)": [[3, "graphtage.TreeNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.get_all_edits"]], "get_all_edits() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.get_all_edits"]], "get_all_edits() (graphtage.dictnode method)": [[3, "graphtage.DictNode.get_all_edits"]], "get_all_edits() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.get_all_edits"]], "get_all_edits() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.get_all_edits"]], "get_all_edits() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.get_all_edits"]], "get_all_edits() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.get_all_edits"]], "get_all_edits() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.get_all_edits"]], "get_all_edits() (graphtage.listnode method)": [[3, "graphtage.ListNode.get_all_edits"]], "get_all_edits() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.get_all_edits"]], "get_all_edits() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.get_all_edits"]], "get_all_edits() (graphtage.nullnode method)": [[3, "graphtage.NullNode.get_all_edits"]], "get_all_edits() (graphtage.stringnode method)": [[3, "graphtage.StringNode.get_all_edits"]], "get_all_edits() (graphtage.treenode method)": [[3, "graphtage.TreeNode.get_all_edits"]], "get_default_formatter() (graphtage.filetype method)": [[3, "graphtage.Filetype.get_default_formatter"]], "get_filetype() (in module graphtage)": [[3, "graphtage.get_filetype"]], "get_formatter() (graphtage.graphtageformatter method)": [[3, "graphtage.GraphtageFormatter.get_formatter"]], "get_formatter() (graphtage.stringformatter method)": [[3, "graphtage.StringFormatter.get_formatter"]], "graphtage": [[3, "module-graphtage"]], "has_non_zero_cost() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.abstractedit method)": [[3, "graphtage.AbstractEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.compoundedit method)": [[3, "graphtage.CompoundEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.constantcostedit method)": [[3, "graphtage.ConstantCostEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.edit method)": [[3, "graphtage.Edit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.editcollection method)": [[3, "graphtage.EditCollection.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.editsequence method)": [[3, "graphtage.EditSequence.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.insert method)": [[3, "graphtage.Insert.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.match method)": [[3, "graphtage.Match.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.remove method)": [[3, "graphtage.Remove.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.replace method)": [[3, "graphtage.Replace.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.stringedit method)": [[3, "graphtage.StringEdit.has_non_zero_cost"]], "initial_bounds (graphtage.abstractcompoundedit attribute)": [[3, "graphtage.AbstractCompoundEdit.initial_bounds"]], "initial_bounds (graphtage.abstractedit attribute)": [[3, "graphtage.AbstractEdit.initial_bounds"]], "initial_bounds (graphtage.compoundedit attribute)": [[3, "graphtage.CompoundEdit.initial_bounds"]], "initial_bounds (graphtage.constantcostedit attribute)": [[3, "graphtage.ConstantCostEdit.initial_bounds"]], "initial_bounds (graphtage.edit attribute)": [[3, "graphtage.Edit.initial_bounds"], [3, "id1"]], "initial_bounds (graphtage.editcollection attribute)": [[3, "graphtage.EditCollection.initial_bounds"]], "initial_bounds (graphtage.editsequence attribute)": [[3, "graphtage.EditSequence.initial_bounds"]], "initial_bounds (graphtage.fixedkeydictnodeedit attribute)": [[3, "graphtage.FixedKeyDictNodeEdit.initial_bounds"]], "initial_bounds (graphtage.insert attribute)": [[3, "graphtage.Insert.initial_bounds"]], "initial_bounds (graphtage.keyvaluepairedit attribute)": [[3, "graphtage.KeyValuePairEdit.initial_bounds"]], "initial_bounds (graphtage.match attribute)": [[3, "graphtage.Match.initial_bounds"]], "initial_bounds (graphtage.possibleedits attribute)": [[3, "graphtage.PossibleEdits.initial_bounds"]], "initial_bounds (graphtage.remove attribute)": [[3, "graphtage.Remove.initial_bounds"]], "initial_bounds (graphtage.replace attribute)": [[3, "graphtage.Replace.initial_bounds"]], "initial_bounds (graphtage.stringedit attribute)": [[3, "graphtage.StringEdit.initial_bounds"]], "insert_into (graphtage.insert property)": [[3, "graphtage.Insert.insert_into"]], "is_complete() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit.is_complete"]], "is_complete() (graphtage.abstractedit method)": [[3, "graphtage.AbstractEdit.is_complete"]], "is_complete() (graphtage.compoundedit method)": [[3, "graphtage.CompoundEdit.is_complete"]], "is_complete() (graphtage.constantcostedit method)": [[3, "graphtage.ConstantCostEdit.is_complete"]], "is_complete() (graphtage.edit method)": [[3, "graphtage.Edit.is_complete"]], "is_complete() (graphtage.editcollection method)": [[3, "graphtage.EditCollection.is_complete"]], "is_complete() (graphtage.editsequence method)": [[3, "graphtage.EditSequence.is_complete"]], "is_complete() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit.is_complete"]], "is_complete() (graphtage.insert method)": [[3, "graphtage.Insert.is_complete"]], "is_complete() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit.is_complete"]], "is_complete() (graphtage.match method)": [[3, "graphtage.Match.is_complete"]], "is_complete() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.is_complete"]], "is_complete() (graphtage.remove method)": [[3, "graphtage.Remove.is_complete"]], "is_complete() (graphtage.replace method)": [[3, "graphtage.Replace.is_complete"]], "is_complete() (graphtage.stringedit method)": [[3, "graphtage.StringEdit.is_complete"]], "is_leaf (graphtage.boolnode property)": [[3, "graphtage.BoolNode.is_leaf"]], "is_leaf (graphtage.containernode property)": [[3, "graphtage.ContainerNode.is_leaf"]], "is_leaf (graphtage.dictnode property)": [[3, "graphtage.DictNode.is_leaf"]], "is_leaf (graphtage.fixedkeydictnode property)": [[3, "graphtage.FixedKeyDictNode.is_leaf"]], "is_leaf (graphtage.floatnode property)": [[3, "graphtage.FloatNode.is_leaf"]], "is_leaf (graphtage.integernode property)": [[3, "graphtage.IntegerNode.is_leaf"]], "is_leaf (graphtage.keyvaluepairnode property)": [[3, "graphtage.KeyValuePairNode.is_leaf"]], "is_leaf (graphtage.leafnode property)": [[3, "graphtage.LeafNode.is_leaf"]], "is_leaf (graphtage.listnode property)": [[3, "graphtage.ListNode.is_leaf"]], "is_leaf (graphtage.mappingnode property)": [[3, "graphtage.MappingNode.is_leaf"]], "is_leaf (graphtage.multisetnode property)": [[3, "graphtage.MultiSetNode.is_leaf"]], "is_leaf (graphtage.nullnode property)": [[3, "graphtage.NullNode.is_leaf"]], "is_leaf (graphtage.stringnode property)": [[3, "graphtage.StringNode.is_leaf"]], "is_leaf (graphtage.treenode property)": [[3, "graphtage.TreeNode.is_leaf"]], "is_partial (graphtage.graphtageformatter attribute)": [[3, "graphtage.GraphtageFormatter.is_partial"]], "is_partial (graphtage.stringformatter attribute)": [[3, "graphtage.StringFormatter.is_partial"]], "is_quoted (graphtage.stringformatter attribute)": [[3, "graphtage.StringFormatter.is_quoted"]], "items() (graphtage.dictnode method)": [[3, "graphtage.DictNode.items"]], "items() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.items"]], "items() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.items"]], "make_edited() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.make_edited"]], "make_edited() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.make_edited"]], "make_edited() (graphtage.dictnode method)": [[3, "graphtage.DictNode.make_edited"]], "make_edited() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.make_edited"]], "make_edited() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.make_edited"]], "make_edited() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.make_edited"]], "make_edited() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.make_edited"]], "make_edited() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.make_edited"]], "make_edited() (graphtage.listnode method)": [[3, "graphtage.ListNode.make_edited"]], "make_edited() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.make_edited"]], "make_edited() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.make_edited"]], "make_edited() (graphtage.nullnode method)": [[3, "graphtage.NullNode.make_edited"]], "make_edited() (graphtage.stringnode method)": [[3, "graphtage.StringNode.make_edited"]], "make_edited() (graphtage.treenode method)": [[3, "graphtage.TreeNode.make_edited"]], "make_key_value_pair_node() (graphtage.dictnode class method)": [[3, "graphtage.DictNode.make_key_value_pair_node"]], "make_key_value_pair_node() (graphtage.fixedkeydictnode class method)": [[3, "graphtage.FixedKeyDictNode.make_key_value_pair_node"]], "make_key_value_pair_node() (graphtage.mappingnode class method)": [[3, "graphtage.MappingNode.make_key_value_pair_node"]], "module": [[3, "module-graphtage"], [4, "module-graphtage.ast"], [5, "module-graphtage.bounds"], [6, "module-graphtage.builder"], [7, "module-graphtage.constraints"], [8, "module-graphtage.csv"], [9, "module-graphtage.dataclasses"], [10, "module-graphtage.debug"], [11, "module-graphtage.expressions"], [12, "module-graphtage.fibonacci"], [13, "module-graphtage.formatter"], [14, "module-graphtage.json"], [15, "module-graphtage.levenshtein"], [16, "module-graphtage.matching"], [17, "module-graphtage.multiset"], [18, "module-graphtage.object_set"], [19, "module-graphtage.pickle"], [20, "module-graphtage.plist"], [21, "module-graphtage.printer"], [22, "module-graphtage.progress"], [23, "module-graphtage.pydiff"], [24, "module-graphtage.search"], [25, "module-graphtage.sequences"], [26, "module-graphtage.utils"], [27, "module-graphtage.version"], [28, "module-graphtage.xml"], [29, "module-graphtage.yaml"]], "mro() (graphtage.filetypewatcher method)": [[3, "graphtage.FiletypeWatcher.mro"]], "mro() (graphtage.treenodemeta method)": [[3, "graphtage.TreeNodeMeta.mro"]], "on_diff() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit.on_diff"]], "on_diff() (graphtage.abstractedit method)": [[3, "graphtage.AbstractEdit.on_diff"]], "on_diff() (graphtage.compoundedit method)": [[3, "graphtage.CompoundEdit.on_diff"]], "on_diff() (graphtage.constantcostedit method)": [[3, "graphtage.ConstantCostEdit.on_diff"]], "on_diff() (graphtage.edit method)": [[3, "graphtage.Edit.on_diff"]], "on_diff() (graphtage.editcollection method)": [[3, "graphtage.EditCollection.on_diff"]], "on_diff() (graphtage.editsequence method)": [[3, "graphtage.EditSequence.on_diff"]], "on_diff() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit.on_diff"]], "on_diff() (graphtage.insert method)": [[3, "graphtage.Insert.on_diff"]], "on_diff() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit.on_diff"]], "on_diff() (graphtage.match method)": [[3, "graphtage.Match.on_diff"]], "on_diff() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.on_diff"]], "on_diff() (graphtage.remove method)": [[3, "graphtage.Remove.on_diff"]], "on_diff() (graphtage.replace method)": [[3, "graphtage.Replace.on_diff"]], "on_diff() (graphtage.stringedit method)": [[3, "graphtage.StringEdit.on_diff"]], "parent (graphtage.boolnode property)": [[3, "graphtage.BoolNode.parent"]], "parent (graphtage.containernode property)": [[3, "graphtage.ContainerNode.parent"]], "parent (graphtage.dictnode property)": [[3, "graphtage.DictNode.parent"]], "parent (graphtage.fixedkeydictnode property)": [[3, "graphtage.FixedKeyDictNode.parent"]], "parent (graphtage.floatnode property)": [[3, "graphtage.FloatNode.parent"]], "parent (graphtage.graphtageformatter attribute)": [[3, "graphtage.GraphtageFormatter.parent"]], "parent (graphtage.integernode property)": [[3, "graphtage.IntegerNode.parent"]], "parent (graphtage.keyvaluepairnode property)": [[3, "graphtage.KeyValuePairNode.parent"]], "parent (graphtage.leafnode property)": [[3, "graphtage.LeafNode.parent"]], "parent (graphtage.listnode property)": [[3, "graphtage.ListNode.parent"]], "parent (graphtage.mappingnode property)": [[3, "graphtage.MappingNode.parent"]], "parent (graphtage.multisetnode property)": [[3, "graphtage.MultiSetNode.parent"]], "parent (graphtage.nullnode property)": [[3, "graphtage.NullNode.parent"]], "parent (graphtage.stringformatter attribute)": [[3, "graphtage.StringFormatter.parent"]], "parent (graphtage.stringnode property)": [[3, "graphtage.StringNode.parent"]], "parent (graphtage.treenode property)": [[3, "graphtage.TreeNode.parent"]], "print() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit.print"]], "print() (graphtage.abstractedit method)": [[3, "graphtage.AbstractEdit.print"]], "print() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.print"]], "print() (graphtage.compoundedit method)": [[3, "graphtage.CompoundEdit.print"]], "print() (graphtage.constantcostedit method)": [[3, "graphtage.ConstantCostEdit.print"]], "print() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.print"]], "print() (graphtage.dictnode method)": [[3, "graphtage.DictNode.print"]], "print() (graphtage.edit method)": [[3, "graphtage.Edit.print"]], "print() (graphtage.editcollection method)": [[3, "graphtage.EditCollection.print"]], "print() (graphtage.editsequence method)": [[3, "graphtage.EditSequence.print"]], "print() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.print"]], "print() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit.print"]], "print() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.print"]], "print() (graphtage.graphtageformatter method)": [[3, "graphtage.GraphtageFormatter.print"]], "print() (graphtage.insert method)": [[3, "graphtage.Insert.print"]], "print() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.print"]], "print() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit.print"]], "print() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.print"]], "print() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.print"]], "print() (graphtage.listnode method)": [[3, "graphtage.ListNode.print"]], "print() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.print"]], "print() (graphtage.match method)": [[3, "graphtage.Match.print"]], "print() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.print"]], "print() (graphtage.nullnode method)": [[3, "graphtage.NullNode.print"]], "print() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.print"]], "print() (graphtage.remove method)": [[3, "graphtage.Remove.print"]], "print() (graphtage.replace method)": [[3, "graphtage.Replace.print"]], "print() (graphtage.stringedit method)": [[3, "graphtage.StringEdit.print"]], "print() (graphtage.stringformatter method)": [[3, "graphtage.StringFormatter.print"]], "print() (graphtage.stringnode method)": [[3, "graphtage.StringNode.print"]], "print() (graphtage.treenode method)": [[3, "graphtage.TreeNode.print"]], "print_stringedit() (graphtage.stringformatter method)": [[3, "graphtage.StringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.stringformatter method)": [[3, "graphtage.StringFormatter.print_StringNode"]], "print_parent_context() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.print_parent_context"]], "print_parent_context() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.print_parent_context"]], "print_parent_context() (graphtage.dictnode method)": [[3, "graphtage.DictNode.print_parent_context"]], "print_parent_context() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.print_parent_context"]], "print_parent_context() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.print_parent_context"]], "print_parent_context() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.print_parent_context"]], "print_parent_context() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.print_parent_context"]], "print_parent_context() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.print_parent_context"]], "print_parent_context() (graphtage.listnode method)": [[3, "graphtage.ListNode.print_parent_context"]], "print_parent_context() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.print_parent_context"]], "print_parent_context() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.print_parent_context"]], "print_parent_context() (graphtage.nullnode method)": [[3, "graphtage.NullNode.print_parent_context"]], "print_parent_context() (graphtage.stringnode method)": [[3, "graphtage.StringNode.print_parent_context"]], "print_parent_context() (graphtage.treenode method)": [[3, "graphtage.TreeNode.print_parent_context"]], "register() (graphtage.filetypewatcher method)": [[3, "graphtage.FiletypeWatcher.register"]], "register() (graphtage.treenodemeta method)": [[3, "graphtage.TreeNodeMeta.register"]], "root (graphtage.graphtageformatter property)": [[3, "graphtage.GraphtageFormatter.root"]], "root (graphtage.stringformatter property)": [[3, "graphtage.StringFormatter.root"]], "sequence (graphtage.fixedkeydictnodeedit property)": [[3, "graphtage.FixedKeyDictNodeEdit.sequence"]], "string_edit_distance() (in module graphtage)": [[3, "graphtage.string_edit_distance"]], "sub_format_types (graphtage.graphtageformatter attribute)": [[3, "graphtage.GraphtageFormatter.sub_format_types"]], "sub_format_types (graphtage.stringformatter attribute)": [[3, "graphtage.StringFormatter.sub_format_types"]], "sub_formatters (graphtage.graphtageformatter attribute)": [[3, "graphtage.GraphtageFormatter.sub_formatters"]], "sub_formatters (graphtage.stringformatter attribute)": [[3, "graphtage.StringFormatter.sub_formatters"]], "tighten_bounds() (graphtage.abstractcompoundedit method)": [[3, "graphtage.AbstractCompoundEdit.tighten_bounds"]], "tighten_bounds() (graphtage.abstractedit method)": [[3, "graphtage.AbstractEdit.tighten_bounds"]], "tighten_bounds() (graphtage.compoundedit method)": [[3, "graphtage.CompoundEdit.tighten_bounds"]], "tighten_bounds() (graphtage.constantcostedit method)": [[3, "graphtage.ConstantCostEdit.tighten_bounds"]], "tighten_bounds() (graphtage.edit method)": [[3, "graphtage.Edit.tighten_bounds"]], "tighten_bounds() (graphtage.editcollection method)": [[3, "graphtage.EditCollection.tighten_bounds"]], "tighten_bounds() (graphtage.editsequence method)": [[3, "graphtage.EditSequence.tighten_bounds"]], "tighten_bounds() (graphtage.fixedkeydictnodeedit method)": [[3, "graphtage.FixedKeyDictNodeEdit.tighten_bounds"]], "tighten_bounds() (graphtage.insert method)": [[3, "graphtage.Insert.tighten_bounds"]], "tighten_bounds() (graphtage.keyvaluepairedit method)": [[3, "graphtage.KeyValuePairEdit.tighten_bounds"]], "tighten_bounds() (graphtage.match method)": [[3, "graphtage.Match.tighten_bounds"]], "tighten_bounds() (graphtage.possibleedits method)": [[3, "graphtage.PossibleEdits.tighten_bounds"]], "tighten_bounds() (graphtage.remove method)": [[3, "graphtage.Remove.tighten_bounds"]], "tighten_bounds() (graphtage.replace method)": [[3, "graphtage.Replace.tighten_bounds"]], "tighten_bounds() (graphtage.stringedit method)": [[3, "graphtage.StringEdit.tighten_bounds"]], "to_insert (graphtage.insert property)": [[3, "graphtage.Insert.to_insert"]], "to_obj() (graphtage.boolnode method)": [[3, "graphtage.BoolNode.to_obj"]], "to_obj() (graphtage.containernode method)": [[3, "graphtage.ContainerNode.to_obj"]], "to_obj() (graphtage.dictnode method)": [[3, "graphtage.DictNode.to_obj"]], "to_obj() (graphtage.fixedkeydictnode method)": [[3, "graphtage.FixedKeyDictNode.to_obj"]], "to_obj() (graphtage.floatnode method)": [[3, "graphtage.FloatNode.to_obj"]], "to_obj() (graphtage.integernode method)": [[3, "graphtage.IntegerNode.to_obj"]], "to_obj() (graphtage.keyvaluepairnode method)": [[3, "graphtage.KeyValuePairNode.to_obj"]], "to_obj() (graphtage.leafnode method)": [[3, "graphtage.LeafNode.to_obj"]], "to_obj() (graphtage.listnode method)": [[3, "graphtage.ListNode.to_obj"]], "to_obj() (graphtage.mappingnode method)": [[3, "graphtage.MappingNode.to_obj"]], "to_obj() (graphtage.multisetnode method)": [[3, "graphtage.MultiSetNode.to_obj"]], "to_obj() (graphtage.nullnode method)": [[3, "graphtage.NullNode.to_obj"]], "to_obj() (graphtage.stringnode method)": [[3, "graphtage.StringNode.to_obj"]], "to_obj() (graphtage.treenode method)": [[3, "graphtage.TreeNode.to_obj"]], "total_size (graphtage.boolnode property)": [[3, "graphtage.BoolNode.total_size"]], "total_size (graphtage.containernode property)": [[3, "graphtage.ContainerNode.total_size"]], "total_size (graphtage.dictnode property)": [[3, "graphtage.DictNode.total_size"]], "total_size (graphtage.fixedkeydictnode property)": [[3, "graphtage.FixedKeyDictNode.total_size"]], "total_size (graphtage.floatnode property)": [[3, "graphtage.FloatNode.total_size"]], "total_size (graphtage.integernode property)": [[3, "graphtage.IntegerNode.total_size"]], "total_size (graphtage.keyvaluepairnode property)": [[3, "graphtage.KeyValuePairNode.total_size"]], "total_size (graphtage.leafnode property)": [[3, "graphtage.LeafNode.total_size"]], "total_size (graphtage.listnode property)": [[3, "graphtage.ListNode.total_size"]], "total_size (graphtage.mappingnode property)": [[3, "graphtage.MappingNode.total_size"]], "total_size (graphtage.multisetnode property)": [[3, "graphtage.MultiSetNode.total_size"]], "total_size (graphtage.nullnode property)": [[3, "graphtage.NullNode.total_size"]], "total_size (graphtage.stringnode property)": [[3, "graphtage.StringNode.total_size"]], "total_size (graphtage.treenode property)": [[3, "graphtage.TreeNode.total_size"]], "valid (graphtage.abstractcompoundedit property)": [[3, "graphtage.AbstractCompoundEdit.valid"]], "valid (graphtage.abstractedit property)": [[3, "graphtage.AbstractEdit.valid"]], "valid (graphtage.compoundedit property)": [[3, "graphtage.CompoundEdit.valid"]], "valid (graphtage.constantcostedit property)": [[3, "graphtage.ConstantCostEdit.valid"]], "valid (graphtage.edit property)": [[3, "graphtage.Edit.valid"]], "valid (graphtage.editcollection property)": [[3, "graphtage.EditCollection.valid"]], "valid (graphtage.editsequence property)": [[3, "graphtage.EditSequence.valid"]], "valid (graphtage.fixedkeydictnodeedit property)": [[3, "graphtage.FixedKeyDictNodeEdit.valid"]], "valid (graphtage.insert property)": [[3, "graphtage.Insert.valid"]], "valid (graphtage.keyvaluepairedit property)": [[3, "graphtage.KeyValuePairEdit.valid"]], "valid (graphtage.match property)": [[3, "graphtage.Match.valid"]], "valid (graphtage.possibleedits property)": [[3, "graphtage.PossibleEdits.valid"]], "valid (graphtage.remove property)": [[3, "graphtage.Remove.valid"]], "valid (graphtage.replace property)": [[3, "graphtage.Replace.valid"]], "valid (graphtage.stringedit property)": [[3, "graphtage.StringEdit.valid"]], "write_char() (graphtage.stringformatter method)": [[3, "graphtage.StringFormatter.write_char"]], "write_end_quote() (graphtage.stringformatter method)": [[3, "graphtage.StringFormatter.write_end_quote"]], "write_start_quote() (graphtage.stringformatter method)": [[3, "graphtage.StringFormatter.write_start_quote"]], "assignment (class in graphtage.ast)": [[4, "graphtage.ast.Assignment"]], "call (class in graphtage.ast)": [[4, "graphtage.ast.Call"]], "callarguments (class in graphtage.ast)": [[4, "graphtage.ast.CallArguments"]], "callkeywords (class in graphtage.ast)": [[4, "graphtage.ast.CallKeywords"]], "import (class in graphtage.ast)": [[4, "graphtage.ast.Import"]], "keywordargument (class in graphtage.ast)": [[4, "graphtage.ast.KeywordArgument"]], "module (class in graphtage.ast)": [[4, "graphtage.ast.Module"]], "subscript (class in graphtage.ast)": [[4, "graphtage.ast.Subscript"]], "__contains__() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.__contains__"]], "__eq__() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.__eq__"]], "__getitem__() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.__getitem__"]], "__init__() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.__init__"]], "__init__() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.__init__"]], "__init__() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.__init__"]], "__init__() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.__init__"]], "__init__() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.__init__"]], "__init__() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.__init__"]], "__init__() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.__init__"]], "__init__() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.__init__"]], "__iter__() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.__iter__"]], "__iter__() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.__iter__"]], "__len__() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.__len__"]], "__len__() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.__len__"]], "__lt__() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.__lt__"]], "add_edit_modifier() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.add_edit_modifier"]], "all_children_are_leaves() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.all_children_are_leaves"]], "args (graphtage.ast.call attribute)": [[4, "graphtage.ast.Call.args"]], "calculate_total_size() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.calculate_total_size"]], "calculate_total_size() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.calculate_total_size"]], "calculate_total_size() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.calculate_total_size"]], "calculate_total_size() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.calculate_total_size"]], "calculate_total_size() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.calculate_total_size"]], "calculate_total_size() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.calculate_total_size"]], "calculate_total_size() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.calculate_total_size"]], "calculate_total_size() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.calculate_total_size"]], "children() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.children"]], "children() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.children"]], "children() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.children"]], "children() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.children"]], "children() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.children"]], "children() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.children"]], "children() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.children"]], "children() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.children"]], "container_type (graphtage.ast.callarguments property)": [[4, "graphtage.ast.CallArguments.container_type"]], "container_type (graphtage.ast.callkeywords property)": [[4, "graphtage.ast.CallKeywords.container_type"]], "container_type (graphtage.ast.module property)": [[4, "graphtage.ast.Module.container_type"]], "copy() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.copy"]], "copy() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.copy"]], "copy() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.copy"]], "copy() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.copy"]], "copy() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.copy"]], "copy() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.copy"]], "copy() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.copy"]], "copy() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.copy"]], "copy_from() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.copy_from"]], "copy_from() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.copy_from"]], "copy_from() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.copy_from"]], "copy_from() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.copy_from"]], "copy_from() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.copy_from"]], "copy_from() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.copy_from"]], "copy_from() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.copy_from"]], "copy_from() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.copy_from"]], "dfs() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.dfs"]], "dfs() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.dfs"]], "dfs() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.dfs"]], "dfs() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.dfs"]], "dfs() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.dfs"]], "dfs() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.dfs"]], "dfs() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.dfs"]], "dfs() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.dfs"]], "diff() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.diff"]], "diff() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.diff"]], "diff() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.diff"]], "diff() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.diff"]], "diff() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.diff"]], "diff() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.diff"]], "diff() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.diff"]], "diff() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.diff"]], "editable_dict() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.editable_dict"]], "editable_dict() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.editable_dict"]], "editable_dict() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.editable_dict"]], "editable_dict() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.editable_dict"]], "editable_dict() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.editable_dict"]], "editable_dict() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.editable_dict"]], "editable_dict() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.editable_dict"]], "editable_dict() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.editable_dict"]], "edited (graphtage.ast.assignment property)": [[4, "graphtage.ast.Assignment.edited"]], "edited (graphtage.ast.call property)": [[4, "graphtage.ast.Call.edited"]], "edited (graphtage.ast.callarguments property)": [[4, "graphtage.ast.CallArguments.edited"]], "edited (graphtage.ast.callkeywords property)": [[4, "graphtage.ast.CallKeywords.edited"]], "edited (graphtage.ast.import property)": [[4, "graphtage.ast.Import.edited"]], "edited (graphtage.ast.keywordargument property)": [[4, "graphtage.ast.KeywordArgument.edited"]], "edited (graphtage.ast.module property)": [[4, "graphtage.ast.Module.edited"]], "edited (graphtage.ast.subscript property)": [[4, "graphtage.ast.Subscript.edited"]], "edits() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.edits"]], "edits() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.edits"]], "edits() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.edits"]], "edits() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.edits"]], "edits() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.edits"]], "edits() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.edits"]], "edits() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.edits"]], "edits() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.edits"]], "from_dict() (graphtage.ast.callkeywords class method)": [[4, "graphtage.ast.CallKeywords.from_dict"]], "from_name (graphtage.ast.import attribute)": [[4, "graphtage.ast.Import.from_name"]], "func (graphtage.ast.call attribute)": [[4, "graphtage.ast.Call.func"]], "get_all_edit_contexts() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.get_all_edit_contexts"]], "get_all_edits() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.get_all_edits"]], "get_all_edits() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.get_all_edits"]], "get_all_edits() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.get_all_edits"]], "get_all_edits() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.get_all_edits"]], "get_all_edits() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.get_all_edits"]], "get_all_edits() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.get_all_edits"]], "get_all_edits() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.get_all_edits"]], "get_all_edits() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.get_all_edits"]], "graphtage.ast": [[4, "module-graphtage.ast"]], "is_leaf (graphtage.ast.assignment property)": [[4, "graphtage.ast.Assignment.is_leaf"]], "is_leaf (graphtage.ast.call property)": [[4, "graphtage.ast.Call.is_leaf"]], "is_leaf (graphtage.ast.callarguments property)": [[4, "graphtage.ast.CallArguments.is_leaf"]], "is_leaf (graphtage.ast.callkeywords property)": [[4, "graphtage.ast.CallKeywords.is_leaf"]], "is_leaf (graphtage.ast.import property)": [[4, "graphtage.ast.Import.is_leaf"]], "is_leaf (graphtage.ast.keywordargument property)": [[4, "graphtage.ast.KeywordArgument.is_leaf"]], "is_leaf (graphtage.ast.module property)": [[4, "graphtage.ast.Module.is_leaf"]], "is_leaf (graphtage.ast.subscript property)": [[4, "graphtage.ast.Subscript.is_leaf"]], "items() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.items"]], "items() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.items"]], "items() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.items"]], "items() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.items"]], "items() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.items"]], "kwargs (graphtage.ast.call attribute)": [[4, "graphtage.ast.Call.kwargs"]], "make_edited() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.make_edited"]], "make_edited() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.make_edited"]], "make_edited() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.make_edited"]], "make_edited() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.make_edited"]], "make_edited() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.make_edited"]], "make_edited() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.make_edited"]], "make_edited() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.make_edited"]], "make_edited() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.make_edited"]], "make_key_value_pair_node() (graphtage.ast.callkeywords class method)": [[4, "graphtage.ast.CallKeywords.make_key_value_pair_node"]], "names (graphtage.ast.import attribute)": [[4, "graphtage.ast.Import.names"]], "parent (graphtage.ast.assignment property)": [[4, "graphtage.ast.Assignment.parent"]], "parent (graphtage.ast.call property)": [[4, "graphtage.ast.Call.parent"]], "parent (graphtage.ast.callarguments property)": [[4, "graphtage.ast.CallArguments.parent"]], "parent (graphtage.ast.callkeywords property)": [[4, "graphtage.ast.CallKeywords.parent"]], "parent (graphtage.ast.import property)": [[4, "graphtage.ast.Import.parent"]], "parent (graphtage.ast.keywordargument property)": [[4, "graphtage.ast.KeywordArgument.parent"]], "parent (graphtage.ast.module property)": [[4, "graphtage.ast.Module.parent"]], "parent (graphtage.ast.subscript property)": [[4, "graphtage.ast.Subscript.parent"]], "post_init() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.post_init"]], "post_init() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.post_init"]], "post_init() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.post_init"]], "post_init() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.post_init"]], "print() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.print"]], "print() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.print"]], "print() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.print"]], "print() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.print"]], "print() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.print"]], "print() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.print"]], "print() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.print"]], "print() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.print"]], "print_parent_context() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.print_parent_context"]], "print_parent_context() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.print_parent_context"]], "print_parent_context() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.print_parent_context"]], "print_parent_context() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.print_parent_context"]], "print_parent_context() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.print_parent_context"]], "print_parent_context() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.print_parent_context"]], "print_parent_context() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.print_parent_context"]], "print_parent_context() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.print_parent_context"]], "slice (graphtage.ast.subscript attribute)": [[4, "graphtage.ast.Subscript.slice"]], "targets (graphtage.ast.assignment attribute)": [[4, "graphtage.ast.Assignment.targets"]], "to_obj() (graphtage.ast.assignment method)": [[4, "graphtage.ast.Assignment.to_obj"]], "to_obj() (graphtage.ast.call method)": [[4, "graphtage.ast.Call.to_obj"]], "to_obj() (graphtage.ast.callarguments method)": [[4, "graphtage.ast.CallArguments.to_obj"]], "to_obj() (graphtage.ast.callkeywords method)": [[4, "graphtage.ast.CallKeywords.to_obj"]], "to_obj() (graphtage.ast.import method)": [[4, "graphtage.ast.Import.to_obj"]], "to_obj() (graphtage.ast.keywordargument method)": [[4, "graphtage.ast.KeywordArgument.to_obj"]], "to_obj() (graphtage.ast.module method)": [[4, "graphtage.ast.Module.to_obj"]], "to_obj() (graphtage.ast.subscript method)": [[4, "graphtage.ast.Subscript.to_obj"]], "total_size (graphtage.ast.assignment property)": [[4, "graphtage.ast.Assignment.total_size"]], "total_size (graphtage.ast.call property)": [[4, "graphtage.ast.Call.total_size"]], "total_size (graphtage.ast.callarguments property)": [[4, "graphtage.ast.CallArguments.total_size"]], "total_size (graphtage.ast.callkeywords property)": [[4, "graphtage.ast.CallKeywords.total_size"]], "total_size (graphtage.ast.import property)": [[4, "graphtage.ast.Import.total_size"]], "total_size (graphtage.ast.keywordargument property)": [[4, "graphtage.ast.KeywordArgument.total_size"]], "total_size (graphtage.ast.module property)": [[4, "graphtage.ast.Module.total_size"]], "total_size (graphtage.ast.subscript property)": [[4, "graphtage.ast.Subscript.total_size"]], "value (graphtage.ast.assignment attribute)": [[4, "graphtage.ast.Assignment.value"]], "value (graphtage.ast.subscript attribute)": [[4, "graphtage.ast.Subscript.value"]], "bounded (class in graphtage.bounds)": [[5, "graphtage.bounds.Bounded"]], "boundedcomparator (class in graphtage.bounds)": [[5, "graphtage.bounds.BoundedComparator"]], "constantbound (class in graphtage.bounds)": [[5, "graphtage.bounds.ConstantBound"]], "infinity (class in graphtage.bounds)": [[5, "graphtage.bounds.Infinity"]], "negative_infinity (in module graphtage.bounds)": [[5, "graphtage.bounds.NEGATIVE_INFINITY"]], "positive_infinity (in module graphtage.bounds)": [[5, "graphtage.bounds.POSITIVE_INFINITY"]], "range (class in graphtage.bounds)": [[5, "graphtage.bounds.Range"]], "__init__() (graphtage.bounds.bounded method)": [[5, "graphtage.bounds.Bounded.__init__"]], "__init__() (graphtage.bounds.boundedcomparator method)": [[5, "graphtage.bounds.BoundedComparator.__init__"]], "__init__() (graphtage.bounds.constantbound method)": [[5, "graphtage.bounds.ConstantBound.__init__"]], "__init__() (graphtage.bounds.infinity method)": [[5, "graphtage.bounds.Infinity.__init__"]], "__init__() (graphtage.bounds.range method)": [[5, "graphtage.bounds.Range.__init__"]], "__lt__() (graphtage.bounds.boundedcomparator method)": [[5, "graphtage.bounds.BoundedComparator.__lt__"]], "bounded (graphtage.bounds.boundedcomparator attribute)": [[5, "graphtage.bounds.BoundedComparator.bounded"]], "bounds() (graphtage.bounds.bounded method)": [[5, "graphtage.bounds.Bounded.bounds"]], "bounds() (graphtage.bounds.constantbound method)": [[5, "graphtage.bounds.ConstantBound.bounds"]], "definitive() (graphtage.bounds.range method)": [[5, "graphtage.bounds.Range.definitive"]], "dominates() (graphtage.bounds.range method)": [[5, "graphtage.bounds.Range.dominates"]], "finite (graphtage.bounds.range property)": [[5, "graphtage.bounds.Range.finite"]], "graphtage.bounds": [[5, "module-graphtage.bounds"]], "intersect() (graphtage.bounds.range method)": [[5, "graphtage.bounds.Range.intersect"]], "lower_bound (graphtage.bounds.range attribute)": [[5, "graphtage.bounds.Range.lower_bound"]], "make_distinct() (in module graphtage.bounds)": [[5, "graphtage.bounds.make_distinct"]], "min_bounded() (in module graphtage.bounds)": [[5, "graphtage.bounds.min_bounded"]], "positive (graphtage.bounds.infinity property)": [[5, "graphtage.bounds.Infinity.positive"]], "repeat_until_tightened() (in module graphtage.bounds)": [[5, "graphtage.bounds.repeat_until_tightened"]], "sort() (in module graphtage.bounds)": [[5, "graphtage.bounds.sort"]], "tighten_bounds() (graphtage.bounds.bounded method)": [[5, "graphtage.bounds.Bounded.tighten_bounds"]], "tighten_bounds() (graphtage.bounds.constantbound method)": [[5, "graphtage.bounds.ConstantBound.tighten_bounds"]], "to_interval() (graphtage.bounds.range method)": [[5, "graphtage.bounds.Range.to_interval"]], "upper_bound (graphtage.bounds.range attribute)": [[5, "graphtage.bounds.Range.upper_bound"]], "builders (graphtage.builder.basicbuilder attribute)": [[6, "graphtage.builder.BasicBuilder.BUILDERS"]], "builders (graphtage.builder.builder attribute)": [[6, "graphtage.builder.Builder.BUILDERS"]], "basicbuilder (class in graphtage.builder)": [[6, "graphtage.builder.BasicBuilder"]], "builder (class in graphtage.builder)": [[6, "graphtage.builder.Builder"]], "cyclicreference (class in graphtage.builder)": [[6, "graphtage.builder.CyclicReference"]], "expanders (graphtage.builder.basicbuilder attribute)": [[6, "graphtage.builder.BasicBuilder.EXPANDERS"]], "expanders (graphtage.builder.builder attribute)": [[6, "graphtage.builder.Builder.EXPANDERS"]], "__init__() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.__init__"]], "__init__() (graphtage.builder.builder method)": [[6, "graphtage.builder.Builder.__init__"]], "__init__() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.__init__"]], "_resolve() (graphtage.builder.basicbuilder class method)": [[6, "graphtage.builder.BasicBuilder._resolve"]], "_resolve() (graphtage.builder.builder class method)": [[6, "graphtage.builder.Builder._resolve"]], "add_edit_modifier() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.add_edit_modifier"]], "build() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.build"]], "build() (graphtage.builder.builder method)": [[6, "graphtage.builder.Builder.build"]], "build_bool() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.build_bool"]], "build_dict() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.build_dict"]], "build_float() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.build_float"]], "build_int() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.build_int"]], "build_list() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.build_list"]], "build_none() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.build_none"]], "build_set() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.build_set"]], "build_str() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.build_str"]], "build_tree() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.build_tree"]], "build_tree() (graphtage.builder.builder method)": [[6, "graphtage.builder.Builder.build_tree"]], "builder() (graphtage.builder.basicbuilder static method)": [[6, "graphtage.builder.BasicBuilder.builder"]], "builder() (graphtage.builder.builder static method)": [[6, "graphtage.builder.Builder.builder"]], "calculate_total_size() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.calculate_total_size"]], "children() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.children"]], "copy() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.copy"]], "copy_from() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.copy_from"]], "default_builder() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.default_builder"]], "default_builder() (graphtage.builder.builder method)": [[6, "graphtage.builder.Builder.default_builder"]], "default_expander() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.default_expander"]], "default_expander() (graphtage.builder.builder method)": [[6, "graphtage.builder.Builder.default_expander"]], "dfs() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.dfs"]], "diff() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.diff"]], "editable_dict() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.editable_dict"]], "edited (graphtage.builder.cyclicreference property)": [[6, "graphtage.builder.CyclicReference.edited"]], "edits() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.edits"]], "expand() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.expand"]], "expand() (graphtage.builder.builder method)": [[6, "graphtage.builder.Builder.expand"]], "expand_dict() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.expand_dict"]], "expand_list() (graphtage.builder.basicbuilder method)": [[6, "graphtage.builder.BasicBuilder.expand_list"]], "expander() (graphtage.builder.basicbuilder static method)": [[6, "graphtage.builder.BasicBuilder.expander"]], "expander() (graphtage.builder.builder static method)": [[6, "graphtage.builder.Builder.expander"]], "get_all_edit_contexts() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.get_all_edit_contexts"]], "get_all_edits() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.get_all_edits"]], "graphtage.builder": [[6, "module-graphtage.builder"]], "is_leaf (graphtage.builder.cyclicreference property)": [[6, "graphtage.builder.CyclicReference.is_leaf"]], "make_edited() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.make_edited"]], "parent (graphtage.builder.cyclicreference property)": [[6, "graphtage.builder.CyclicReference.parent"]], "print() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.print"]], "print_parent_context() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.print_parent_context"]], "resolve_builder() (graphtage.builder.basicbuilder class method)": [[6, "graphtage.builder.BasicBuilder.resolve_builder"]], "resolve_builder() (graphtage.builder.builder class method)": [[6, "graphtage.builder.Builder.resolve_builder"]], "resolve_expander() (graphtage.builder.basicbuilder class method)": [[6, "graphtage.builder.BasicBuilder.resolve_expander"]], "resolve_expander() (graphtage.builder.builder class method)": [[6, "graphtage.builder.Builder.resolve_expander"]], "to_obj() (graphtage.builder.cyclicreference method)": [[6, "graphtage.builder.CyclicReference.to_obj"]], "total_size (graphtage.builder.cyclicreference property)": [[6, "graphtage.builder.CyclicReference.total_size"]], "conditionalmatcher (class in graphtage.constraints)": [[7, "graphtage.constraints.ConditionalMatcher"]], "matchif (class in graphtage.constraints)": [[7, "graphtage.constraints.MatchIf"]], "matchunless (class in graphtage.constraints)": [[7, "graphtage.constraints.MatchUnless"]], "__init__() (graphtage.constraints.conditionalmatcher method)": [[7, "graphtage.constraints.ConditionalMatcher.__init__"]], "__init__() (graphtage.constraints.matchif method)": [[7, "graphtage.constraints.MatchIf.__init__"]], "__init__() (graphtage.constraints.matchunless method)": [[7, "graphtage.constraints.MatchUnless.__init__"]], "apply() (graphtage.constraints.conditionalmatcher class method)": [[7, "graphtage.constraints.ConditionalMatcher.apply"]], "apply() (graphtage.constraints.matchif class method)": [[7, "graphtage.constraints.MatchIf.apply"]], "apply() (graphtage.constraints.matchunless class method)": [[7, "graphtage.constraints.MatchUnless.apply"]], "graphtage.constraints": [[7, "module-graphtage.constraints"]], "csv (class in graphtage.csv)": [[8, "graphtage.csv.CSV"]], "csvformatter (class in graphtage.csv)": [[8, "graphtage.csv.CSVFormatter"]], "csvnode (class in graphtage.csv)": [[8, "graphtage.csv.CSVNode"]], "csvrow (class in graphtage.csv)": [[8, "graphtage.csv.CSVRow"]], "csvrowformatter (class in graphtage.csv)": [[8, "graphtage.csv.CSVRowFormatter"]], "csvrows (class in graphtage.csv)": [[8, "graphtage.csv.CSVRows"]], "default_instance (graphtage.csv.csvformatter attribute)": [[8, "graphtage.csv.CSVFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.csv.csvrowformatter attribute)": [[8, "graphtage.csv.CSVRowFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.csv.csvrows attribute)": [[8, "graphtage.csv.CSVRows.DEFAULT_INSTANCE"]], "__init__() (graphtage.csv.csv method)": [[8, "graphtage.csv.CSV.__init__"]], "__init__() (graphtage.csv.csvformatter method)": [[8, "graphtage.csv.CSVFormatter.__init__"]], "__init__() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.__init__"]], "__init__() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.__init__"]], "__init__() (graphtage.csv.csvrowformatter method)": [[8, "graphtage.csv.CSVRowFormatter.__init__"]], "__init__() (graphtage.csv.csvrows method)": [[8, "graphtage.csv.CSVRows.__init__"]], "__iter__() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.__iter__"]], "__iter__() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.__iter__"]], "__len__() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.__len__"]], "__len__() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.__len__"]], "__new__() (graphtage.csv.csvformatter static method)": [[8, "graphtage.csv.CSVFormatter.__new__"]], "__new__() (graphtage.csv.csvrowformatter static method)": [[8, "graphtage.csv.CSVRowFormatter.__new__"]], "__new__() (graphtage.csv.csvrows static method)": [[8, "graphtage.csv.CSVRows.__new__"]], "add_edit_modifier() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.add_edit_modifier"]], "all_children_are_leaves() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.all_children_are_leaves"]], "build_tree() (graphtage.csv.csv method)": [[8, "graphtage.csv.CSV.build_tree"]], "build_tree() (in module graphtage.csv)": [[8, "graphtage.csv.build_tree"]], "build_tree_handling_errors() (graphtage.csv.csv method)": [[8, "graphtage.csv.CSV.build_tree_handling_errors"]], "calculate_total_size() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.calculate_total_size"]], "calculate_total_size() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.calculate_total_size"]], "children() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.children"]], "children() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.children"]], "container_type (graphtage.csv.csvnode property)": [[8, "graphtage.csv.CSVNode.container_type"]], "container_type (graphtage.csv.csvrow property)": [[8, "graphtage.csv.CSVRow.container_type"]], "copy() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.copy"]], "copy() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.copy"]], "copy_from() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.copy_from"]], "copy_from() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.copy_from"]], "default_instance (graphtage.csv.csv attribute)": [[8, "graphtage.csv.CSV.default_instance"]], "dfs() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.dfs"]], "dfs() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.dfs"]], "diff() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.diff"]], "diff() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.diff"]], "edit_print() (graphtage.csv.csvrowformatter method)": [[8, "graphtage.csv.CSVRowFormatter.edit_print"]], "edit_print() (graphtage.csv.csvrows method)": [[8, "graphtage.csv.CSVRows.edit_print"]], "editable_dict() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.editable_dict"]], "editable_dict() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.editable_dict"]], "edited (graphtage.csv.csvnode property)": [[8, "graphtage.csv.CSVNode.edited"]], "edited (graphtage.csv.csvrow property)": [[8, "graphtage.csv.CSVRow.edited"]], "edits() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.edits"]], "edits() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.edits"]], "get_all_edit_contexts() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.get_all_edit_contexts"]], "get_all_edits() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.get_all_edits"]], "get_all_edits() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.get_all_edits"]], "get_default_formatter() (graphtage.csv.csv method)": [[8, "graphtage.csv.CSV.get_default_formatter"]], "get_formatter() (graphtage.csv.csvformatter method)": [[8, "graphtage.csv.CSVFormatter.get_formatter"]], "get_formatter() (graphtage.csv.csvrowformatter method)": [[8, "graphtage.csv.CSVRowFormatter.get_formatter"]], "get_formatter() (graphtage.csv.csvrows method)": [[8, "graphtage.csv.CSVRows.get_formatter"]], "graphtage.csv": [[8, "module-graphtage.csv"]], "is_leaf (graphtage.csv.csvnode property)": [[8, "graphtage.csv.CSVNode.is_leaf"]], "is_leaf (graphtage.csv.csvrow property)": [[8, "graphtage.csv.CSVRow.is_leaf"]], "is_partial (graphtage.csv.csvformatter attribute)": [[8, "graphtage.csv.CSVFormatter.is_partial"]], "is_partial (graphtage.csv.csvrowformatter attribute)": [[8, "graphtage.csv.CSVRowFormatter.is_partial"]], "is_partial (graphtage.csv.csvrows attribute)": [[8, "graphtage.csv.CSVRows.is_partial"]], "item_newline() (graphtage.csv.csvrowformatter method)": [[8, "graphtage.csv.CSVRowFormatter.item_newline"]], "item_newline() (graphtage.csv.csvrows method)": [[8, "graphtage.csv.CSVRows.item_newline"]], "items_indent() (graphtage.csv.csvrowformatter method)": [[8, "graphtage.csv.CSVRowFormatter.items_indent"]], "items_indent() (graphtage.csv.csvrows method)": [[8, "graphtage.csv.CSVRows.items_indent"]], "make_edited() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.make_edited"]], "make_edited() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.make_edited"]], "parent (graphtage.csv.csvformatter attribute)": [[8, "graphtage.csv.CSVFormatter.parent"]], "parent (graphtage.csv.csvnode property)": [[8, "graphtage.csv.CSVNode.parent"]], "parent (graphtage.csv.csvrow property)": [[8, "graphtage.csv.CSVRow.parent"]], "parent (graphtage.csv.csvrowformatter attribute)": [[8, "graphtage.csv.CSVRowFormatter.parent"]], "parent (graphtage.csv.csvrows attribute)": [[8, "graphtage.csv.CSVRows.parent"]], "print() (graphtage.csv.csvformatter method)": [[8, "graphtage.csv.CSVFormatter.print"]], "print() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.print"]], "print() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.print"]], "print() (graphtage.csv.csvrowformatter method)": [[8, "graphtage.csv.CSVRowFormatter.print"]], "print() (graphtage.csv.csvrows method)": [[8, "graphtage.csv.CSVRows.print"]], "print_csvnode() (graphtage.csv.csvrows method)": [[8, "graphtage.csv.CSVRows.print_CSVNode"]], "print_csvrow() (graphtage.csv.csvrowformatter method)": [[8, "graphtage.csv.CSVRowFormatter.print_CSVRow"]], "print_leafnode() (graphtage.csv.csvformatter method)": [[8, "graphtage.csv.CSVFormatter.print_LeafNode"]], "print_sequencenode() (graphtage.csv.csvrowformatter method)": [[8, "graphtage.csv.CSVRowFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.csv.csvrows method)": [[8, "graphtage.csv.CSVRows.print_SequenceNode"]], "print_parent_context() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.print_parent_context"]], "print_parent_context() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.print_parent_context"]], "root (graphtage.csv.csvformatter property)": [[8, "graphtage.csv.CSVFormatter.root"]], "root (graphtage.csv.csvrowformatter property)": [[8, "graphtage.csv.CSVRowFormatter.root"]], "root (graphtage.csv.csvrows property)": [[8, "graphtage.csv.CSVRows.root"]], "sub_format_types (graphtage.csv.csvformatter attribute)": [[8, "graphtage.csv.CSVFormatter.sub_format_types"]], "sub_format_types (graphtage.csv.csvrowformatter attribute)": [[8, "graphtage.csv.CSVRowFormatter.sub_format_types"]], "sub_format_types (graphtage.csv.csvrows attribute)": [[8, "graphtage.csv.CSVRows.sub_format_types"]], "sub_formatters (graphtage.csv.csvformatter attribute)": [[8, "graphtage.csv.CSVFormatter.sub_formatters"]], "sub_formatters (graphtage.csv.csvrowformatter attribute)": [[8, "graphtage.csv.CSVRowFormatter.sub_formatters"]], "sub_formatters (graphtage.csv.csvrows attribute)": [[8, "graphtage.csv.CSVRows.sub_formatters"]], "to_obj() (graphtage.csv.csvnode method)": [[8, "graphtage.csv.CSVNode.to_obj"]], "to_obj() (graphtage.csv.csvrow method)": [[8, "graphtage.csv.CSVRow.to_obj"]], "total_size (graphtage.csv.csvnode property)": [[8, "graphtage.csv.CSVNode.total_size"]], "total_size (graphtage.csv.csvrow property)": [[8, "graphtage.csv.CSVRow.total_size"]], "dataclassedit (class in graphtage.dataclasses)": [[9, "graphtage.dataclasses.DataClassEdit"]], "dataclassnode (class in graphtage.dataclasses)": [[9, "graphtage.dataclasses.DataClassNode"]], "__init__() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit.__init__"]], "__init__() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.__init__"]], "__iter__() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit.__iter__"]], "__lt__() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit.__lt__"]], "_debug_tighten_bounds() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit._debug_tighten_bounds"]], "add_edit_modifier() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.add_edit_modifier"]], "all_children_are_leaves() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.all_children_are_leaves"]], "bounds() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit.bounds"]], "calculate_total_size() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.calculate_total_size"]], "children() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.children"]], "copy() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.copy"]], "copy_from() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.copy_from"]], "dfs() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.dfs"]], "diff() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.diff"]], "editable_dict() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.editable_dict"]], "edited (graphtage.dataclasses.dataclassnode property)": [[9, "graphtage.dataclasses.DataClassNode.edited"]], "edits() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit.edits"]], "edits() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.edits"]], "from_node (graphtage.dataclasses.dataclassedit attribute)": [[9, "graphtage.dataclasses.DataClassEdit.from_node"]], "get_all_edit_contexts() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.get_all_edits"]], "graphtage.dataclasses": [[9, "module-graphtage.dataclasses"]], "has_non_zero_cost() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit.has_non_zero_cost"]], "initial_bounds (graphtage.dataclasses.dataclassedit attribute)": [[9, "graphtage.dataclasses.DataClassEdit.initial_bounds"]], "is_complete() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit.is_complete"]], "is_leaf (graphtage.dataclasses.dataclassnode property)": [[9, "graphtage.dataclasses.DataClassNode.is_leaf"]], "items() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.items"]], "make_edited() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.make_edited"]], "on_diff() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit.on_diff"]], "parent (graphtage.dataclasses.dataclassnode property)": [[9, "graphtage.dataclasses.DataClassNode.parent"]], "post_init() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.post_init"]], "print() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit.print"]], "print() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.print"]], "print_parent_context() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.print_parent_context"]], "tighten_bounds() (graphtage.dataclasses.dataclassedit method)": [[9, "graphtage.dataclasses.DataClassEdit.tighten_bounds"]], "to_obj() (graphtage.dataclasses.dataclassnode method)": [[9, "graphtage.dataclasses.DataClassNode.to_obj"]], "total_size (graphtage.dataclasses.dataclassnode property)": [[9, "graphtage.dataclasses.DataClassNode.total_size"]], "valid (graphtage.dataclasses.dataclassedit property)": [[9, "graphtage.dataclasses.DataClassEdit.valid"]], "debuggable (class in graphtage.debug)": [[10, "graphtage.debug.Debuggable"]], "__init__() (graphtage.debug.debuggable method)": [[10, "graphtage.debug.Debuggable.__init__"]], "graphtage.debug": [[10, "module-graphtage.debug"]], "addition (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.ADDITION"]], "bitwise_and (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.BITWISE_AND"]], "bitwise_left_shift (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.BITWISE_LEFT_SHIFT"]], "bitwise_not (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.BITWISE_NOT"]], "bitwise_or (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.BITWISE_OR"]], "bitwise_right_shift (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.BITWISE_RIGHT_SHIFT"]], "bitwise_xor (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.BITWISE_XOR"]], "closebracket (class in graphtage.expressions)": [[11, "graphtage.expressions.CloseBracket"]], "closeparen (class in graphtage.expressions)": [[11, "graphtage.expressions.CloseParen"]], "collectioninfo (class in graphtage.expressions)": [[11, "graphtage.expressions.CollectionInfo"]], "comma (class in graphtage.expressions)": [[11, "graphtage.expressions.Comma"]], "default_globals (in module graphtage.expressions)": [[11, "graphtage.expressions.DEFAULT_GLOBALS"]], "division (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.DIVISION"]], "equals (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.EQUALS"]], "expression (class in graphtage.expressions)": [[11, "graphtage.expressions.Expression"]], "function_call (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.FUNCTION_CALL"]], "fixedsizecollection (class in graphtage.expressions)": [[11, "graphtage.expressions.FixedSizeCollection"]], "floattoken (class in graphtage.expressions)": [[11, "graphtage.expressions.FloatToken"]], "functioncall (class in graphtage.expressions)": [[11, "graphtage.expressions.FunctionCall"]], "getitem (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.GETITEM"]], "greater_than (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.GREATER_THAN"]], "greater_than_equal (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.GREATER_THAN_EQUAL"]], "identifier_bytes (in module graphtage.expressions)": [[11, "graphtage.expressions.IDENTIFIER_BYTES"]], "in (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.IN"]], "int_division (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.INT_DIVISION"]], "identifiertoken (class in graphtage.expressions)": [[11, "graphtage.expressions.IdentifierToken"]], "integertoken (class in graphtage.expressions)": [[11, "graphtage.expressions.IntegerToken"]], "less_than (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.LESS_THAN"]], "less_than_equal (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.LESS_THAN_EQUAL"]], "logical_and (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.LOGICAL_AND"]], "logical_not (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.LOGICAL_NOT"]], "logical_or (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.LOGICAL_OR"]], "member_access (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.MEMBER_ACCESS"]], "multiplication (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.MULTIPLICATION"]], "not_equal (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.NOT_EQUAL"]], "numerictoken (class in graphtage.expressions)": [[11, "graphtage.expressions.NumericToken"]], "operators_by_name (in module graphtage.expressions)": [[11, "graphtage.expressions.OPERATORS_BY_NAME"]], "openbracket (class in graphtage.expressions)": [[11, "graphtage.expressions.OpenBracket"]], "openparen (class in graphtage.expressions)": [[11, "graphtage.expressions.OpenParen"]], "operator (class in graphtage.expressions)": [[11, "graphtage.expressions.Operator"]], "operatortoken (class in graphtage.expressions)": [[11, "graphtage.expressions.OperatorToken"]], "pairedendtoken (class in graphtage.expressions)": [[11, "graphtage.expressions.PairedEndToken"]], "pairedstarttoken (class in graphtage.expressions)": [[11, "graphtage.expressions.PairedStartToken"]], "pairedtoken (class in graphtage.expressions)": [[11, "graphtage.expressions.PairedToken"]], "parenthesis (class in graphtage.expressions)": [[11, "graphtage.expressions.Parenthesis"]], "parseerror (class in graphtage.expressions)": [[11, "graphtage.expressions.ParseError"]], "remainder (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.REMAINDER"]], "subtraction (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.SUBTRACTION"]], "stringtoken (class in graphtage.expressions)": [[11, "graphtage.expressions.StringToken"]], "ternary_conditional (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.TERNARY_CONDITIONAL"]], "ternary_else (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.TERNARY_ELSE"]], "token (class in graphtage.expressions)": [[11, "graphtage.expressions.Token"]], "tokenizer (class in graphtage.expressions)": [[11, "graphtage.expressions.Tokenizer"]], "unary_minus (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.UNARY_MINUS"]], "unary_plus (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.UNARY_PLUS"]], "__init__() (graphtage.expressions.closebracket method)": [[11, "graphtage.expressions.CloseBracket.__init__"]], "__init__() (graphtage.expressions.closeparen method)": [[11, "graphtage.expressions.CloseParen.__init__"]], "__init__() (graphtage.expressions.collectioninfo method)": [[11, "graphtage.expressions.CollectionInfo.__init__"]], "__init__() (graphtage.expressions.comma method)": [[11, "graphtage.expressions.Comma.__init__"]], "__init__() (graphtage.expressions.expression method)": [[11, "graphtage.expressions.Expression.__init__"]], "__init__() (graphtage.expressions.fixedsizecollection method)": [[11, "graphtage.expressions.FixedSizeCollection.__init__"]], "__init__() (graphtage.expressions.floattoken method)": [[11, "graphtage.expressions.FloatToken.__init__"]], "__init__() (graphtage.expressions.functioncall method)": [[11, "graphtage.expressions.FunctionCall.__init__"]], "__init__() (graphtage.expressions.identifiertoken method)": [[11, "graphtage.expressions.IdentifierToken.__init__"]], "__init__() (graphtage.expressions.integertoken method)": [[11, "graphtage.expressions.IntegerToken.__init__"]], "__init__() (graphtage.expressions.numerictoken method)": [[11, "graphtage.expressions.NumericToken.__init__"]], "__init__() (graphtage.expressions.openbracket method)": [[11, "graphtage.expressions.OpenBracket.__init__"]], "__init__() (graphtage.expressions.openparen method)": [[11, "graphtage.expressions.OpenParen.__init__"]], "__init__() (graphtage.expressions.operator method)": [[11, "graphtage.expressions.Operator.__init__"]], "__init__() (graphtage.expressions.operatortoken method)": [[11, "graphtage.expressions.OperatorToken.__init__"]], "__init__() (graphtage.expressions.pairedendtoken method)": [[11, "graphtage.expressions.PairedEndToken.__init__"]], "__init__() (graphtage.expressions.pairedstarttoken method)": [[11, "graphtage.expressions.PairedStartToken.__init__"]], "__init__() (graphtage.expressions.pairedtoken method)": [[11, "graphtage.expressions.PairedToken.__init__"]], "__init__() (graphtage.expressions.parenthesis method)": [[11, "graphtage.expressions.Parenthesis.__init__"]], "__init__() (graphtage.expressions.parseerror method)": [[11, "graphtage.expressions.ParseError.__init__"]], "__init__() (graphtage.expressions.stringtoken method)": [[11, "graphtage.expressions.StringToken.__init__"]], "__init__() (graphtage.expressions.token method)": [[11, "graphtage.expressions.Token.__init__"]], "__init__() (graphtage.expressions.tokenizer method)": [[11, "graphtage.expressions.Tokenizer.__init__"]], "__iter__() (graphtage.expressions.tokenizer method)": [[11, "graphtage.expressions.Tokenizer.__iter__"]], "args (graphtage.expressions.parseerror attribute)": [[11, "graphtage.expressions.ParseError.args"]], "arity (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.arity"]], "container_type (graphtage.expressions.fixedsizecollection attribute)": [[11, "graphtage.expressions.FixedSizeCollection.container_type"]], "discard (graphtage.expressions.openbracket attribute)": [[11, "graphtage.expressions.OpenBracket.discard"]], "discard (graphtage.expressions.openparen attribute)": [[11, "graphtage.expressions.OpenParen.discard"]], "discard (graphtage.expressions.pairedstarttoken attribute)": [[11, "graphtage.expressions.PairedStartToken.discard"]], "eval() (graphtage.expressions.expression method)": [[11, "graphtage.expressions.Expression.eval"]], "execute (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.execute"]], "expand (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.expand"]], "get_member() (in module graphtage.expressions)": [[11, "graphtage.expressions.get_member"]], "get_value() (graphtage.expressions.expression static method)": [[11, "graphtage.expressions.Expression.get_value"]], "graphtage.expressions": [[11, "module-graphtage.expressions"]], "has_next() (graphtage.expressions.tokenizer method)": [[11, "graphtage.expressions.Tokenizer.has_next"]], "infix_to_rpn() (in module graphtage.expressions)": [[11, "graphtage.expressions.infix_to_rpn"]], "is_list (graphtage.expressions.openbracket attribute)": [[11, "graphtage.expressions.OpenBracket.is_list"]], "left_associative (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.left_associative"]], "name (graphtage.expressions.closebracket attribute)": [[11, "graphtage.expressions.CloseBracket.name"]], "name (graphtage.expressions.closeparen attribute)": [[11, "graphtage.expressions.CloseParen.name"]], "name (graphtage.expressions.identifiertoken attribute)": [[11, "graphtage.expressions.IdentifierToken.name"]], "name (graphtage.expressions.openbracket attribute)": [[11, "graphtage.expressions.OpenBracket.name"]], "name (graphtage.expressions.openparen attribute)": [[11, "graphtage.expressions.OpenParen.name"]], "name (graphtage.expressions.pairedendtoken attribute)": [[11, "graphtage.expressions.PairedEndToken.name"]], "name (graphtage.expressions.pairedstarttoken attribute)": [[11, "graphtage.expressions.PairedStartToken.name"]], "name (graphtage.expressions.pairedtoken attribute)": [[11, "graphtage.expressions.PairedToken.name"]], "next() (graphtage.expressions.tokenizer method)": [[11, "graphtage.expressions.Tokenizer.next"]], "offset (graphtage.expressions.closebracket attribute)": [[11, "graphtage.expressions.CloseBracket.offset"]], "offset (graphtage.expressions.closeparen attribute)": [[11, "graphtage.expressions.CloseParen.offset"]], "offset (graphtage.expressions.comma attribute)": [[11, "graphtage.expressions.Comma.offset"]], "offset (graphtage.expressions.fixedsizecollection attribute)": [[11, "graphtage.expressions.FixedSizeCollection.offset"]], "offset (graphtage.expressions.floattoken attribute)": [[11, "graphtage.expressions.FloatToken.offset"]], "offset (graphtage.expressions.functioncall attribute)": [[11, "graphtage.expressions.FunctionCall.offset"]], "offset (graphtage.expressions.identifiertoken attribute)": [[11, "graphtage.expressions.IdentifierToken.offset"]], "offset (graphtage.expressions.integertoken attribute)": [[11, "graphtage.expressions.IntegerToken.offset"]], "offset (graphtage.expressions.numerictoken attribute)": [[11, "graphtage.expressions.NumericToken.offset"]], "offset (graphtage.expressions.openbracket attribute)": [[11, "graphtage.expressions.OpenBracket.offset"]], "offset (graphtage.expressions.openparen attribute)": [[11, "graphtage.expressions.OpenParen.offset"]], "offset (graphtage.expressions.operatortoken attribute)": [[11, "graphtage.expressions.OperatorToken.offset"]], "offset (graphtage.expressions.parenthesis attribute)": [[11, "graphtage.expressions.Parenthesis.offset"]], "offset (graphtage.expressions.stringtoken attribute)": [[11, "graphtage.expressions.StringToken.offset"]], "offset (graphtage.expressions.token attribute)": [[11, "graphtage.expressions.Token.offset"]], "op (graphtage.expressions.functioncall attribute)": [[11, "graphtage.expressions.FunctionCall.op"]], "op (graphtage.expressions.openbracket attribute)": [[11, "graphtage.expressions.OpenBracket.op"]], "op (graphtage.expressions.operatortoken attribute)": [[11, "graphtage.expressions.OperatorToken.op"]], "parse() (in module graphtage.expressions)": [[11, "graphtage.expressions.parse"]], "peek() (graphtage.expressions.tokenizer method)": [[11, "graphtage.expressions.Tokenizer.peek"]], "prev_token (graphtage.expressions.tokenizer attribute)": [[11, "graphtage.expressions.Tokenizer.prev_token"]], "priority (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.priority"]], "raw_token (graphtage.expressions.closebracket property)": [[11, "graphtage.expressions.CloseBracket.raw_token"]], "raw_token (graphtage.expressions.closeparen property)": [[11, "graphtage.expressions.CloseParen.raw_token"]], "raw_token (graphtage.expressions.comma property)": [[11, "graphtage.expressions.Comma.raw_token"]], "raw_token (graphtage.expressions.fixedsizecollection property)": [[11, "graphtage.expressions.FixedSizeCollection.raw_token"]], "raw_token (graphtage.expressions.floattoken property)": [[11, "graphtage.expressions.FloatToken.raw_token"]], "raw_token (graphtage.expressions.functioncall property)": [[11, "graphtage.expressions.FunctionCall.raw_token"]], "raw_token (graphtage.expressions.identifiertoken property)": [[11, "graphtage.expressions.IdentifierToken.raw_token"]], "raw_token (graphtage.expressions.integertoken property)": [[11, "graphtage.expressions.IntegerToken.raw_token"]], "raw_token (graphtage.expressions.numerictoken property)": [[11, "graphtage.expressions.NumericToken.raw_token"]], "raw_token (graphtage.expressions.openbracket property)": [[11, "graphtage.expressions.OpenBracket.raw_token"]], "raw_token (graphtage.expressions.openparen property)": [[11, "graphtage.expressions.OpenParen.raw_token"]], "raw_token (graphtage.expressions.operatortoken property)": [[11, "graphtage.expressions.OperatorToken.raw_token"]], "raw_token (graphtage.expressions.parenthesis property)": [[11, "graphtage.expressions.Parenthesis.raw_token"]], "raw_token (graphtage.expressions.stringtoken property)": [[11, "graphtage.expressions.StringToken.raw_token"]], "raw_token (graphtage.expressions.token property)": [[11, "graphtage.expressions.Token.raw_token"]], "size (graphtage.expressions.fixedsizecollection attribute)": [[11, "graphtage.expressions.FixedSizeCollection.size"]], "start_token_type (graphtage.expressions.closebracket attribute)": [[11, "graphtage.expressions.CloseBracket.start_token_type"]], "start_token_type (graphtage.expressions.closeparen attribute)": [[11, "graphtage.expressions.CloseParen.start_token_type"]], "start_token_type (graphtage.expressions.pairedendtoken attribute)": [[11, "graphtage.expressions.PairedEndToken.start_token_type"]], "token (graphtage.expressions.operator attribute)": [[11, "graphtage.expressions.Operator.token"]], "tokenize() (in module graphtage.expressions)": [[11, "graphtage.expressions.tokenize"]], "value (graphtage.expressions.floattoken attribute)": [[11, "graphtage.expressions.FloatToken.value"]], "value (graphtage.expressions.integertoken attribute)": [[11, "graphtage.expressions.IntegerToken.value"]], "value (graphtage.expressions.numerictoken attribute)": [[11, "graphtage.expressions.NumericToken.value"]], "with_traceback() (graphtage.expressions.parseerror method)": [[11, "graphtage.expressions.ParseError.with_traceback"]], "fibonacciheap (class in graphtage.fibonacci)": [[12, "graphtage.fibonacci.FibonacciHeap"]], "heapnode (class in graphtage.fibonacci)": [[12, "graphtage.fibonacci.HeapNode"]], "maxfibonacciheap (class in graphtage.fibonacci)": [[12, "graphtage.fibonacci.MaxFibonacciHeap"]], "reversedcomparator (class in graphtage.fibonacci)": [[12, "graphtage.fibonacci.ReversedComparator"]], "__init__() (graphtage.fibonacci.fibonacciheap method)": [[12, "graphtage.fibonacci.FibonacciHeap.__init__"]], "__init__() (graphtage.fibonacci.heapnode method)": [[12, "graphtage.fibonacci.HeapNode.__init__"]], "__init__() (graphtage.fibonacci.maxfibonacciheap method)": [[12, "graphtage.fibonacci.MaxFibonacciHeap.__init__"]], "__init__() (graphtage.fibonacci.reversedcomparator method)": [[12, "graphtage.fibonacci.ReversedComparator.__init__"]], "__iter__() (graphtage.fibonacci.heapnode method)": [[12, "graphtage.fibonacci.HeapNode.__iter__"]], "add_child() (graphtage.fibonacci.heapnode method)": [[12, "graphtage.fibonacci.HeapNode.add_child"]], "child (graphtage.fibonacci.heapnode attribute)": [[12, "graphtage.fibonacci.HeapNode.child"]], "children (graphtage.fibonacci.heapnode property)": [[12, "graphtage.fibonacci.HeapNode.children"]], "clear() (graphtage.fibonacci.fibonacciheap method)": [[12, "graphtage.fibonacci.FibonacciHeap.clear"]], "clear() (graphtage.fibonacci.maxfibonacciheap method)": [[12, "graphtage.fibonacci.MaxFibonacciHeap.clear"]], "decrease_key() (graphtage.fibonacci.fibonacciheap method)": [[12, "graphtage.fibonacci.FibonacciHeap.decrease_key"]], "decrease_key() (graphtage.fibonacci.maxfibonacciheap method)": [[12, "graphtage.fibonacci.MaxFibonacciHeap.decrease_key"]], "degree (graphtage.fibonacci.heapnode attribute)": [[12, "graphtage.fibonacci.HeapNode.degree"]], "deleted (graphtage.fibonacci.heapnode attribute)": [[12, "graphtage.fibonacci.HeapNode.deleted"]], "graphtage.fibonacci": [[12, "module-graphtage.fibonacci"]], "item (graphtage.fibonacci.heapnode attribute)": [[12, "graphtage.fibonacci.HeapNode.item"]], "key (graphtage.fibonacci.fibonacciheap attribute)": [[12, "graphtage.fibonacci.FibonacciHeap.key"]], "key (graphtage.fibonacci.heapnode attribute)": [[12, "graphtage.fibonacci.HeapNode.key"]], "key (graphtage.fibonacci.maxfibonacciheap attribute)": [[12, "graphtage.fibonacci.MaxFibonacciHeap.key"]], "left (graphtage.fibonacci.heapnode attribute)": [[12, "graphtage.fibonacci.HeapNode.left"]], "mark (graphtage.fibonacci.heapnode attribute)": [[12, "graphtage.fibonacci.HeapNode.mark"]], "min_node (graphtage.fibonacci.fibonacciheap property)": [[12, "graphtage.fibonacci.FibonacciHeap.min_node"]], "min_node (graphtage.fibonacci.maxfibonacciheap property)": [[12, "graphtage.fibonacci.MaxFibonacciHeap.min_node"]], "nodes() (graphtage.fibonacci.fibonacciheap method)": [[12, "graphtage.fibonacci.FibonacciHeap.nodes"]], "nodes() (graphtage.fibonacci.maxfibonacciheap method)": [[12, "graphtage.fibonacci.MaxFibonacciHeap.nodes"]], "parent (graphtage.fibonacci.heapnode attribute)": [[12, "graphtage.fibonacci.HeapNode.parent"]], "peek() (graphtage.fibonacci.fibonacciheap method)": [[12, "graphtage.fibonacci.FibonacciHeap.peek"]], "peek() (graphtage.fibonacci.maxfibonacciheap method)": [[12, "graphtage.fibonacci.MaxFibonacciHeap.peek"]], "pop() (graphtage.fibonacci.fibonacciheap method)": [[12, "graphtage.fibonacci.FibonacciHeap.pop"]], "pop() (graphtage.fibonacci.maxfibonacciheap method)": [[12, "graphtage.fibonacci.MaxFibonacciHeap.pop"]], "push() (graphtage.fibonacci.fibonacciheap method)": [[12, "graphtage.fibonacci.FibonacciHeap.push"]], "push() (graphtage.fibonacci.maxfibonacciheap method)": [[12, "graphtage.fibonacci.MaxFibonacciHeap.push"]], "remove() (graphtage.fibonacci.fibonacciheap method)": [[12, "graphtage.fibonacci.FibonacciHeap.remove"]], "remove() (graphtage.fibonacci.maxfibonacciheap method)": [[12, "graphtage.fibonacci.MaxFibonacciHeap.remove"]], "remove_child() (graphtage.fibonacci.heapnode method)": [[12, "graphtage.fibonacci.HeapNode.remove_child"]], "right (graphtage.fibonacci.heapnode attribute)": [[12, "graphtage.fibonacci.HeapNode.right"]], "siblings (graphtage.fibonacci.heapnode property)": [[12, "graphtage.fibonacci.HeapNode.siblings"]], "basicformatter (class in graphtage.formatter)": [[13, "graphtage.formatter.BasicFormatter"]], "default_instance (graphtage.formatter.basicformatter attribute)": [[13, "graphtage.formatter.BasicFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.formatter.formatter attribute)": [[13, "graphtage.formatter.Formatter.DEFAULT_INSTANCE"]], "formatter (class in graphtage.formatter)": [[13, "graphtage.formatter.Formatter"]], "formatterchecker (class in graphtage.formatter)": [[13, "graphtage.formatter.FormatterChecker"]], "__init__() (graphtage.formatter.basicformatter method)": [[13, "graphtage.formatter.BasicFormatter.__init__"]], "__init__() (graphtage.formatter.formatter method)": [[13, "graphtage.formatter.Formatter.__init__"]], "__init__() (graphtage.formatter.formatterchecker method)": [[13, "graphtage.formatter.FormatterChecker.__init__"]], "__instancecheck__() (graphtage.formatter.formatterchecker method)": [[13, "graphtage.formatter.FormatterChecker.__instancecheck__"]], "__new__() (graphtage.formatter.basicformatter static method)": [[13, "graphtage.formatter.BasicFormatter.__new__"]], "__new__() (graphtage.formatter.formatter static method)": [[13, "graphtage.formatter.Formatter.__new__"]], "__subclasscheck__() (graphtage.formatter.formatterchecker method)": [[13, "graphtage.formatter.FormatterChecker.__subclasscheck__"]], "_abc_caches_clear() (graphtage.formatter.formatterchecker method)": [[13, "graphtage.formatter.FormatterChecker._abc_caches_clear"]], "_abc_registry_clear() (graphtage.formatter.formatterchecker method)": [[13, "graphtage.formatter.FormatterChecker._abc_registry_clear"]], "_dump_registry() (graphtage.formatter.formatterchecker method)": [[13, "graphtage.formatter.FormatterChecker._dump_registry"]], "get_formatter() (graphtage.formatter.basicformatter method)": [[13, "graphtage.formatter.BasicFormatter.get_formatter"]], "get_formatter() (graphtage.formatter.formatter method)": [[13, "graphtage.formatter.Formatter.get_formatter"]], "get_formatter() (in module graphtage.formatter)": [[13, "graphtage.formatter.get_formatter"]], "graphtage.formatter": [[13, "module-graphtage.formatter"]], "is_partial (graphtage.formatter.basicformatter attribute)": [[13, "graphtage.formatter.BasicFormatter.is_partial"]], "is_partial (graphtage.formatter.formatter attribute)": [[13, "graphtage.formatter.Formatter.is_partial"]], "mro() (graphtage.formatter.formatterchecker method)": [[13, "graphtage.formatter.FormatterChecker.mro"]], "parent (graphtage.formatter.basicformatter attribute)": [[13, "graphtage.formatter.BasicFormatter.parent"]], "parent (graphtage.formatter.formatter attribute)": [[13, "graphtage.formatter.Formatter.parent"]], "print() (graphtage.formatter.basicformatter method)": [[13, "graphtage.formatter.BasicFormatter.print"]], "print() (graphtage.formatter.formatter method)": [[13, "graphtage.formatter.Formatter.print"]], "register() (graphtage.formatter.formatterchecker method)": [[13, "graphtage.formatter.FormatterChecker.register"]], "root (graphtage.formatter.basicformatter property)": [[13, "graphtage.formatter.BasicFormatter.root"]], "root (graphtage.formatter.formatter property)": [[13, "graphtage.formatter.Formatter.root"]], "sub_format_types (graphtage.formatter.basicformatter attribute)": [[13, "graphtage.formatter.BasicFormatter.sub_format_types"]], "sub_format_types (graphtage.formatter.formatter attribute)": [[13, "graphtage.formatter.Formatter.sub_format_types"]], "sub_formatters (graphtage.formatter.basicformatter attribute)": [[13, "graphtage.formatter.BasicFormatter.sub_formatters"]], "sub_formatters (graphtage.formatter.formatter attribute)": [[13, "graphtage.formatter.Formatter.sub_formatters"]], "default_instance (graphtage.json.jsondictformatter attribute)": [[14, "graphtage.json.JSONDictFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.json.jsonformatter attribute)": [[14, "graphtage.json.JSONFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.json.jsonlistformatter attribute)": [[14, "graphtage.json.JSONListFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.json.jsonstringformatter attribute)": [[14, "graphtage.json.JSONStringFormatter.DEFAULT_INSTANCE"]], "json (class in graphtage.json)": [[14, "graphtage.json.JSON"]], "json5 (class in graphtage.json)": [[14, "graphtage.json.JSON5"]], "jsondictformatter (class in graphtage.json)": [[14, "graphtage.json.JSONDictFormatter"]], "jsonformatter (class in graphtage.json)": [[14, "graphtage.json.JSONFormatter"]], "jsonlistformatter (class in graphtage.json)": [[14, "graphtage.json.JSONListFormatter"]], "jsonstringformatter (class in graphtage.json)": [[14, "graphtage.json.JSONStringFormatter"]], "__init__() (graphtage.json.json method)": [[14, "graphtage.json.JSON.__init__"]], "__init__() (graphtage.json.json5 method)": [[14, "graphtage.json.JSON5.__init__"]], "__init__() (graphtage.json.jsondictformatter method)": [[14, "graphtage.json.JSONDictFormatter.__init__"]], "__init__() (graphtage.json.jsonformatter method)": [[14, "graphtage.json.JSONFormatter.__init__"]], "__init__() (graphtage.json.jsonlistformatter method)": [[14, "graphtage.json.JSONListFormatter.__init__"]], "__init__() (graphtage.json.jsonstringformatter method)": [[14, "graphtage.json.JSONStringFormatter.__init__"]], "__new__() (graphtage.json.jsondictformatter static method)": [[14, "graphtage.json.JSONDictFormatter.__new__"]], "__new__() (graphtage.json.jsonformatter static method)": [[14, "graphtage.json.JSONFormatter.__new__"]], "__new__() (graphtage.json.jsonlistformatter static method)": [[14, "graphtage.json.JSONListFormatter.__new__"]], "__new__() (graphtage.json.jsonstringformatter static method)": [[14, "graphtage.json.JSONStringFormatter.__new__"]], "build_tree() (graphtage.json.json method)": [[14, "graphtage.json.JSON.build_tree"]], "build_tree() (graphtage.json.json5 method)": [[14, "graphtage.json.JSON5.build_tree"]], "build_tree() (in module graphtage.json)": [[14, "graphtage.json.build_tree"]], "build_tree_handling_errors() (graphtage.json.json method)": [[14, "graphtage.json.JSON.build_tree_handling_errors"]], "build_tree_handling_errors() (graphtage.json.json5 method)": [[14, "graphtage.json.JSON5.build_tree_handling_errors"]], "context() (graphtage.json.jsonstringformatter method)": [[14, "graphtage.json.JSONStringFormatter.context"]], "default_instance (graphtage.json.json attribute)": [[14, "graphtage.json.JSON.default_instance"]], "default_instance (graphtage.json.json5 attribute)": [[14, "graphtage.json.JSON5.default_instance"]], "edit_print() (graphtage.json.jsondictformatter method)": [[14, "graphtage.json.JSONDictFormatter.edit_print"]], "edit_print() (graphtage.json.jsonlistformatter method)": [[14, "graphtage.json.JSONListFormatter.edit_print"]], "escape() (graphtage.json.jsonstringformatter method)": [[14, "graphtage.json.JSONStringFormatter.escape"]], "get_default_formatter() (graphtage.json.json method)": [[14, "graphtage.json.JSON.get_default_formatter"]], "get_default_formatter() (graphtage.json.json5 method)": [[14, "graphtage.json.JSON5.get_default_formatter"]], "get_formatter() (graphtage.json.jsondictformatter method)": [[14, "graphtage.json.JSONDictFormatter.get_formatter"]], "get_formatter() (graphtage.json.jsonformatter method)": [[14, "graphtage.json.JSONFormatter.get_formatter"]], "get_formatter() (graphtage.json.jsonlistformatter method)": [[14, "graphtage.json.JSONListFormatter.get_formatter"]], "get_formatter() (graphtage.json.jsonstringformatter method)": [[14, "graphtage.json.JSONStringFormatter.get_formatter"]], "graphtage.json": [[14, "module-graphtage.json"]], "is_partial (graphtage.json.jsondictformatter attribute)": [[14, "graphtage.json.JSONDictFormatter.is_partial"]], "is_partial (graphtage.json.jsonformatter attribute)": [[14, "graphtage.json.JSONFormatter.is_partial"]], "is_partial (graphtage.json.jsonlistformatter attribute)": [[14, "graphtage.json.JSONListFormatter.is_partial"]], "is_partial (graphtage.json.jsonstringformatter attribute)": [[14, "graphtage.json.JSONStringFormatter.is_partial"]], "is_quoted (graphtage.json.jsonstringformatter attribute)": [[14, "graphtage.json.JSONStringFormatter.is_quoted"]], "item_newline() (graphtage.json.jsondictformatter method)": [[14, "graphtage.json.JSONDictFormatter.item_newline"]], "item_newline() (graphtage.json.jsonlistformatter method)": [[14, "graphtage.json.JSONListFormatter.item_newline"]], "items_indent() (graphtage.json.jsondictformatter method)": [[14, "graphtage.json.JSONDictFormatter.items_indent"]], "items_indent() (graphtage.json.jsonlistformatter method)": [[14, "graphtage.json.JSONListFormatter.items_indent"]], "parent (graphtage.json.jsondictformatter attribute)": [[14, "graphtage.json.JSONDictFormatter.parent"]], "parent (graphtage.json.jsonformatter attribute)": [[14, "graphtage.json.JSONFormatter.parent"]], "parent (graphtage.json.jsonlistformatter attribute)": [[14, "graphtage.json.JSONListFormatter.parent"]], "parent (graphtage.json.jsonstringformatter attribute)": [[14, "graphtage.json.JSONStringFormatter.parent"]], "print() (graphtage.json.jsondictformatter method)": [[14, "graphtage.json.JSONDictFormatter.print"]], "print() (graphtage.json.jsonformatter method)": [[14, "graphtage.json.JSONFormatter.print"]], "print() (graphtage.json.jsonlistformatter method)": [[14, "graphtage.json.JSONListFormatter.print"]], "print() (graphtage.json.jsonstringformatter method)": [[14, "graphtage.json.JSONStringFormatter.print"]], "print_containernode() (graphtage.json.jsonformatter method)": [[14, "graphtage.json.JSONFormatter.print_ContainerNode"]], "print_keyvaluepairnode() (graphtage.json.jsonformatter method)": [[14, "graphtage.json.JSONFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.json.jsonformatter method)": [[14, "graphtage.json.JSONFormatter.print_LeafNode"]], "print_listnode() (graphtage.json.jsonlistformatter method)": [[14, "graphtage.json.JSONListFormatter.print_ListNode"]], "print_mappingnode() (graphtage.json.jsondictformatter method)": [[14, "graphtage.json.JSONDictFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.json.jsondictformatter method)": [[14, "graphtage.json.JSONDictFormatter.print_MultiSetNode"]], "print_sequencenode() (graphtage.json.jsondictformatter method)": [[14, "graphtage.json.JSONDictFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.json.jsonlistformatter method)": [[14, "graphtage.json.JSONListFormatter.print_SequenceNode"]], "print_stringedit() (graphtage.json.jsonstringformatter method)": [[14, "graphtage.json.JSONStringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.json.jsonstringformatter method)": [[14, "graphtage.json.JSONStringFormatter.print_StringNode"]], "print_xmlelement() (graphtage.json.jsonformatter method)": [[14, "graphtage.json.JSONFormatter.print_XMLElement"]], "root (graphtage.json.jsondictformatter property)": [[14, "graphtage.json.JSONDictFormatter.root"]], "root (graphtage.json.jsonformatter property)": [[14, "graphtage.json.JSONFormatter.root"]], "root (graphtage.json.jsonlistformatter property)": [[14, "graphtage.json.JSONListFormatter.root"]], "root (graphtage.json.jsonstringformatter property)": [[14, "graphtage.json.JSONStringFormatter.root"]], "sub_format_types (graphtage.json.jsondictformatter attribute)": [[14, "graphtage.json.JSONDictFormatter.sub_format_types"]], "sub_format_types (graphtage.json.jsonformatter attribute)": [[14, "graphtage.json.JSONFormatter.sub_format_types"]], "sub_format_types (graphtage.json.jsonlistformatter attribute)": [[14, "graphtage.json.JSONListFormatter.sub_format_types"]], "sub_format_types (graphtage.json.jsonstringformatter attribute)": [[14, "graphtage.json.JSONStringFormatter.sub_format_types"]], "sub_formatters (graphtage.json.jsondictformatter attribute)": [[14, "graphtage.json.JSONDictFormatter.sub_formatters"]], "sub_formatters (graphtage.json.jsonformatter attribute)": [[14, "graphtage.json.JSONFormatter.sub_formatters"]], "sub_formatters (graphtage.json.jsonlistformatter attribute)": [[14, "graphtage.json.JSONListFormatter.sub_formatters"]], "sub_formatters (graphtage.json.jsonstringformatter attribute)": [[14, "graphtage.json.JSONStringFormatter.sub_formatters"]], "write_char() (graphtage.json.jsonstringformatter method)": [[14, "graphtage.json.JSONStringFormatter.write_char"]], "write_end_quote() (graphtage.json.jsonstringformatter method)": [[14, "graphtage.json.JSONStringFormatter.write_end_quote"]], "write_start_quote() (graphtage.json.jsonstringformatter method)": [[14, "graphtage.json.JSONStringFormatter.write_start_quote"]], "editdistance (class in graphtage.levenshtein)": [[15, "graphtage.levenshtein.EditDistance"]], "__init__() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance.__init__"]], "__iter__() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance.__iter__"]], "__lt__() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance.__lt__"]], "_debug_tighten_bounds() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance._debug_tighten_bounds"]], "bounds() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance.bounds"]], "edits() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance.edits"]], "from_node (graphtage.levenshtein.editdistance attribute)": [[15, "graphtage.levenshtein.EditDistance.from_node"]], "graphtage.levenshtein": [[15, "module-graphtage.levenshtein"]], "has_non_zero_cost() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance.has_non_zero_cost"]], "initial_bounds (graphtage.levenshtein.editdistance attribute)": [[15, "graphtage.levenshtein.EditDistance.initial_bounds"]], "is_complete() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance.is_complete"]], "levenshtein_distance() (in module graphtage.levenshtein)": [[15, "graphtage.levenshtein.levenshtein_distance"]], "on_diff() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance.on_diff"]], "print() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance.print"]], "sequence (graphtage.levenshtein.editdistance property)": [[15, "graphtage.levenshtein.EditDistance.sequence"]], "tighten_bounds() (graphtage.levenshtein.editdistance method)": [[15, "graphtage.levenshtein.EditDistance.tighten_bounds"]], "valid (graphtage.levenshtein.editdistance property)": [[15, "graphtage.levenshtein.EditDistance.valid"]], "edge (class in graphtage.matching)": [[16, "graphtage.matching.Edge"]], "matching (class in graphtage.matching)": [[16, "graphtage.matching.Matching"]], "matchingfromnode (class in graphtage.matching)": [[16, "graphtage.matching.MatchingFromNode"]], "matchingnode (class in graphtage.matching)": [[16, "graphtage.matching.MatchingNode"]], "matchingtonode (class in graphtage.matching)": [[16, "graphtage.matching.MatchingToNode"]], "pathset (class in graphtage.matching)": [[16, "graphtage.matching.PathSet"]], "queueelement (class in graphtage.matching)": [[16, "graphtage.matching.QueueElement"]], "sortededges (class in graphtage.matching)": [[16, "graphtage.matching.SortedEdges"]], "weightedbipartitematcher (class in graphtage.matching)": [[16, "graphtage.matching.WeightedBipartiteMatcher"]], "weightedbipartitematcherpartial_implementation (class in graphtage.matching)": [[16, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION"]], "__init__() (graphtage.matching.edge method)": [[16, "graphtage.matching.Edge.__init__"]], "__init__() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.__init__"]], "__init__() (graphtage.matching.matchingfromnode method)": [[16, "graphtage.matching.MatchingFromNode.__init__"]], "__init__() (graphtage.matching.matchingnode method)": [[16, "graphtage.matching.MatchingNode.__init__"]], "__init__() (graphtage.matching.matchingtonode method)": [[16, "graphtage.matching.MatchingToNode.__init__"]], "__init__() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.__init__"]], "__init__() (graphtage.matching.queueelement method)": [[16, "graphtage.matching.QueueElement.__init__"]], "__init__() (graphtage.matching.sortededges method)": [[16, "graphtage.matching.SortedEdges.__init__"]], "__init__() (graphtage.matching.weightedbipartitematcher method)": [[16, "graphtage.matching.WeightedBipartiteMatcher.__init__"]], "__init__() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[16, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.__init__"]], "_from_iterable() (graphtage.matching.matching class method)": [[16, "graphtage.matching.Matching._from_iterable"]], "_from_iterable() (graphtage.matching.pathset class method)": [[16, "graphtage.matching.PathSet._from_iterable"]], "_hash() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching._hash"]], "_hash() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet._hash"]], "add() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.add"]], "add() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.add"]], "bounds() (graphtage.matching.edge method)": [[16, "graphtage.matching.Edge.bounds"]], "bounds() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.bounds"]], "bounds() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.bounds"]], "bounds() (graphtage.matching.weightedbipartitematcher method)": [[16, "graphtage.matching.WeightedBipartiteMatcher.bounds"]], "bounds() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[16, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.bounds"]], "clear() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.clear"]], "clear() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.clear"]], "construct_edges() (graphtage.matching.matchingfromnode method)": [[16, "graphtage.matching.MatchingFromNode.construct_edges"]], "construct_edges() (graphtage.matching.matchingnode method)": [[16, "graphtage.matching.MatchingNode.construct_edges"]], "construct_edges() (graphtage.matching.matchingtonode method)": [[16, "graphtage.matching.MatchingToNode.construct_edges"]], "copy() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.copy"]], "copy() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.copy"]], "cost_bar (graphtage.matching.edge property)": [[16, "graphtage.matching.Edge.cost_bar"]], "cost_star (graphtage.matching.edge property)": [[16, "graphtage.matching.Edge.cost_star"]], "difference() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.difference"]], "difference() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.difference"]], "difference_update() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.difference_update"]], "difference_update() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.difference_update"]], "discard() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.discard"]], "discard() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.discard"]], "edges (graphtage.matching.weightedbipartitematcher property)": [[16, "graphtage.matching.WeightedBipartiteMatcher.edges"]], "edges() (graphtage.matching.matchingfromnode method)": [[16, "graphtage.matching.MatchingFromNode.edges"]], "edges() (graphtage.matching.matchingnode method)": [[16, "graphtage.matching.MatchingNode.edges"]], "edges() (graphtage.matching.matchingtonode method)": [[16, "graphtage.matching.MatchingToNode.edges"]], "free_destinations() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[16, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.free_destinations"]], "free_sources() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[16, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.free_sources"]], "get_dtype() (in module graphtage.matching)": [[16, "graphtage.matching.get_dtype"]], "graphtage.matching": [[16, "module-graphtage.matching"]], "head() (graphtage.matching.sortededges method)": [[16, "graphtage.matching.SortedEdges.head"]], "intersection() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.intersection"]], "intersection() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.intersection"]], "intersection_update() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.intersection_update"]], "intersection_update() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.intersection_update"]], "is_complete() (graphtage.matching.weightedbipartitematcher method)": [[16, "graphtage.matching.WeightedBipartiteMatcher.is_complete"]], "isdisjoint() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.isdisjoint"]], "isdisjoint() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.isdisjoint"]], "issubset() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.issubset"]], "issubset() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.issubset"]], "issuperset() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.issuperset"]], "issuperset() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.issuperset"]], "matching (graphtage.matching.weightedbipartitematcher property)": [[16, "graphtage.matching.WeightedBipartiteMatcher.matching"]], "min_weight_bipartite_matching() (in module graphtage.matching)": [[16, "graphtage.matching.min_weight_bipartite_matching"]], "path_to() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.path_to"]], "pop() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.pop"]], "pop() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.pop"]], "remove() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.remove"]], "remove() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.remove"]], "sorted_neighbors (graphtage.matching.matchingfromnode property)": [[16, "graphtage.matching.MatchingFromNode.sorted_neighbors"]], "symmetric_difference() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.symmetric_difference"]], "symmetric_difference() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.symmetric_difference"]], "symmetric_difference_update() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.symmetric_difference_update"]], "symmetric_difference_update() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.symmetric_difference_update"]], "tail() (graphtage.matching.sortededges method)": [[16, "graphtage.matching.SortedEdges.tail"]], "tighten_bounds() (graphtage.matching.edge method)": [[16, "graphtage.matching.Edge.tighten_bounds"]], "tighten_bounds() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.tighten_bounds"]], "tighten_bounds() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.tighten_bounds"]], "tighten_bounds() (graphtage.matching.weightedbipartitematcher method)": [[16, "graphtage.matching.WeightedBipartiteMatcher.tighten_bounds"]], "tighten_bounds() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[16, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.tighten_bounds"]], "union() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.union"]], "union() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.union"]], "update() (graphtage.matching.matching method)": [[16, "graphtage.matching.Matching.update"]], "update() (graphtage.matching.pathset method)": [[16, "graphtage.matching.PathSet.update"]], "multisetedit (class in graphtage.multiset)": [[17, "graphtage.multiset.MultiSetEdit"]], "__init__() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit.__init__"]], "__iter__() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit.__iter__"]], "__lt__() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit.__lt__"]], "_debug_tighten_bounds() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit._debug_tighten_bounds"]], "bounds() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit.bounds"]], "edits() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit.edits"]], "from_node (graphtage.multiset.multisetedit attribute)": [[17, "graphtage.multiset.MultiSetEdit.from_node"]], "graphtage.multiset": [[17, "module-graphtage.multiset"]], "has_non_zero_cost() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit.has_non_zero_cost"]], "initial_bounds (graphtage.multiset.multisetedit attribute)": [[17, "graphtage.multiset.MultiSetEdit.initial_bounds"]], "is_complete() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit.is_complete"]], "on_diff() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit.on_diff"]], "print() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit.print"]], "sequence (graphtage.multiset.multisetedit property)": [[17, "graphtage.multiset.MultiSetEdit.sequence"]], "tighten_bounds() (graphtage.multiset.multisetedit method)": [[17, "graphtage.multiset.MultiSetEdit.tighten_bounds"]], "to_insert (graphtage.multiset.multisetedit attribute)": [[17, "graphtage.multiset.MultiSetEdit.to_insert"]], "to_remove (graphtage.multiset.multisetedit attribute)": [[17, "graphtage.multiset.MultiSetEdit.to_remove"]], "valid (graphtage.multiset.multisetedit property)": [[17, "graphtage.multiset.MultiSetEdit.valid"]], "identityhash (class in graphtage.object_set)": [[18, "graphtage.object_set.IdentityHash"]], "objectset (class in graphtage.object_set)": [[18, "graphtage.object_set.ObjectSet"]], "__init__() (graphtage.object_set.identityhash method)": [[18, "graphtage.object_set.IdentityHash.__init__"]], "__init__() (graphtage.object_set.objectset method)": [[18, "graphtage.object_set.ObjectSet.__init__"]], "_from_iterable() (graphtage.object_set.objectset class method)": [[18, "graphtage.object_set.ObjectSet._from_iterable"]], "_hash() (graphtage.object_set.objectset method)": [[18, "graphtage.object_set.ObjectSet._hash"]], "add() (graphtage.object_set.objectset method)": [[18, "graphtage.object_set.ObjectSet.add"]], "clear() (graphtage.object_set.objectset method)": [[18, "graphtage.object_set.ObjectSet.clear"]], "discard() (graphtage.object_set.objectset method)": [[18, "graphtage.object_set.ObjectSet.discard"]], "graphtage.object_set": [[18, "module-graphtage.object_set"]], "isdisjoint() (graphtage.object_set.objectset method)": [[18, "graphtage.object_set.ObjectSet.isdisjoint"]], "pop() (graphtage.object_set.objectset method)": [[18, "graphtage.object_set.ObjectSet.pop"]], "remove() (graphtage.object_set.objectset method)": [[18, "graphtage.object_set.ObjectSet.remove"]], "pickle (class in graphtage.pickle)": [[19, "graphtage.pickle.Pickle"]], "__init__() (graphtage.pickle.pickle method)": [[19, "graphtage.pickle.Pickle.__init__"]], "build_tree() (graphtage.pickle.pickle method)": [[19, "graphtage.pickle.Pickle.build_tree"]], "build_tree_handling_errors() (graphtage.pickle.pickle method)": [[19, "graphtage.pickle.Pickle.build_tree_handling_errors"]], "default_instance (graphtage.pickle.pickle attribute)": [[19, "graphtage.pickle.Pickle.default_instance"]], "get_default_formatter() (graphtage.pickle.pickle method)": [[19, "graphtage.pickle.Pickle.get_default_formatter"]], "graphtage.pickle": [[19, "module-graphtage.pickle"]], "default_instance (graphtage.plist.plistformatter attribute)": [[20, "graphtage.plist.PLISTFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.plist.plistsequenceformatter attribute)": [[20, "graphtage.plist.PLISTSequenceFormatter.DEFAULT_INSTANCE"]], "plist (class in graphtage.plist)": [[20, "graphtage.plist.PLIST"]], "plistformatter (class in graphtage.plist)": [[20, "graphtage.plist.PLISTFormatter"]], "plistnode (class in graphtage.plist)": [[20, "graphtage.plist.PLISTNode"]], "plistsequenceformatter (class in graphtage.plist)": [[20, "graphtage.plist.PLISTSequenceFormatter"]], "__init__() (graphtage.plist.plist method)": [[20, "graphtage.plist.PLIST.__init__"]], "__init__() (graphtage.plist.plistformatter method)": [[20, "graphtage.plist.PLISTFormatter.__init__"]], "__init__() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.__init__"]], "__init__() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.__init__"]], "__new__() (graphtage.plist.plistformatter static method)": [[20, "graphtage.plist.PLISTFormatter.__new__"]], "__new__() (graphtage.plist.plistsequenceformatter static method)": [[20, "graphtage.plist.PLISTSequenceFormatter.__new__"]], "add_edit_modifier() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.add_edit_modifier"]], "all_children_are_leaves() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.all_children_are_leaves"]], "build_tree() (graphtage.plist.plist method)": [[20, "graphtage.plist.PLIST.build_tree"]], "build_tree() (in module graphtage.plist)": [[20, "graphtage.plist.build_tree"]], "build_tree_handling_errors() (graphtage.plist.plist method)": [[20, "graphtage.plist.PLIST.build_tree_handling_errors"]], "calculate_total_size() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.calculate_total_size"]], "children() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.children"]], "copy() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.copy"]], "copy_from() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.copy_from"]], "default_instance (graphtage.plist.plist attribute)": [[20, "graphtage.plist.PLIST.default_instance"]], "dfs() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.dfs"]], "diff() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.diff"]], "edit_print() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.edit_print"]], "editable_dict() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.editable_dict"]], "edited (graphtage.plist.plistnode property)": [[20, "graphtage.plist.PLISTNode.edited"]], "edits() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.edits"]], "get_all_edit_contexts() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.get_all_edits"]], "get_default_formatter() (graphtage.plist.plist method)": [[20, "graphtage.plist.PLIST.get_default_formatter"]], "get_formatter() (graphtage.plist.plistformatter method)": [[20, "graphtage.plist.PLISTFormatter.get_formatter"]], "get_formatter() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.get_formatter"]], "graphtage.plist": [[20, "module-graphtage.plist"]], "is_leaf (graphtage.plist.plistnode property)": [[20, "graphtage.plist.PLISTNode.is_leaf"]], "is_partial (graphtage.plist.plistformatter attribute)": [[20, "graphtage.plist.PLISTFormatter.is_partial"]], "is_partial (graphtage.plist.plistsequenceformatter attribute)": [[20, "graphtage.plist.PLISTSequenceFormatter.is_partial"]], "item_newline() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.item_newline"]], "items_indent() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.items_indent"]], "make_edited() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.make_edited"]], "parent (graphtage.plist.plistformatter attribute)": [[20, "graphtage.plist.PLISTFormatter.parent"]], "parent (graphtage.plist.plistnode property)": [[20, "graphtage.plist.PLISTNode.parent"]], "parent (graphtage.plist.plistsequenceformatter attribute)": [[20, "graphtage.plist.PLISTSequenceFormatter.parent"]], "print() (graphtage.plist.plistformatter method)": [[20, "graphtage.plist.PLISTFormatter.print"]], "print() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.print"]], "print() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.print"]], "print_boolnode() (graphtage.plist.plistformatter method)": [[20, "graphtage.plist.PLISTFormatter.print_BoolNode"]], "print_floatnode() (graphtage.plist.plistformatter method)": [[20, "graphtage.plist.PLISTFormatter.print_FloatNode"]], "print_integernode() (graphtage.plist.plistformatter method)": [[20, "graphtage.plist.PLISTFormatter.print_IntegerNode"]], "print_keyvaluepairnode() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.plist.plistformatter method)": [[20, "graphtage.plist.PLISTFormatter.print_LeafNode"]], "print_listnode() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.print_ListNode"]], "print_mappingnode() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.print_MultiSetNode"]], "print_plistnode() (graphtage.plist.plistformatter method)": [[20, "graphtage.plist.PLISTFormatter.print_PLISTNode"]], "print_sequencenode() (graphtage.plist.plistsequenceformatter method)": [[20, "graphtage.plist.PLISTSequenceFormatter.print_SequenceNode"]], "print_stringnode() (graphtage.plist.plistformatter method)": [[20, "graphtage.plist.PLISTFormatter.print_StringNode"]], "print_parent_context() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.print_parent_context"]], "root (graphtage.plist.plistformatter property)": [[20, "graphtage.plist.PLISTFormatter.root"]], "root (graphtage.plist.plistsequenceformatter property)": [[20, "graphtage.plist.PLISTSequenceFormatter.root"]], "sub_format_types (graphtage.plist.plistformatter attribute)": [[20, "graphtage.plist.PLISTFormatter.sub_format_types"]], "sub_format_types (graphtage.plist.plistsequenceformatter attribute)": [[20, "graphtage.plist.PLISTSequenceFormatter.sub_format_types"]], "sub_formatters (graphtage.plist.plistformatter attribute)": [[20, "graphtage.plist.PLISTFormatter.sub_formatters"]], "sub_formatters (graphtage.plist.plistsequenceformatter attribute)": [[20, "graphtage.plist.PLISTSequenceFormatter.sub_formatters"]], "to_obj() (graphtage.plist.plistnode method)": [[20, "graphtage.plist.PLISTNode.to_obj"]], "total_size (graphtage.plist.plistnode property)": [[20, "graphtage.plist.PLISTNode.total_size"]], "write_obj() (graphtage.plist.plistformatter static method)": [[20, "graphtage.plist.PLISTFormatter.write_obj"]], "ansicontext (class in graphtage.printer)": [[21, "graphtage.printer.ANSIContext"]], "combiningmarkcontext (class in graphtage.printer)": [[21, "graphtage.printer.CombiningMarkContext"]], "combiningmarkwriter (class in graphtage.printer)": [[21, "graphtage.printer.CombiningMarkWriter"]], "default_printer (in module graphtage.printer)": [[21, "graphtage.printer.DEFAULT_PRINTER"]], "htmlansicontext (class in graphtage.printer)": [[21, "graphtage.printer.HTMLANSIContext"]], "htmlprinter (class in graphtage.printer)": [[21, "graphtage.printer.HTMLPrinter"]], "nullansicontext (class in graphtage.printer)": [[21, "graphtage.printer.NullANSIContext"]], "nullwriter (class in graphtage.printer)": [[21, "graphtage.printer.NullWriter"]], "printer (class in graphtage.printer)": [[21, "graphtage.printer.Printer"]], "rawwriter (class in graphtage.printer)": [[21, "graphtage.printer.RawWriter"]], "writer (class in graphtage.printer)": [[21, "graphtage.printer.Writer"]], "__init__() (graphtage.printer.ansicontext method)": [[21, "graphtage.printer.ANSIContext.__init__"]], "__init__() (graphtage.printer.combiningmarkcontext method)": [[21, "graphtage.printer.CombiningMarkContext.__init__"]], "__init__() (graphtage.printer.combiningmarkwriter method)": [[21, "graphtage.printer.CombiningMarkWriter.__init__"]], "__init__() (graphtage.printer.htmlansicontext method)": [[21, "graphtage.printer.HTMLANSIContext.__init__"]], "__init__() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.__init__"]], "__init__() (graphtage.printer.nullansicontext method)": [[21, "graphtage.printer.NullANSIContext.__init__"]], "__init__() (graphtage.printer.nullwriter method)": [[21, "graphtage.printer.NullWriter.__init__"]], "__init__() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.__init__"]], "__init__() (graphtage.printer.rawwriter method)": [[21, "graphtage.printer.RawWriter.__init__"]], "__init__() (graphtage.printer.writer method)": [[21, "graphtage.printer.Writer.__init__"]], "add() (graphtage.printer.combiningmarkwriter method)": [[21, "graphtage.printer.CombiningMarkWriter.add"]], "ansi_color (graphtage.printer.htmlprinter property)": [[21, "graphtage.printer.HTMLPrinter.ansi_color"]], "ansi_color (graphtage.printer.printer property)": [[21, "graphtage.printer.Printer.ansi_color"]], "back (graphtage.printer.ansicontext property)": [[21, "graphtage.printer.ANSIContext.back"]], "back (graphtage.printer.htmlansicontext property)": [[21, "graphtage.printer.HTMLANSIContext.back"]], "background() (graphtage.printer.ansicontext method)": [[21, "graphtage.printer.ANSIContext.background"]], "background() (graphtage.printer.htmlansicontext method)": [[21, "graphtage.printer.HTMLANSIContext.background"]], "background() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.background"]], "background() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.background"]], "bright() (graphtage.printer.ansicontext method)": [[21, "graphtage.printer.ANSIContext.bright"]], "bright() (graphtage.printer.htmlansicontext method)": [[21, "graphtage.printer.HTMLANSIContext.bright"]], "bright() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.bright"]], "bright() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.bright"]], "close() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.close"]], "close() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.close"]], "closed (graphtage.printer.htmlprinter property)": [[21, "graphtage.printer.HTMLPrinter.closed"]], "closed (graphtage.printer.printer property)": [[21, "graphtage.printer.Printer.closed"]], "color() (graphtage.printer.ansicontext method)": [[21, "graphtage.printer.ANSIContext.color"]], "color() (graphtage.printer.htmlansicontext method)": [[21, "graphtage.printer.HTMLANSIContext.color"]], "color() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.color"]], "color() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.color"]], "context() (graphtage.printer.combiningmarkwriter method)": [[21, "graphtage.printer.CombiningMarkWriter.context"]], "context() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.context"]], "context() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.context"]], "dim() (graphtage.printer.ansicontext method)": [[21, "graphtage.printer.ANSIContext.dim"]], "dim() (graphtage.printer.htmlansicontext method)": [[21, "graphtage.printer.HTMLANSIContext.dim"]], "dim() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.dim"]], "dim() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.dim"]], "enabled (graphtage.printer.combiningmarkwriter attribute)": [[21, "graphtage.printer.CombiningMarkWriter.enabled"]], "end_code (graphtage.printer.ansicontext property)": [[21, "graphtage.printer.ANSIContext.end_code"]], "end_code (graphtage.printer.htmlansicontext property)": [[21, "graphtage.printer.HTMLANSIContext.end_code"]], "fileno() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.fileno"]], "fileno() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.fileno"]], "flush() (graphtage.printer.combiningmarkwriter method)": [[21, "graphtage.printer.CombiningMarkWriter.flush"]], "flush() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.flush"]], "flush() (graphtage.printer.nullwriter method)": [[21, "graphtage.printer.NullWriter.flush"]], "flush() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.flush"]], "flush() (graphtage.printer.rawwriter method)": [[21, "graphtage.printer.RawWriter.flush"]], "flush() (graphtage.printer.writer method)": [[21, "graphtage.printer.Writer.flush"]], "fore (graphtage.printer.ansicontext property)": [[21, "graphtage.printer.ANSIContext.fore"]], "fore (graphtage.printer.htmlansicontext property)": [[21, "graphtage.printer.HTMLANSIContext.fore"]], "get_back() (graphtage.printer.htmlansicontext static method)": [[21, "graphtage.printer.HTMLANSIContext.get_back"]], "get_fore() (graphtage.printer.htmlansicontext static method)": [[21, "graphtage.printer.HTMLANSIContext.get_fore"]], "graphtage.printer": [[21, "module-graphtage.printer"]], "html_element() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.html_element"]], "indent() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.indent"]], "indent() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.indent"]], "indent_str (graphtage.printer.htmlprinter attribute)": [[21, "graphtage.printer.HTMLPrinter.indent_str"]], "indent_str (graphtage.printer.printer attribute)": [[21, "graphtage.printer.Printer.indent_str"]], "indents (graphtage.printer.htmlprinter attribute)": [[21, "graphtage.printer.HTMLPrinter.indents"]], "indents (graphtage.printer.printer attribute)": [[21, "graphtage.printer.Printer.indents"]], "is_applied (graphtage.printer.ansicontext attribute)": [[21, "graphtage.printer.ANSIContext.is_applied"]], "is_applied (graphtage.printer.htmlansicontext attribute)": [[21, "graphtage.printer.HTMLANSIContext.is_applied"]], "isatty() (graphtage.printer.combiningmarkwriter method)": [[21, "graphtage.printer.CombiningMarkWriter.isatty"]], "isatty() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.isatty"]], "isatty() (graphtage.printer.nullwriter method)": [[21, "graphtage.printer.NullWriter.isatty"]], "isatty() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.isatty"]], "isatty() (graphtage.printer.rawwriter method)": [[21, "graphtage.printer.RawWriter.isatty"]], "isatty() (graphtage.printer.writer method)": [[21, "graphtage.printer.Writer.isatty"]], "marks (graphtage.printer.combiningmarkwriter property)": [[21, "graphtage.printer.CombiningMarkWriter.marks"]], "marks_str (graphtage.printer.combiningmarkwriter property)": [[21, "graphtage.printer.CombiningMarkWriter.marks_str"]], "mode (graphtage.printer.htmlprinter property)": [[21, "graphtage.printer.HTMLPrinter.mode"]], "mode (graphtage.printer.printer property)": [[21, "graphtage.printer.Printer.mode"]], "name (graphtage.printer.htmlprinter property)": [[21, "graphtage.printer.HTMLPrinter.name"]], "name (graphtage.printer.printer property)": [[21, "graphtage.printer.Printer.name"]], "newline() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.newline"]], "newline() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.newline"]], "only_ansi() (in module graphtage.printer)": [[21, "graphtage.printer.only_ansi"]], "out_stream (graphtage.printer.htmlprinter attribute)": [[21, "graphtage.printer.HTMLPrinter.out_stream"]], "out_stream (graphtage.printer.printer attribute)": [[21, "graphtage.printer.Printer.out_stream"]], "parent (graphtage.printer.ansicontext property)": [[21, "graphtage.printer.ANSIContext.parent"]], "parent (graphtage.printer.combiningmarkwriter attribute)": [[21, "graphtage.printer.CombiningMarkWriter.parent"]], "parent (graphtage.printer.htmlansicontext property)": [[21, "graphtage.printer.HTMLANSIContext.parent"]], "quiet (graphtage.printer.htmlprinter attribute)": [[21, "graphtage.printer.HTMLPrinter.quiet"]], "quiet (graphtage.printer.printer attribute)": [[21, "graphtage.printer.Printer.quiet"]], "raw_write() (graphtage.printer.combiningmarkwriter method)": [[21, "graphtage.printer.CombiningMarkWriter.raw_write"]], "raw_write() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.raw_write"]], "raw_write() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.raw_write"]], "raw_write() (graphtage.printer.rawwriter method)": [[21, "graphtage.printer.RawWriter.raw_write"]], "read() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.read"]], "read() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.read"]], "readable() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.readable"]], "readable() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.readable"]], "readline() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.readline"]], "readline() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.readline"]], "readlines() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.readlines"]], "readlines() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.readlines"]], "remove() (graphtage.printer.combiningmarkwriter method)": [[21, "graphtage.printer.CombiningMarkWriter.remove"]], "root (graphtage.printer.ansicontext property)": [[21, "graphtage.printer.ANSIContext.root"]], "root (graphtage.printer.htmlansicontext property)": [[21, "graphtage.printer.HTMLANSIContext.root"]], "seek() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.seek"]], "seek() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.seek"]], "seekable() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.seekable"]], "seekable() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.seekable"]], "start_code (graphtage.printer.ansicontext property)": [[21, "graphtage.printer.ANSIContext.start_code"]], "start_code (graphtage.printer.htmlansicontext property)": [[21, "graphtage.printer.HTMLANSIContext.start_code"]], "status_stream (graphtage.printer.htmlprinter attribute)": [[21, "graphtage.printer.HTMLPrinter.status_stream"]], "status_stream (graphtage.printer.printer attribute)": [[21, "graphtage.printer.Printer.status_stream"]], "stream (graphtage.printer.htmlansicontext attribute)": [[21, "graphtage.printer.HTMLANSIContext.stream"]], "strike() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.strike"]], "strike() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.strike"]], "style (graphtage.printer.ansicontext property)": [[21, "graphtage.printer.ANSIContext.style"]], "style (graphtage.printer.htmlansicontext property)": [[21, "graphtage.printer.HTMLANSIContext.style"]], "tell() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.tell"]], "tell() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.tell"]], "tqdm() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.tqdm"]], "tqdm() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.tqdm"]], "trange() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.trange"]], "trange() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.trange"]], "truncate() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.truncate"]], "truncate() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.truncate"]], "under_plus() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.under_plus"]], "under_plus() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.under_plus"]], "writable() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.writable"]], "writable() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.writable"]], "write() (graphtage.printer.combiningmarkwriter method)": [[21, "graphtage.printer.CombiningMarkWriter.write"]], "write() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.write"]], "write() (graphtage.printer.nullwriter method)": [[21, "graphtage.printer.NullWriter.write"]], "write() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.write"]], "write() (graphtage.printer.rawwriter method)": [[21, "graphtage.printer.RawWriter.write"]], "write() (graphtage.printer.writer method)": [[21, "graphtage.printer.Writer.write"]], "write_raw (graphtage.printer.htmlprinter attribute)": [[21, "graphtage.printer.HTMLPrinter.write_raw"]], "write_raw (graphtage.printer.printer attribute)": [[21, "graphtage.printer.Printer.write_raw"]], "writelines() (graphtage.printer.htmlprinter method)": [[21, "graphtage.printer.HTMLPrinter.writelines"]], "writelines() (graphtage.printer.printer method)": [[21, "graphtage.printer.Printer.writelines"]], "statuswriter (class in graphtage.progress)": [[22, "graphtage.progress.StatusWriter"]], "__init__() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.__init__"]], "close() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.close"]], "closed (graphtage.progress.statuswriter property)": [[22, "graphtage.progress.StatusWriter.closed"]], "fileno() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.fileno"]], "flush() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.flush"]], "graphtage.progress": [[22, "module-graphtage.progress"]], "isatty() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.isatty"]], "mode (graphtage.progress.statuswriter property)": [[22, "graphtage.progress.StatusWriter.mode"]], "name (graphtage.progress.statuswriter property)": [[22, "graphtage.progress.StatusWriter.name"]], "quiet (graphtage.progress.statuswriter attribute)": [[22, "graphtage.progress.StatusWriter.quiet"]], "read() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.read"]], "readable() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.readable"]], "readline() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.readline"]], "readlines() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.readlines"]], "seek() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.seek"]], "seekable() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.seekable"]], "status_stream (graphtage.progress.statuswriter attribute)": [[22, "graphtage.progress.StatusWriter.status_stream"]], "tell() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.tell"]], "tqdm() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.tqdm"]], "trange() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.trange"]], "truncate() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.truncate"]], "writable() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.writable"]], "write() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.write"]], "write_raw (graphtage.progress.statuswriter attribute)": [[22, "graphtage.progress.StatusWriter.write_raw"]], "writelines() (graphtage.progress.statuswriter method)": [[22, "graphtage.progress.StatusWriter.writelines"]], "astbuilder (class in graphtage.pydiff)": [[23, "graphtage.pydiff.ASTBuilder"]], "builders (graphtage.pydiff.astbuilder attribute)": [[23, "graphtage.pydiff.ASTBuilder.BUILDERS"]], "builders (graphtage.pydiff.pyobjbuilder attribute)": [[23, "graphtage.pydiff.PyObjBuilder.BUILDERS"]], "default_instance (graphtage.pydiff.pydictformatter attribute)": [[23, "graphtage.pydiff.PyDictFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pydiffformatter attribute)": [[23, "graphtage.pydiff.PyDiffFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pyimportformatter attribute)": [[23, "graphtage.pydiff.PyImportFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pylistformatter attribute)": [[23, "graphtage.pydiff.PyListFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pymoduleformatter attribute)": [[23, "graphtage.pydiff.PyModuleFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pyobjformatter attribute)": [[23, "graphtage.pydiff.PyObjFormatter.DEFAULT_INSTANCE"]], "expanders (graphtage.pydiff.astbuilder attribute)": [[23, "graphtage.pydiff.ASTBuilder.EXPANDERS"]], "expanders (graphtage.pydiff.pyobjbuilder attribute)": [[23, "graphtage.pydiff.PyObjBuilder.EXPANDERS"]], "pyalias (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyAlias"]], "pydictformatter (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyDictFormatter"]], "pydiffformatter (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyDiffFormatter"]], "pyimportformatter (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyImportFormatter"]], "pylistformatter (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyListFormatter"]], "pymoduleformatter (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyModuleFormatter"]], "pyobj (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyObj"]], "pyobjattribute (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyObjAttribute"]], "pyobjattributes (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyObjAttributes"]], "pyobjbuilder (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyObjBuilder"]], "pyobjedit (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyObjEdit"]], "pyobjfixedattributes (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyObjFixedAttributes"]], "pyobjformatter (class in graphtage.pydiff)": [[23, "graphtage.pydiff.PyObjFormatter"]], "__contains__() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.__contains__"]], "__getitem__() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.__getitem__"]], "__init__() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.__init__"]], "__init__() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.__init__"]], "__init__() (graphtage.pydiff.pydictformatter method)": [[23, "graphtage.pydiff.PyDictFormatter.__init__"]], "__init__() (graphtage.pydiff.pydiffformatter method)": [[23, "graphtage.pydiff.PyDiffFormatter.__init__"]], "__init__() (graphtage.pydiff.pyimportformatter method)": [[23, "graphtage.pydiff.PyImportFormatter.__init__"]], "__init__() (graphtage.pydiff.pylistformatter method)": [[23, "graphtage.pydiff.PyListFormatter.__init__"]], "__init__() (graphtage.pydiff.pymoduleformatter method)": [[23, "graphtage.pydiff.PyModuleFormatter.__init__"]], "__init__() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.__init__"]], "__init__() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.__init__"]], "__init__() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.__init__"]], "__init__() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.__init__"]], "__init__() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit.__init__"]], "__init__() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.__init__"]], "__init__() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.__init__"]], "__iter__() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit.__iter__"]], "__len__() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.__len__"]], "__lt__() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit.__lt__"]], "__new__() (graphtage.pydiff.pydictformatter static method)": [[23, "graphtage.pydiff.PyDictFormatter.__new__"]], "__new__() (graphtage.pydiff.pydiffformatter static method)": [[23, "graphtage.pydiff.PyDiffFormatter.__new__"]], "__new__() (graphtage.pydiff.pyimportformatter static method)": [[23, "graphtage.pydiff.PyImportFormatter.__new__"]], "__new__() (graphtage.pydiff.pylistformatter static method)": [[23, "graphtage.pydiff.PyListFormatter.__new__"]], "__new__() (graphtage.pydiff.pymoduleformatter static method)": [[23, "graphtage.pydiff.PyModuleFormatter.__new__"]], "__new__() (graphtage.pydiff.pyobjformatter static method)": [[23, "graphtage.pydiff.PyObjFormatter.__new__"]], "_debug_tighten_bounds() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit._debug_tighten_bounds"]], "_resolve() (graphtage.pydiff.astbuilder class method)": [[23, "graphtage.pydiff.ASTBuilder._resolve"]], "_resolve() (graphtage.pydiff.pyobjbuilder class method)": [[23, "graphtage.pydiff.PyObjBuilder._resolve"]], "add_edit_modifier() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.add_edit_modifier"]], "add_edit_modifier() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.add_edit_modifier"]], "add_edit_modifier() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.add_edit_modifier"]], "add_edit_modifier() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.add_edit_modifier"]], "add_edit_modifier() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.add_edit_modifier"]], "all_children_are_leaves() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.all_children_are_leaves"]], "as_name (graphtage.pydiff.pyalias attribute)": [[23, "graphtage.pydiff.PyAlias.as_name"]], "ast_to_tree() (in module graphtage.pydiff)": [[23, "graphtage.pydiff.ast_to_tree"]], "attr (graphtage.pydiff.pyobjattribute attribute)": [[23, "graphtage.pydiff.PyObjAttribute.attr"]], "bounds() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit.bounds"]], "build() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build"]], "build() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.build"]], "build_alias() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_alias"]], "build_assign() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_assign"]], "build_ast_dict() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_ast_dict"]], "build_ast_list() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_ast_list"]], "build_attribute() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_attribute"]], "build_bool() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_bool"]], "build_bool() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.build_bool"]], "build_call() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_call"]], "build_constant() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_constant"]], "build_dict() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_dict"]], "build_dict() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.build_dict"]], "build_float() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_float"]], "build_float() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.build_float"]], "build_import_from() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_import_from"]], "build_int() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_int"]], "build_int() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.build_int"]], "build_list() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_list"]], "build_list() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.build_list"]], "build_module() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_module"]], "build_name() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_name"]], "build_none() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_none"]], "build_none() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.build_none"]], "build_set() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_set"]], "build_set() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.build_set"]], "build_str() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_str"]], "build_str() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.build_str"]], "build_subscript() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_subscript"]], "build_tree() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.build_tree"]], "build_tree() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.build_tree"]], "build_tree() (in module graphtage.pydiff)": [[23, "graphtage.pydiff.build_tree"]], "builder() (graphtage.pydiff.astbuilder static method)": [[23, "graphtage.pydiff.ASTBuilder.builder"]], "builder() (graphtage.pydiff.pyobjbuilder static method)": [[23, "graphtage.pydiff.PyObjBuilder.builder"]], "calculate_total_size() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.calculate_total_size"]], "children() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.children"]], "children() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.children"]], "children() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.children"]], "children() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.children"]], "children() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.children"]], "container_type (graphtage.pydiff.pyobjattributes property)": [[23, "graphtage.pydiff.PyObjAttributes.container_type"]], "container_type (graphtage.pydiff.pyobjfixedattributes property)": [[23, "graphtage.pydiff.PyObjFixedAttributes.container_type"]], "copy() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.copy"]], "copy() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.copy"]], "copy() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.copy"]], "copy() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.copy"]], "copy() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.copy"]], "copy_from() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.copy_from"]], "copy_from() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.copy_from"]], "copy_from() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.copy_from"]], "copy_from() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.copy_from"]], "copy_from() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.copy_from"]], "default_builder() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.default_builder"]], "default_builder() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.default_builder"]], "default_expander() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.default_expander"]], "default_expander() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.default_expander"]], "delimiter_callback (graphtage.pydiff.pydictformatter attribute)": [[23, "graphtage.pydiff.PyDictFormatter.delimiter_callback"]], "delimiter_callback (graphtage.pydiff.pylistformatter attribute)": [[23, "graphtage.pydiff.PyListFormatter.delimiter_callback"]], "dfs() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.dfs"]], "dfs() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.dfs"]], "dfs() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.dfs"]], "dfs() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.dfs"]], "dfs() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.dfs"]], "diff() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.diff"]], "diff() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.diff"]], "diff() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.diff"]], "diff() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.diff"]], "diff() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.diff"]], "diff() (in module graphtage.pydiff)": [[23, "graphtage.pydiff.diff"]], "edit_print() (graphtage.pydiff.pydictformatter method)": [[23, "graphtage.pydiff.PyDictFormatter.edit_print"]], "edit_print() (graphtage.pydiff.pyimportformatter method)": [[23, "graphtage.pydiff.PyImportFormatter.edit_print"]], "edit_print() (graphtage.pydiff.pylistformatter method)": [[23, "graphtage.pydiff.PyListFormatter.edit_print"]], "edit_print() (graphtage.pydiff.pymoduleformatter method)": [[23, "graphtage.pydiff.PyModuleFormatter.edit_print"]], "edit_print() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.edit_print"]], "editable_dict() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.editable_dict"]], "edited (graphtage.pydiff.pyalias property)": [[23, "graphtage.pydiff.PyAlias.edited"]], "edited (graphtage.pydiff.pyobj property)": [[23, "graphtage.pydiff.PyObj.edited"]], "edited (graphtage.pydiff.pyobjattribute property)": [[23, "graphtage.pydiff.PyObjAttribute.edited"]], "edited (graphtage.pydiff.pyobjattributes property)": [[23, "graphtage.pydiff.PyObjAttributes.edited"]], "edited (graphtage.pydiff.pyobjfixedattributes property)": [[23, "graphtage.pydiff.PyObjFixedAttributes.edited"]], "edits() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.edits"]], "edits() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.edits"]], "edits() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.edits"]], "edits() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.edits"]], "edits() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit.edits"]], "edits() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.edits"]], "expand() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand"]], "expand() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.expand"]], "expand_assign() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand_assign"]], "expand_ast_dict() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand_ast_dict"]], "expand_call() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand_call"]], "expand_collection() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand_collection"]], "expand_constant() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand_constant"]], "expand_dict() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand_dict"]], "expand_dict() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.expand_dict"]], "expand_import_from() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand_import_from"]], "expand_list() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand_list"]], "expand_list() (graphtage.pydiff.pyobjbuilder method)": [[23, "graphtage.pydiff.PyObjBuilder.expand_list"]], "expand_module() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand_module"]], "expand_subscript() (graphtage.pydiff.astbuilder method)": [[23, "graphtage.pydiff.ASTBuilder.expand_subscript"]], "expander() (graphtage.pydiff.astbuilder static method)": [[23, "graphtage.pydiff.ASTBuilder.expander"]], "expander() (graphtage.pydiff.pyobjbuilder static method)": [[23, "graphtage.pydiff.PyObjBuilder.expander"]], "from_dict() (graphtage.pydiff.pyobjattributes class method)": [[23, "graphtage.pydiff.PyObjAttributes.from_dict"]], "from_dict() (graphtage.pydiff.pyobjfixedattributes class method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.from_dict"]], "from_node (graphtage.pydiff.pyobjedit attribute)": [[23, "graphtage.pydiff.PyObjEdit.from_node"]], "get_all_edit_contexts() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.get_all_edit_contexts"]], "get_all_edits() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.get_all_edits"]], "get_formatter() (graphtage.pydiff.pydictformatter method)": [[23, "graphtage.pydiff.PyDictFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pydiffformatter method)": [[23, "graphtage.pydiff.PyDiffFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pyimportformatter method)": [[23, "graphtage.pydiff.PyImportFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pylistformatter method)": [[23, "graphtage.pydiff.PyListFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pymoduleformatter method)": [[23, "graphtage.pydiff.PyModuleFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.get_formatter"]], "graphtage.pydiff": [[23, "module-graphtage.pydiff"]], "has_non_zero_cost() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit.has_non_zero_cost"]], "initial_bounds (graphtage.pydiff.pyobjedit attribute)": [[23, "graphtage.pydiff.PyObjEdit.initial_bounds"]], "is_complete() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit.is_complete"]], "is_leaf (graphtage.pydiff.pyalias property)": [[23, "graphtage.pydiff.PyAlias.is_leaf"]], "is_leaf (graphtage.pydiff.pyobj property)": [[23, "graphtage.pydiff.PyObj.is_leaf"]], "is_leaf (graphtage.pydiff.pyobjattribute property)": [[23, "graphtage.pydiff.PyObjAttribute.is_leaf"]], "is_leaf (graphtage.pydiff.pyobjattributes property)": [[23, "graphtage.pydiff.PyObjAttributes.is_leaf"]], "is_leaf (graphtage.pydiff.pyobjfixedattributes property)": [[23, "graphtage.pydiff.PyObjFixedAttributes.is_leaf"]], "is_partial (graphtage.pydiff.pydictformatter attribute)": [[23, "graphtage.pydiff.PyDictFormatter.is_partial"]], "is_partial (graphtage.pydiff.pydiffformatter attribute)": [[23, "graphtage.pydiff.PyDiffFormatter.is_partial"]], "is_partial (graphtage.pydiff.pyimportformatter attribute)": [[23, "graphtage.pydiff.PyImportFormatter.is_partial"]], "is_partial (graphtage.pydiff.pylistformatter attribute)": [[23, "graphtage.pydiff.PyListFormatter.is_partial"]], "is_partial (graphtage.pydiff.pymoduleformatter attribute)": [[23, "graphtage.pydiff.PyModuleFormatter.is_partial"]], "is_partial (graphtage.pydiff.pyobjformatter attribute)": [[23, "graphtage.pydiff.PyObjFormatter.is_partial"]], "item_newline() (graphtage.pydiff.pydictformatter method)": [[23, "graphtage.pydiff.PyDictFormatter.item_newline"]], "item_newline() (graphtage.pydiff.pyimportformatter method)": [[23, "graphtage.pydiff.PyImportFormatter.item_newline"]], "item_newline() (graphtage.pydiff.pylistformatter method)": [[23, "graphtage.pydiff.PyListFormatter.item_newline"]], "item_newline() (graphtage.pydiff.pymoduleformatter method)": [[23, "graphtage.pydiff.PyModuleFormatter.item_newline"]], "item_newline() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.item_newline"]], "items() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.items"]], "items() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.items"]], "items() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.items"]], "items() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.items"]], "items_indent() (graphtage.pydiff.pydictformatter method)": [[23, "graphtage.pydiff.PyDictFormatter.items_indent"]], "items_indent() (graphtage.pydiff.pyimportformatter method)": [[23, "graphtage.pydiff.PyImportFormatter.items_indent"]], "items_indent() (graphtage.pydiff.pylistformatter method)": [[23, "graphtage.pydiff.PyListFormatter.items_indent"]], "items_indent() (graphtage.pydiff.pymoduleformatter method)": [[23, "graphtage.pydiff.PyModuleFormatter.items_indent"]], "items_indent() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.items_indent"]], "make_edited() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.make_edited"]], "make_edited() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.make_edited"]], "make_edited() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.make_edited"]], "make_edited() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.make_edited"]], "make_edited() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.make_edited"]], "make_key_value_pair_node() (graphtage.pydiff.pyobjattributes class method)": [[23, "graphtage.pydiff.PyObjAttributes.make_key_value_pair_node"]], "make_key_value_pair_node() (graphtage.pydiff.pyobjfixedattributes class method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.make_key_value_pair_node"]], "name (graphtage.pydiff.pyalias attribute)": [[23, "graphtage.pydiff.PyAlias.name"]], "object (graphtage.pydiff.pyobjattribute attribute)": [[23, "graphtage.pydiff.PyObjAttribute.object"]], "on_diff() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit.on_diff"]], "options (graphtage.pydiff.astbuilder attribute)": [[23, "graphtage.pydiff.ASTBuilder.options"]], "options (graphtage.pydiff.pyobjbuilder attribute)": [[23, "graphtage.pydiff.PyObjBuilder.options"]], "parent (graphtage.pydiff.pyalias property)": [[23, "graphtage.pydiff.PyAlias.parent"]], "parent (graphtage.pydiff.pydictformatter attribute)": [[23, "graphtage.pydiff.PyDictFormatter.parent"]], "parent (graphtage.pydiff.pydiffformatter attribute)": [[23, "graphtage.pydiff.PyDiffFormatter.parent"]], "parent (graphtage.pydiff.pyimportformatter attribute)": [[23, "graphtage.pydiff.PyImportFormatter.parent"]], "parent (graphtage.pydiff.pylistformatter attribute)": [[23, "graphtage.pydiff.PyListFormatter.parent"]], "parent (graphtage.pydiff.pymoduleformatter attribute)": [[23, "graphtage.pydiff.PyModuleFormatter.parent"]], "parent (graphtage.pydiff.pyobj property)": [[23, "graphtage.pydiff.PyObj.parent"]], "parent (graphtage.pydiff.pyobjattribute property)": [[23, "graphtage.pydiff.PyObjAttribute.parent"]], "parent (graphtage.pydiff.pyobjattributes property)": [[23, "graphtage.pydiff.PyObjAttributes.parent"]], "parent (graphtage.pydiff.pyobjfixedattributes property)": [[23, "graphtage.pydiff.PyObjFixedAttributes.parent"]], "parent (graphtage.pydiff.pyobjformatter attribute)": [[23, "graphtage.pydiff.PyObjFormatter.parent"]], "post_init() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.post_init"]], "post_init() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.post_init"]], "print() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.print"]], "print() (graphtage.pydiff.pydictformatter method)": [[23, "graphtage.pydiff.PyDictFormatter.print"]], "print() (graphtage.pydiff.pydiffformatter method)": [[23, "graphtage.pydiff.PyDiffFormatter.print"]], "print() (graphtage.pydiff.pyimportformatter method)": [[23, "graphtage.pydiff.PyImportFormatter.print"]], "print() (graphtage.pydiff.pylistformatter method)": [[23, "graphtage.pydiff.PyListFormatter.print"]], "print() (graphtage.pydiff.pymoduleformatter method)": [[23, "graphtage.pydiff.PyModuleFormatter.print"]], "print() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.print"]], "print() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.print"]], "print() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.print"]], "print() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit.print"]], "print() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.print"]], "print() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.print"]], "print_assignment() (graphtage.pydiff.pyimportformatter method)": [[23, "graphtage.pydiff.PyImportFormatter.print_Assignment"]], "print_call() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.print_Call"]], "print_callarguments() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.print_CallArguments"]], "print_import() (graphtage.pydiff.pyimportformatter method)": [[23, "graphtage.pydiff.PyImportFormatter.print_Import"]], "print_keywordargument() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.print_KeywordArgument"]], "print_listnode() (graphtage.pydiff.pylistformatter method)": [[23, "graphtage.pydiff.PyListFormatter.print_ListNode"]], "print_mappingnode() (graphtage.pydiff.pydictformatter method)": [[23, "graphtage.pydiff.PyDictFormatter.print_MappingNode"]], "print_module() (graphtage.pydiff.pymoduleformatter method)": [[23, "graphtage.pydiff.PyModuleFormatter.print_Module"]], "print_multisetnode() (graphtage.pydiff.pydictformatter method)": [[23, "graphtage.pydiff.PyDictFormatter.print_MultiSetNode"]], "print_pyalias() (graphtage.pydiff.pydiffformatter method)": [[23, "graphtage.pydiff.PyDiffFormatter.print_PyAlias"]], "print_pyobj() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.print_PyObj"]], "print_pyobjattribute() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.print_PyObjAttribute"]], "print_pyobjattributes() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.print_PyObjAttributes"]], "print_pyobjfixedattributes() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.print_PyObjFixedAttributes"]], "print_sequencenode() (graphtage.pydiff.pydictformatter method)": [[23, "graphtage.pydiff.PyDictFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.pydiff.pyimportformatter method)": [[23, "graphtage.pydiff.PyImportFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.pydiff.pylistformatter method)": [[23, "graphtage.pydiff.PyListFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.pydiff.pymoduleformatter method)": [[23, "graphtage.pydiff.PyModuleFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.pydiff.pyobjformatter method)": [[23, "graphtage.pydiff.PyObjFormatter.print_SequenceNode"]], "print_subscript() (graphtage.pydiff.pydiffformatter method)": [[23, "graphtage.pydiff.PyDiffFormatter.print_Subscript"]], "print_diff() (in module graphtage.pydiff)": [[23, "graphtage.pydiff.print_diff"]], "print_parent_context() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.print_parent_context"]], "resolve_builder() (graphtage.pydiff.astbuilder class method)": [[23, "graphtage.pydiff.ASTBuilder.resolve_builder"]], "resolve_builder() (graphtage.pydiff.pyobjbuilder class method)": [[23, "graphtage.pydiff.PyObjBuilder.resolve_builder"]], "resolve_expander() (graphtage.pydiff.astbuilder class method)": [[23, "graphtage.pydiff.ASTBuilder.resolve_expander"]], "resolve_expander() (graphtage.pydiff.pyobjbuilder class method)": [[23, "graphtage.pydiff.PyObjBuilder.resolve_expander"]], "root (graphtage.pydiff.pydictformatter property)": [[23, "graphtage.pydiff.PyDictFormatter.root"]], "root (graphtage.pydiff.pydiffformatter property)": [[23, "graphtage.pydiff.PyDiffFormatter.root"]], "root (graphtage.pydiff.pyimportformatter property)": [[23, "graphtage.pydiff.PyImportFormatter.root"]], "root (graphtage.pydiff.pylistformatter property)": [[23, "graphtage.pydiff.PyListFormatter.root"]], "root (graphtage.pydiff.pymoduleformatter property)": [[23, "graphtage.pydiff.PyModuleFormatter.root"]], "root (graphtage.pydiff.pyobjformatter property)": [[23, "graphtage.pydiff.PyObjFormatter.root"]], "sub_format_types (graphtage.pydiff.pydictformatter attribute)": [[23, "graphtage.pydiff.PyDictFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pydiffformatter attribute)": [[23, "graphtage.pydiff.PyDiffFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pyimportformatter attribute)": [[23, "graphtage.pydiff.PyImportFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pylistformatter attribute)": [[23, "graphtage.pydiff.PyListFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pymoduleformatter attribute)": [[23, "graphtage.pydiff.PyModuleFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pyobjformatter attribute)": [[23, "graphtage.pydiff.PyObjFormatter.sub_format_types"]], "sub_formatters (graphtage.pydiff.pydictformatter attribute)": [[23, "graphtage.pydiff.PyDictFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pydiffformatter attribute)": [[23, "graphtage.pydiff.PyDiffFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pyimportformatter attribute)": [[23, "graphtage.pydiff.PyImportFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pylistformatter attribute)": [[23, "graphtage.pydiff.PyListFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pymoduleformatter attribute)": [[23, "graphtage.pydiff.PyModuleFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pyobjformatter attribute)": [[23, "graphtage.pydiff.PyObjFormatter.sub_formatters"]], "tighten_bounds() (graphtage.pydiff.pyobjedit method)": [[23, "graphtage.pydiff.PyObjEdit.tighten_bounds"]], "to_obj() (graphtage.pydiff.pyalias method)": [[23, "graphtage.pydiff.PyAlias.to_obj"]], "to_obj() (graphtage.pydiff.pyobj method)": [[23, "graphtage.pydiff.PyObj.to_obj"]], "to_obj() (graphtage.pydiff.pyobjattribute method)": [[23, "graphtage.pydiff.PyObjAttribute.to_obj"]], "to_obj() (graphtage.pydiff.pyobjattributes method)": [[23, "graphtage.pydiff.PyObjAttributes.to_obj"]], "to_obj() (graphtage.pydiff.pyobjfixedattributes method)": [[23, "graphtage.pydiff.PyObjFixedAttributes.to_obj"]], "total_size (graphtage.pydiff.pyalias property)": [[23, "graphtage.pydiff.PyAlias.total_size"]], "total_size (graphtage.pydiff.pyobj property)": [[23, "graphtage.pydiff.PyObj.total_size"]], "total_size (graphtage.pydiff.pyobjattribute property)": [[23, "graphtage.pydiff.PyObjAttribute.total_size"]], "total_size (graphtage.pydiff.pyobjattributes property)": [[23, "graphtage.pydiff.PyObjAttributes.total_size"]], "total_size (graphtage.pydiff.pyobjfixedattributes property)": [[23, "graphtage.pydiff.PyObjFixedAttributes.total_size"]], "valid (graphtage.pydiff.pyobjedit property)": [[23, "graphtage.pydiff.PyObjEdit.valid"]], "iterativetighteningsearch (class in graphtage.search)": [[24, "graphtage.search.IterativeTighteningSearch"]], "__bool__() (graphtage.search.iterativetighteningsearch method)": [[24, "graphtage.search.IterativeTighteningSearch.__bool__"]], "__init__() (graphtage.search.iterativetighteningsearch method)": [[24, "graphtage.search.IterativeTighteningSearch.__init__"]], "best_match (graphtage.search.iterativetighteningsearch property)": [[24, "graphtage.search.IterativeTighteningSearch.best_match"]], "bounds() (graphtage.search.iterativetighteningsearch method)": [[24, "graphtage.search.IterativeTighteningSearch.bounds"]], "goal_test() (graphtage.search.iterativetighteningsearch method)": [[24, "graphtage.search.IterativeTighteningSearch.goal_test"]], "graphtage.search": [[24, "module-graphtage.search"]], "remove_best() (graphtage.search.iterativetighteningsearch method)": [[24, "graphtage.search.IterativeTighteningSearch.remove_best"]], "search() (graphtage.search.iterativetighteningsearch method)": [[24, "graphtage.search.IterativeTighteningSearch.search"]], "tighten_bounds() (graphtage.search.iterativetighteningsearch method)": [[24, "graphtage.search.IterativeTighteningSearch.tighten_bounds"]], "default_instance (graphtage.sequences.sequenceformatter attribute)": [[25, "graphtage.sequences.SequenceFormatter.DEFAULT_INSTANCE"]], "fixedlengthsequenceedit (class in graphtage.sequences)": [[25, "graphtage.sequences.FixedLengthSequenceEdit"]], "sequenceedit (class in graphtage.sequences)": [[25, "graphtage.sequences.SequenceEdit"]], "sequenceformatter (class in graphtage.sequences)": [[25, "graphtage.sequences.SequenceFormatter"]], "sequencenode (class in graphtage.sequences)": [[25, "graphtage.sequences.SequenceNode"]], "__init__() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.__init__"]], "__init__() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit.__init__"]], "__init__() (graphtage.sequences.sequenceformatter method)": [[25, "graphtage.sequences.SequenceFormatter.__init__"]], "__init__() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.__init__"]], "__iter__() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.__iter__"]], "__iter__() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit.__iter__"]], "__iter__() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.__iter__"]], "__len__() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.__len__"]], "__lt__() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.__lt__"]], "__lt__() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit.__lt__"]], "__new__() (graphtage.sequences.sequenceformatter static method)": [[25, "graphtage.sequences.SequenceFormatter.__new__"]], "_debug_tighten_bounds() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit._debug_tighten_bounds"]], "add_edit_modifier() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.add_edit_modifier"]], "all_children_are_leaves() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.all_children_are_leaves"]], "bounds() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.bounds"]], "bounds() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit.bounds"]], "calculate_total_size() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.calculate_total_size"]], "children() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.children"]], "container_type (graphtage.sequences.sequencenode property)": [[25, "graphtage.sequences.SequenceNode.container_type"]], "copy() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.copy"]], "copy_from() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.copy_from"]], "dfs() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.dfs"]], "diff() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.diff"]], "edit_print() (graphtage.sequences.sequenceformatter method)": [[25, "graphtage.sequences.SequenceFormatter.edit_print"]], "editable_dict() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.editable_dict"]], "edited (graphtage.sequences.sequencenode property)": [[25, "graphtage.sequences.SequenceNode.edited"]], "edits() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.edits"]], "edits() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit.edits"]], "edits() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.edits"]], "from_node (graphtage.sequences.fixedlengthsequenceedit attribute)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.from_node"]], "from_node (graphtage.sequences.sequenceedit attribute)": [[25, "graphtage.sequences.SequenceEdit.from_node"]], "get_all_edit_contexts() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.get_all_edits"]], "get_formatter() (graphtage.sequences.sequenceformatter method)": [[25, "graphtage.sequences.SequenceFormatter.get_formatter"]], "graphtage.sequences": [[25, "module-graphtage.sequences"]], "has_non_zero_cost() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit.has_non_zero_cost"]], "initial_bounds (graphtage.sequences.fixedlengthsequenceedit attribute)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.initial_bounds"]], "initial_bounds (graphtage.sequences.sequenceedit attribute)": [[25, "graphtage.sequences.SequenceEdit.initial_bounds"]], "is_complete() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.is_complete"]], "is_complete() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit.is_complete"]], "is_leaf (graphtage.sequences.sequencenode property)": [[25, "graphtage.sequences.SequenceNode.is_leaf"]], "is_partial (graphtage.sequences.sequenceformatter attribute)": [[25, "graphtage.sequences.SequenceFormatter.is_partial"]], "item_newline() (graphtage.sequences.sequenceformatter method)": [[25, "graphtage.sequences.SequenceFormatter.item_newline"]], "items_indent() (graphtage.sequences.sequenceformatter method)": [[25, "graphtage.sequences.SequenceFormatter.items_indent"]], "make_edited() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.make_edited"]], "on_diff() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.on_diff"]], "on_diff() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit.on_diff"]], "parent (graphtage.sequences.sequenceformatter attribute)": [[25, "graphtage.sequences.SequenceFormatter.parent"]], "parent (graphtage.sequences.sequencenode property)": [[25, "graphtage.sequences.SequenceNode.parent"]], "print() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.print"]], "print() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit.print"]], "print() (graphtage.sequences.sequenceformatter method)": [[25, "graphtage.sequences.SequenceFormatter.print"]], "print() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.print"]], "print_sequencenode() (graphtage.sequences.sequenceformatter method)": [[25, "graphtage.sequences.SequenceFormatter.print_SequenceNode"]], "print_parent_context() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.print_parent_context"]], "root (graphtage.sequences.sequenceformatter property)": [[25, "graphtage.sequences.SequenceFormatter.root"]], "sequence (graphtage.sequences.fixedlengthsequenceedit property)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.sequence"]], "sequence (graphtage.sequences.sequenceedit property)": [[25, "graphtage.sequences.SequenceEdit.sequence"]], "sub_format_types (graphtage.sequences.sequenceformatter attribute)": [[25, "graphtage.sequences.SequenceFormatter.sub_format_types"]], "sub_formatters (graphtage.sequences.sequenceformatter attribute)": [[25, "graphtage.sequences.SequenceFormatter.sub_formatters"]], "tighten_bounds() (graphtage.sequences.fixedlengthsequenceedit method)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.tighten_bounds"]], "tighten_bounds() (graphtage.sequences.sequenceedit method)": [[25, "graphtage.sequences.SequenceEdit.tighten_bounds"]], "to_obj() (graphtage.sequences.sequencenode method)": [[25, "graphtage.sequences.SequenceNode.to_obj"]], "total_size (graphtage.sequences.sequencenode property)": [[25, "graphtage.sequences.SequenceNode.total_size"]], "valid (graphtage.sequences.fixedlengthsequenceedit property)": [[25, "graphtage.sequences.FixedLengthSequenceEdit.valid"]], "valid (graphtage.sequences.sequenceedit property)": [[25, "graphtage.sequences.SequenceEdit.valid"]], "hashablecounter (class in graphtage.utils)": [[26, "graphtage.utils.HashableCounter"]], "orderedcounter (class in graphtage.utils)": [[26, "graphtage.utils.OrderedCounter"]], "sized (class in graphtage.utils)": [[26, "graphtage.utils.Sized"]], "sparsematrix (class in graphtage.utils)": [[26, "graphtage.utils.SparseMatrix"]], "sparsematrix.sparsematrixrow (class in graphtage.utils)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow"]], "tempfile (class in graphtage.utils)": [[26, "graphtage.utils.Tempfile"]], "__add__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__add__"]], "__add__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__add__"]], "__and__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__and__"]], "__and__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__and__"]], "__delitem__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__delitem__"]], "__delitem__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__delitem__"]], "__enter__() (graphtage.utils.tempfile method)": [[26, "graphtage.utils.Tempfile.__enter__"]], "__exit__() (graphtage.utils.tempfile method)": [[26, "graphtage.utils.Tempfile.__exit__"]], "__getitem__() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.__getitem__"]], "__getitem__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.__getitem__"]], "__iadd__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__iadd__"]], "__iadd__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__iadd__"]], "__iand__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__iand__"]], "__iand__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__iand__"]], "__init__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__init__"]], "__init__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__init__"]], "__init__() (graphtage.utils.sized method)": [[26, "graphtage.utils.Sized.__init__"]], "__init__() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.__init__"]], "__init__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.__init__"]], "__init__() (graphtage.utils.tempfile method)": [[26, "graphtage.utils.Tempfile.__init__"]], "__ior__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__ior__"]], "__ior__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__ior__"]], "__isub__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__isub__"]], "__isub__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__isub__"]], "__iter__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.__iter__"]], "__len__() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.__len__"]], "__len__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.__len__"]], "__missing__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__missing__"]], "__missing__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__missing__"]], "__neg__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__neg__"]], "__neg__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__neg__"]], "__or__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__or__"]], "__or__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__or__"]], "__pos__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__pos__"]], "__pos__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__pos__"]], "__sub__() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.__sub__"]], "__sub__() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.__sub__"]], "_keep_positive() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter._keep_positive"]], "_keep_positive() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter._keep_positive"]], "clear() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.clear"]], "clear() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.clear"]], "clear() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.clear"]], "clear() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.clear"]], "copy() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.copy"]], "copy() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.copy"]], "default_value (graphtage.utils.sparsematrix attribute)": [[26, "graphtage.utils.SparseMatrix.default_value"]], "default_value (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.default_value"]], "elements() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.elements"]], "elements() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.elements"]], "fromkeys() (graphtage.utils.hashablecounter class method)": [[26, "graphtage.utils.HashableCounter.fromkeys"]], "fromkeys() (graphtage.utils.orderedcounter class method)": [[26, "graphtage.utils.OrderedCounter.fromkeys"]], "get() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.get"]], "get() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.get"]], "get() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.get"]], "get() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.get"]], "getsizeof (graphtage.utils.sized attribute)": [[26, "graphtage.utils.Sized.getsizeof"]], "getsizeof() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.getsizeof"]], "getsizeof() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.getsizeof"]], "getsizeof() (in module graphtage.utils)": [[26, "graphtage.utils.getsizeof"]], "graphtage.utils": [[26, "module-graphtage.utils"]], "items() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.items"]], "items() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.items"]], "items() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.items"]], "items() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.items"]], "keys() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.keys"]], "keys() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.keys"]], "keys() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.keys"]], "keys() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.keys"]], "largest() (in module graphtage.utils)": [[26, "graphtage.utils.largest"]], "most_common() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.most_common"]], "most_common() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.most_common"]], "move_to_end() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.move_to_end"]], "num_cols (graphtage.utils.sparsematrix attribute)": [[26, "graphtage.utils.SparseMatrix.num_cols"]], "num_cols (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.num_cols"]], "num_filled_elements() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.num_filled_elements"]], "num_rows (graphtage.utils.sparsematrix attribute)": [[26, "graphtage.utils.SparseMatrix.num_rows"]], "pop() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.pop"]], "pop() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.pop"]], "pop() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.pop"]], "popitem() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.popitem"]], "popitem() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.popitem"]], "popitem() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.popitem"]], "row (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.row"]], "row_num (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.row_num"]], "rows (graphtage.utils.sparsematrix attribute)": [[26, "graphtage.utils.SparseMatrix.rows"]], "setdefault() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.setdefault"]], "setdefault() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.setdefault"]], "setdefault() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.setdefault"]], "shape() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.shape"]], "shape() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.shape"]], "smallest() (in module graphtage.utils)": [[26, "graphtage.utils.smallest"]], "subtract() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.subtract"]], "subtract() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.subtract"]], "update() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.update"]], "update() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.update"]], "update() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.update"]], "values() (graphtage.utils.hashablecounter method)": [[26, "graphtage.utils.HashableCounter.values"]], "values() (graphtage.utils.orderedcounter method)": [[26, "graphtage.utils.OrderedCounter.values"]], "values() (graphtage.utils.sparsematrix method)": [[26, "graphtage.utils.SparseMatrix.values"]], "values() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[26, "graphtage.utils.SparseMatrix.SparseMatrixRow.values"]], "dev_build (in module graphtage.version)": [[27, "graphtage.version.DEV_BUILD"]], "version_string (in module graphtage.version)": [[27, "graphtage.version.VERSION_STRING"]], "__version__ (in module graphtage.version)": [[27, "graphtage.version.__version__"]], "git_branch() (in module graphtage.version)": [[27, "graphtage.version.git_branch"]], "graphtage.version": [[27, "module-graphtage.version"]], "default_instance (graphtage.xml.xmlchildformatter attribute)": [[28, "graphtage.xml.XMLChildFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.xml.xmlelementattribformatter attribute)": [[28, "graphtage.xml.XMLElementAttribFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.xml.xmlformatter attribute)": [[28, "graphtage.xml.XMLFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.xml.xmlstringformatter attribute)": [[28, "graphtage.xml.XMLStringFormatter.DEFAULT_INSTANCE"]], "html (class in graphtage.xml)": [[28, "graphtage.xml.HTML"]], "xml (class in graphtage.xml)": [[28, "graphtage.xml.XML"]], "xmlchildformatter (class in graphtage.xml)": [[28, "graphtage.xml.XMLChildFormatter"]], "xmlelement (class in graphtage.xml)": [[28, "graphtage.xml.XMLElement"]], "xmlelementattribformatter (class in graphtage.xml)": [[28, "graphtage.xml.XMLElementAttribFormatter"]], "xmlelementchildren (class in graphtage.xml)": [[28, "graphtage.xml.XMLElementChildren"]], "xmlelementedit (class in graphtage.xml)": [[28, "graphtage.xml.XMLElementEdit"]], "xmlelementobj (class in graphtage.xml)": [[28, "graphtage.xml.XMLElementObj"]], "xmlformatter (class in graphtage.xml)": [[28, "graphtage.xml.XMLFormatter"]], "xmlstringformatter (class in graphtage.xml)": [[28, "graphtage.xml.XMLStringFormatter"]], "__init__() (graphtage.xml.html method)": [[28, "graphtage.xml.HTML.__init__"]], "__init__() (graphtage.xml.xml method)": [[28, "graphtage.xml.XML.__init__"]], "__init__() (graphtage.xml.xmlchildformatter method)": [[28, "graphtage.xml.XMLChildFormatter.__init__"]], "__init__() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.__init__"]], "__init__() (graphtage.xml.xmlelementattribformatter method)": [[28, "graphtage.xml.XMLElementAttribFormatter.__init__"]], "__init__() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.__init__"]], "__init__() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit.__init__"]], "__init__() (graphtage.xml.xmlelementobj method)": [[28, "graphtage.xml.XMLElementObj.__init__"]], "__init__() (graphtage.xml.xmlformatter method)": [[28, "graphtage.xml.XMLFormatter.__init__"]], "__init__() (graphtage.xml.xmlstringformatter method)": [[28, "graphtage.xml.XMLStringFormatter.__init__"]], "__iter__() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.__iter__"]], "__iter__() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit.__iter__"]], "__len__() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.__len__"]], "__lt__() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit.__lt__"]], "__new__() (graphtage.xml.xmlchildformatter static method)": [[28, "graphtage.xml.XMLChildFormatter.__new__"]], "__new__() (graphtage.xml.xmlelementattribformatter static method)": [[28, "graphtage.xml.XMLElementAttribFormatter.__new__"]], "__new__() (graphtage.xml.xmlformatter static method)": [[28, "graphtage.xml.XMLFormatter.__new__"]], "__new__() (graphtage.xml.xmlstringformatter static method)": [[28, "graphtage.xml.XMLStringFormatter.__new__"]], "_debug_tighten_bounds() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit._debug_tighten_bounds"]], "add_edit_modifier() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.add_edit_modifier"]], "add_edit_modifier() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.add_edit_modifier"]], "all_children_are_leaves() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.all_children_are_leaves"]], "attrib (graphtage.xml.xmlelementobj attribute)": [[28, "graphtage.xml.XMLElementObj.attrib"]], "attrib_edit (graphtage.xml.xmlelementedit attribute)": [[28, "graphtage.xml.XMLElementEdit.attrib_edit"]], "bounds() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit.bounds"]], "build_tree() (graphtage.xml.html method)": [[28, "graphtage.xml.HTML.build_tree"]], "build_tree() (graphtage.xml.xml method)": [[28, "graphtage.xml.XML.build_tree"]], "build_tree() (in module graphtage.xml)": [[28, "graphtage.xml.build_tree"]], "build_tree_handling_errors() (graphtage.xml.html method)": [[28, "graphtage.xml.HTML.build_tree_handling_errors"]], "build_tree_handling_errors() (graphtage.xml.xml method)": [[28, "graphtage.xml.XML.build_tree_handling_errors"]], "calculate_total_size() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.calculate_total_size"]], "calculate_total_size() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.calculate_total_size"]], "child_edit (graphtage.xml.xmlelementedit attribute)": [[28, "graphtage.xml.XMLElementEdit.child_edit"]], "children (graphtage.xml.xmlelementobj attribute)": [[28, "graphtage.xml.XMLElementObj.children"]], "children() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.children"]], "children() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.children"]], "container_type (graphtage.xml.xmlelementchildren property)": [[28, "graphtage.xml.XMLElementChildren.container_type"]], "context() (graphtage.xml.xmlstringformatter method)": [[28, "graphtage.xml.XMLStringFormatter.context"]], "copy() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.copy"]], "copy() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.copy"]], "copy_from() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.copy_from"]], "copy_from() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.copy_from"]], "default_instance (graphtage.xml.html attribute)": [[28, "graphtage.xml.HTML.default_instance"]], "default_instance (graphtage.xml.xml attribute)": [[28, "graphtage.xml.XML.default_instance"]], "delimiter_callback (graphtage.xml.xmlchildformatter attribute)": [[28, "graphtage.xml.XMLChildFormatter.delimiter_callback"]], "delimiter_callback (graphtage.xml.xmlelementattribformatter attribute)": [[28, "graphtage.xml.XMLElementAttribFormatter.delimiter_callback"]], "dfs() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.dfs"]], "dfs() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.dfs"]], "diff() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.diff"]], "diff() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.diff"]], "edit_print() (graphtage.xml.xmlchildformatter method)": [[28, "graphtage.xml.XMLChildFormatter.edit_print"]], "edit_print() (graphtage.xml.xmlelementattribformatter method)": [[28, "graphtage.xml.XMLElementAttribFormatter.edit_print"]], "editable_dict() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.editable_dict"]], "editable_dict() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.editable_dict"]], "edited (graphtage.xml.xmlelement property)": [[28, "graphtage.xml.XMLElement.edited"]], "edited (graphtage.xml.xmlelementchildren property)": [[28, "graphtage.xml.XMLElementChildren.edited"]], "edits() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.edits"]], "edits() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.edits"]], "edits() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit.edits"]], "escape() (graphtage.xml.xmlstringformatter method)": [[28, "graphtage.xml.XMLStringFormatter.escape"]], "from_node (graphtage.xml.xmlelementedit attribute)": [[28, "graphtage.xml.XMLElementEdit.from_node"]], "get_all_edit_contexts() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.get_all_edit_contexts"]], "get_all_edits() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.get_all_edits"]], "get_all_edits() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.get_all_edits"]], "get_default_formatter() (graphtage.xml.html method)": [[28, "graphtage.xml.HTML.get_default_formatter"]], "get_default_formatter() (graphtage.xml.xml method)": [[28, "graphtage.xml.XML.get_default_formatter"]], "get_formatter() (graphtage.xml.xmlchildformatter method)": [[28, "graphtage.xml.XMLChildFormatter.get_formatter"]], "get_formatter() (graphtage.xml.xmlelementattribformatter method)": [[28, "graphtage.xml.XMLElementAttribFormatter.get_formatter"]], "get_formatter() (graphtage.xml.xmlformatter method)": [[28, "graphtage.xml.XMLFormatter.get_formatter"]], "get_formatter() (graphtage.xml.xmlstringformatter method)": [[28, "graphtage.xml.XMLStringFormatter.get_formatter"]], "graphtage.xml": [[28, "module-graphtage.xml"]], "has_non_zero_cost() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit.has_non_zero_cost"]], "initial_bounds (graphtage.xml.xmlelementedit attribute)": [[28, "graphtage.xml.XMLElementEdit.initial_bounds"]], "is_complete() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit.is_complete"]], "is_leaf (graphtage.xml.xmlelement property)": [[28, "graphtage.xml.XMLElement.is_leaf"]], "is_leaf (graphtage.xml.xmlelementchildren property)": [[28, "graphtage.xml.XMLElementChildren.is_leaf"]], "is_partial (graphtage.xml.xmlchildformatter attribute)": [[28, "graphtage.xml.XMLChildFormatter.is_partial"]], "is_partial (graphtage.xml.xmlelementattribformatter attribute)": [[28, "graphtage.xml.XMLElementAttribFormatter.is_partial"]], "is_partial (graphtage.xml.xmlformatter attribute)": [[28, "graphtage.xml.XMLFormatter.is_partial"]], "is_partial (graphtage.xml.xmlstringformatter attribute)": [[28, "graphtage.xml.XMLStringFormatter.is_partial"]], "is_quoted (graphtage.xml.xmlstringformatter attribute)": [[28, "graphtage.xml.XMLStringFormatter.is_quoted"]], "item_newline() (graphtage.xml.xmlchildformatter method)": [[28, "graphtage.xml.XMLChildFormatter.item_newline"]], "item_newline() (graphtage.xml.xmlelementattribformatter method)": [[28, "graphtage.xml.XMLElementAttribFormatter.item_newline"]], "items_indent() (graphtage.xml.xmlchildformatter method)": [[28, "graphtage.xml.XMLChildFormatter.items_indent"]], "items_indent() (graphtage.xml.xmlelementattribformatter method)": [[28, "graphtage.xml.XMLElementAttribFormatter.items_indent"]], "make_edited() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.make_edited"]], "make_edited() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.make_edited"]], "on_diff() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit.on_diff"]], "parent (graphtage.xml.xmlchildformatter attribute)": [[28, "graphtage.xml.XMLChildFormatter.parent"]], "parent (graphtage.xml.xmlelement property)": [[28, "graphtage.xml.XMLElement.parent"]], "parent (graphtage.xml.xmlelementattribformatter attribute)": [[28, "graphtage.xml.XMLElementAttribFormatter.parent"]], "parent (graphtage.xml.xmlelementchildren property)": [[28, "graphtage.xml.XMLElementChildren.parent"]], "parent (graphtage.xml.xmlformatter attribute)": [[28, "graphtage.xml.XMLFormatter.parent"]], "parent (graphtage.xml.xmlstringformatter attribute)": [[28, "graphtage.xml.XMLStringFormatter.parent"]], "print() (graphtage.xml.xmlchildformatter method)": [[28, "graphtage.xml.XMLChildFormatter.print"]], "print() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.print"]], "print() (graphtage.xml.xmlelementattribformatter method)": [[28, "graphtage.xml.XMLElementAttribFormatter.print"]], "print() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.print"]], "print() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit.print"]], "print() (graphtage.xml.xmlformatter method)": [[28, "graphtage.xml.XMLFormatter.print"]], "print() (graphtage.xml.xmlstringformatter method)": [[28, "graphtage.xml.XMLStringFormatter.print"]], "print_keyvaluepairnode() (graphtage.xml.xmlelementattribformatter method)": [[28, "graphtage.xml.XMLElementAttribFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.xml.xmlformatter method)": [[28, "graphtage.xml.XMLFormatter.print_LeafNode"]], "print_listnode() (graphtage.xml.xmlchildformatter method)": [[28, "graphtage.xml.XMLChildFormatter.print_ListNode"]], "print_mappingnode() (graphtage.xml.xmlelementattribformatter method)": [[28, "graphtage.xml.XMLElementAttribFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.xml.xmlelementattribformatter method)": [[28, "graphtage.xml.XMLElementAttribFormatter.print_MultiSetNode"]], "print_sequencenode() (graphtage.xml.xmlchildformatter method)": [[28, "graphtage.xml.XMLChildFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.xml.xmlelementattribformatter method)": [[28, "graphtage.xml.XMLElementAttribFormatter.print_SequenceNode"]], "print_stringedit() (graphtage.xml.xmlstringformatter method)": [[28, "graphtage.xml.XMLStringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.xml.xmlstringformatter method)": [[28, "graphtage.xml.XMLStringFormatter.print_StringNode"]], "print_xmlelement() (graphtage.xml.xmlformatter method)": [[28, "graphtage.xml.XMLFormatter.print_XMLElement"]], "print_parent_context() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.print_parent_context"]], "print_parent_context() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.print_parent_context"]], "root (graphtage.xml.xmlchildformatter property)": [[28, "graphtage.xml.XMLChildFormatter.root"]], "root (graphtage.xml.xmlelementattribformatter property)": [[28, "graphtage.xml.XMLElementAttribFormatter.root"]], "root (graphtage.xml.xmlformatter property)": [[28, "graphtage.xml.XMLFormatter.root"]], "root (graphtage.xml.xmlstringformatter property)": [[28, "graphtage.xml.XMLStringFormatter.root"]], "sub_format_types (graphtage.xml.xmlchildformatter attribute)": [[28, "graphtage.xml.XMLChildFormatter.sub_format_types"]], "sub_format_types (graphtage.xml.xmlelementattribformatter attribute)": [[28, "graphtage.xml.XMLElementAttribFormatter.sub_format_types"]], "sub_format_types (graphtage.xml.xmlformatter attribute)": [[28, "graphtage.xml.XMLFormatter.sub_format_types"]], "sub_format_types (graphtage.xml.xmlstringformatter attribute)": [[28, "graphtage.xml.XMLStringFormatter.sub_format_types"]], "sub_formatters (graphtage.xml.xmlchildformatter attribute)": [[28, "graphtage.xml.XMLChildFormatter.sub_formatters"]], "sub_formatters (graphtage.xml.xmlelementattribformatter attribute)": [[28, "graphtage.xml.XMLElementAttribFormatter.sub_formatters"]], "sub_formatters (graphtage.xml.xmlformatter attribute)": [[28, "graphtage.xml.XMLFormatter.sub_formatters"]], "sub_formatters (graphtage.xml.xmlstringformatter attribute)": [[28, "graphtage.xml.XMLStringFormatter.sub_formatters"]], "tag (graphtage.xml.xmlelement attribute)": [[28, "graphtage.xml.XMLElement.tag"]], "tag (graphtage.xml.xmlelementobj attribute)": [[28, "graphtage.xml.XMLElementObj.tag"]], "tag_edit (graphtage.xml.xmlelementedit attribute)": [[28, "graphtage.xml.XMLElementEdit.tag_edit"]], "text (graphtage.xml.xmlelement attribute)": [[28, "graphtage.xml.XMLElement.text"]], "text (graphtage.xml.xmlelementobj attribute)": [[28, "graphtage.xml.XMLElementObj.text"]], "text_edit (graphtage.xml.xmlelementedit attribute)": [[28, "graphtage.xml.XMLElementEdit.text_edit"]], "tighten_bounds() (graphtage.xml.xmlelementedit method)": [[28, "graphtage.xml.XMLElementEdit.tighten_bounds"]], "to_obj() (graphtage.xml.xmlelement method)": [[28, "graphtage.xml.XMLElement.to_obj"]], "to_obj() (graphtage.xml.xmlelementchildren method)": [[28, "graphtage.xml.XMLElementChildren.to_obj"]], "total_size (graphtage.xml.xmlelement property)": [[28, "graphtage.xml.XMLElement.total_size"]], "total_size (graphtage.xml.xmlelementchildren property)": [[28, "graphtage.xml.XMLElementChildren.total_size"]], "valid (graphtage.xml.xmlelementedit property)": [[28, "graphtage.xml.XMLElementEdit.valid"]], "write_char() (graphtage.xml.xmlstringformatter method)": [[28, "graphtage.xml.XMLStringFormatter.write_char"]], "write_end_quote() (graphtage.xml.xmlstringformatter method)": [[28, "graphtage.xml.XMLStringFormatter.write_end_quote"]], "write_start_quote() (graphtage.xml.xmlstringformatter method)": [[28, "graphtage.xml.XMLStringFormatter.write_start_quote"]], "default_instance (graphtage.yaml.yamldictformatter attribute)": [[29, "graphtage.yaml.YAMLDictFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamlformatter attribute)": [[29, "graphtage.yaml.YAMLFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamllistformatter attribute)": [[29, "graphtage.yaml.YAMLListFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamlstringformatter attribute)": [[29, "graphtage.yaml.YAMLStringFormatter.DEFAULT_INSTANCE"]], "yaml (class in graphtage.yaml)": [[29, "graphtage.yaml.YAML"]], "yamldictformatter (class in graphtage.yaml)": [[29, "graphtage.yaml.YAMLDictFormatter"]], "yamlformatter (class in graphtage.yaml)": [[29, "graphtage.yaml.YAMLFormatter"]], "yamlkeyvaluepairformatter (class in graphtage.yaml)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter"]], "yamllistformatter (class in graphtage.yaml)": [[29, "graphtage.yaml.YAMLListFormatter"]], "yamlstringformatter (class in graphtage.yaml)": [[29, "graphtage.yaml.YAMLStringFormatter"]], "__init__() (graphtage.yaml.yaml method)": [[29, "graphtage.yaml.YAML.__init__"]], "__init__() (graphtage.yaml.yamldictformatter method)": [[29, "graphtage.yaml.YAMLDictFormatter.__init__"]], "__init__() (graphtage.yaml.yamlformatter method)": [[29, "graphtage.yaml.YAMLFormatter.__init__"]], "__init__() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.__init__"]], "__init__() (graphtage.yaml.yamllistformatter method)": [[29, "graphtage.yaml.YAMLListFormatter.__init__"]], "__init__() (graphtage.yaml.yamlstringformatter method)": [[29, "graphtage.yaml.YAMLStringFormatter.__init__"]], "__new__() (graphtage.yaml.yamldictformatter static method)": [[29, "graphtage.yaml.YAMLDictFormatter.__new__"]], "__new__() (graphtage.yaml.yamlformatter static method)": [[29, "graphtage.yaml.YAMLFormatter.__new__"]], "__new__() (graphtage.yaml.yamlkeyvaluepairformatter static method)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.__new__"]], "__new__() (graphtage.yaml.yamllistformatter static method)": [[29, "graphtage.yaml.YAMLListFormatter.__new__"]], "__new__() (graphtage.yaml.yamlstringformatter static method)": [[29, "graphtage.yaml.YAMLStringFormatter.__new__"]], "build_tree() (graphtage.yaml.yaml method)": [[29, "graphtage.yaml.YAML.build_tree"]], "build_tree() (in module graphtage.yaml)": [[29, "graphtage.yaml.build_tree"]], "build_tree_handling_errors() (graphtage.yaml.yaml method)": [[29, "graphtage.yaml.YAML.build_tree_handling_errors"]], "context() (graphtage.yaml.yamlstringformatter method)": [[29, "graphtage.yaml.YAMLStringFormatter.context"]], "default_instance (graphtage.yaml.yaml attribute)": [[29, "graphtage.yaml.YAML.default_instance"]], "delimiter_callback (graphtage.yaml.yamldictformatter attribute)": [[29, "graphtage.yaml.YAMLDictFormatter.delimiter_callback"]], "delimiter_callback (graphtage.yaml.yamllistformatter attribute)": [[29, "graphtage.yaml.YAMLListFormatter.delimiter_callback"]], "edit_print() (graphtage.yaml.yamldictformatter method)": [[29, "graphtage.yaml.YAMLDictFormatter.edit_print"]], "edit_print() (graphtage.yaml.yamllistformatter method)": [[29, "graphtage.yaml.YAMLListFormatter.edit_print"]], "escape() (graphtage.yaml.yamlstringformatter method)": [[29, "graphtage.yaml.YAMLStringFormatter.escape"]], "get_default_formatter() (graphtage.yaml.yaml method)": [[29, "graphtage.yaml.YAML.get_default_formatter"]], "get_formatter() (graphtage.yaml.yamldictformatter method)": [[29, "graphtage.yaml.YAMLDictFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamlformatter method)": [[29, "graphtage.yaml.YAMLFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamllistformatter method)": [[29, "graphtage.yaml.YAMLListFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamlstringformatter method)": [[29, "graphtage.yaml.YAMLStringFormatter.get_formatter"]], "graphtage.yaml": [[29, "module-graphtage.yaml"]], "has_newline (graphtage.yaml.yamlstringformatter attribute)": [[29, "graphtage.yaml.YAMLStringFormatter.has_newline"]], "is_partial (graphtage.yaml.yamldictformatter attribute)": [[29, "graphtage.yaml.YAMLDictFormatter.is_partial"]], "is_partial (graphtage.yaml.yamlformatter attribute)": [[29, "graphtage.yaml.YAMLFormatter.is_partial"]], "is_partial (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.is_partial"]], "is_partial (graphtage.yaml.yamllistformatter attribute)": [[29, "graphtage.yaml.YAMLListFormatter.is_partial"]], "is_partial (graphtage.yaml.yamlstringformatter attribute)": [[29, "graphtage.yaml.YAMLStringFormatter.is_partial"]], "is_quoted (graphtage.yaml.yamlstringformatter attribute)": [[29, "graphtage.yaml.YAMLStringFormatter.is_quoted"]], "item_newline() (graphtage.yaml.yamldictformatter method)": [[29, "graphtage.yaml.YAMLDictFormatter.item_newline"]], "item_newline() (graphtage.yaml.yamllistformatter method)": [[29, "graphtage.yaml.YAMLListFormatter.item_newline"]], "items_indent() (graphtage.yaml.yamldictformatter method)": [[29, "graphtage.yaml.YAMLDictFormatter.items_indent"]], "items_indent() (graphtage.yaml.yamllistformatter method)": [[29, "graphtage.yaml.YAMLListFormatter.items_indent"]], "parent (graphtage.yaml.yamldictformatter attribute)": [[29, "graphtage.yaml.YAMLDictFormatter.parent"]], "parent (graphtage.yaml.yamlformatter attribute)": [[29, "graphtage.yaml.YAMLFormatter.parent"]], "parent (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.parent"]], "parent (graphtage.yaml.yamllistformatter attribute)": [[29, "graphtage.yaml.YAMLListFormatter.parent"]], "parent (graphtage.yaml.yamlstringformatter attribute)": [[29, "graphtage.yaml.YAMLStringFormatter.parent"]], "print() (graphtage.yaml.yamldictformatter method)": [[29, "graphtage.yaml.YAMLDictFormatter.print"]], "print() (graphtage.yaml.yamlformatter method)": [[29, "graphtage.yaml.YAMLFormatter.print"]], "print() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.print"]], "print() (graphtage.yaml.yamllistformatter method)": [[29, "graphtage.yaml.YAMLListFormatter.print"]], "print() (graphtage.yaml.yamlstringformatter method)": [[29, "graphtage.yaml.YAMLStringFormatter.print"]], "print_containernode() (graphtage.yaml.yamlformatter method)": [[29, "graphtage.yaml.YAMLFormatter.print_ContainerNode"]], "print_keyvaluepairnode() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.yaml.yamlformatter method)": [[29, "graphtage.yaml.YAMLFormatter.print_LeafNode"]], "print_listnode() (graphtage.yaml.yamllistformatter method)": [[29, "graphtage.yaml.YAMLListFormatter.print_ListNode"]], "print_mappingnode() (graphtage.yaml.yamldictformatter method)": [[29, "graphtage.yaml.YAMLDictFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.yaml.yamldictformatter method)": [[29, "graphtage.yaml.YAMLDictFormatter.print_MultiSetNode"]], "print_sequencenode() (graphtage.yaml.yamldictformatter method)": [[29, "graphtage.yaml.YAMLDictFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.yaml.yamllistformatter method)": [[29, "graphtage.yaml.YAMLListFormatter.print_SequenceNode"]], "print_stringedit() (graphtage.yaml.yamlstringformatter method)": [[29, "graphtage.yaml.YAMLStringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.yaml.yamlstringformatter method)": [[29, "graphtage.yaml.YAMLStringFormatter.print_StringNode"]], "root (graphtage.yaml.yamldictformatter property)": [[29, "graphtage.yaml.YAMLDictFormatter.root"]], "root (graphtage.yaml.yamlformatter property)": [[29, "graphtage.yaml.YAMLFormatter.root"]], "root (graphtage.yaml.yamlkeyvaluepairformatter property)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.root"]], "root (graphtage.yaml.yamllistformatter property)": [[29, "graphtage.yaml.YAMLListFormatter.root"]], "root (graphtage.yaml.yamlstringformatter property)": [[29, "graphtage.yaml.YAMLStringFormatter.root"]], "sub_format_types (graphtage.yaml.yamldictformatter attribute)": [[29, "graphtage.yaml.YAMLDictFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamlformatter attribute)": [[29, "graphtage.yaml.YAMLFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamllistformatter attribute)": [[29, "graphtage.yaml.YAMLListFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamlstringformatter attribute)": [[29, "graphtage.yaml.YAMLStringFormatter.sub_format_types"]], "sub_formatters (graphtage.yaml.yamldictformatter attribute)": [[29, "graphtage.yaml.YAMLDictFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamlformatter attribute)": [[29, "graphtage.yaml.YAMLFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[29, "graphtage.yaml.YAMLKeyValuePairFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamllistformatter attribute)": [[29, "graphtage.yaml.YAMLListFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamlstringformatter attribute)": [[29, "graphtage.yaml.YAMLStringFormatter.sub_formatters"]], "write_char() (graphtage.yaml.yamlstringformatter method)": [[29, "graphtage.yaml.YAMLStringFormatter.write_char"]], "write_end_quote() (graphtage.yaml.yamlstringformatter method)": [[29, "graphtage.yaml.YAMLStringFormatter.write_end_quote"]], "write_obj() (graphtage.yaml.yamlformatter static method)": [[29, "graphtage.yaml.YAMLFormatter.write_obj"]], "write_start_quote() (graphtage.yaml.yamlstringformatter method)": [[29, "graphtage.yaml.YAMLStringFormatter.write_start_quote"]]}})