Search.setIndex({"docnames": ["extending", "graphtage", "graphtage.ast", "graphtage.bounds", "graphtage.builder", "graphtage.constraints", "graphtage.csv", "graphtage.dataclasses", "graphtage.debug", "graphtage.expressions", "graphtage.fibonacci", "graphtage.formatter", "graphtage.json", "graphtage.levenshtein", "graphtage.matching", "graphtage.multiset", "graphtage.object_set", "graphtage.pickle", "graphtage.plist", "graphtage.printer", "graphtage.progress", "graphtage.pydiff", "graphtage.search", "graphtage.sequences", "graphtage.utils", "graphtage.version", "graphtage.xml", "graphtage.yaml", "howitworks", "index", "library", "package", "printing"], "filenames": ["extending.rst", "graphtage.rst", "graphtage.ast.rst", "graphtage.bounds.rst", "graphtage.builder.rst", "graphtage.constraints.rst", "graphtage.csv.rst", "graphtage.dataclasses.rst", "graphtage.debug.rst", "graphtage.expressions.rst", "graphtage.fibonacci.rst", "graphtage.formatter.rst", "graphtage.json.rst", "graphtage.levenshtein.rst", "graphtage.matching.rst", "graphtage.multiset.rst", "graphtage.object_set.rst", "graphtage.pickle.rst", "graphtage.plist.rst", "graphtage.printer.rst", "graphtage.progress.rst", "graphtage.pydiff.rst", "graphtage.search.rst", "graphtage.sequences.rst", "graphtage.utils.rst", "graphtage.version.rst", "graphtage.xml.rst", "graphtage.yaml.rst", "howitworks.rst", "index.rst", "library.rst", "package.rst", "printing.rst"], "titles": ["Extending Graphtage", "graphtage", "graphtage.ast", "graphtage.bounds", "graphtage.builder", "graphtage.constraints", "graphtage.csv", "graphtage.dataclasses", "graphtage.debug", "graphtage.expressions", "graphtage.fibonacci", "graphtage.formatter", "graphtage.json", "graphtage.levenshtein", "graphtage.matching", "graphtage.multiset", "graphtage.object_set", "graphtage.pickle", "graphtage.plist", "graphtage.printer", "graphtage.progress", "graphtage.pydiff", "graphtage.search", "graphtage.sequences", "graphtage.utils", "graphtage.version", "graphtage.xml", "graphtage.yaml", "How Graphtage Works", "Graphtage Documentation", "Using Graphtage Programmatically", "Graphtage API", "Printing Protocol"], "terms": {"i": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32], "design": [0, 11], "extens": [0, 1, 6, 9, 11, 12, 18, 19, 21, 23, 26, 27], "new": [0, 1, 2, 4, 6, 7, 10, 11, 12, 13, 14, 16, 18, 19, 21, 23, 24, 26, 27, 29, 30], "filetyp": [0, 6, 11, 12, 17, 18, 26, 27, 29, 30, 31], "can": [0, 1, 3, 7, 9, 10, 13, 14, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31], "easili": [0, 30], "defin": [0, 1, 2, 4, 6, 7, 9, 11, 14, 15, 16, 18, 21, 23, 24, 26], "well": [0, 1, 2, 3, 4, 6, 7, 18, 21, 23, 26], "node": [0, 1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 18, 21, 23, 26, 27, 28, 29, 32], "type": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "edit": [0, 2, 4, 6, 7, 11, 12, 13, 15, 18, 21, 23, 26, 27, 28, 29, 31, 32], "formatt": [0, 1, 6, 7, 12, 13, 15, 17, 18, 21, 23, 26, 27, 29, 30, 31, 32], "printer": [0, 1, 2, 4, 6, 7, 11, 12, 13, 15, 18, 20, 21, 23, 26, 27, 29, 30, 31, 32], "thi": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "section": [0, 11, 29, 30], "give": [0, 11], "some": [0, 11, 21, 24, 30], "exampl": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 18, 21, 22, 23, 24, 26, 28, 29, 30], "how": [0, 1, 6, 11, 12, 14, 16, 18, 21, 23, 26, 27, 30, 32], "implement": [0, 1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 32], "each": [0, 1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30], "print": [0, 1, 2, 4, 6, 7, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29], "protocol": [0, 1, 3, 6, 7, 12, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31], "from_nod": [1, 7, 13, 14, 15, 21, 23, 26, 30, 32], "to_nod": [1, 7, 13, 14, 15, 21, 23, 26, 30], "none": [1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32], "constant_cost": [1, 7, 21], "int": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 23, 24, 25, 26, 27], "0": [1, 2, 3, 4, 6, 7, 12, 14, 18, 21, 23, 24, 26, 27, 32], "cost_upper_bound": [1, 7, 21], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "abc": [1, 4, 11, 23], "abstract": [1, 2, 9, 11, 14, 19, 21, 23], "__init__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30], "construct": [1, 2, 3, 4, 6, 7, 11, 13, 14, 15, 16, 18, 21, 23, 24, 26, 27, 28, 30], "paramet": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "The": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32], "transform": [1, 2, 4, 6, 7, 13, 18, 21, 23, 26, 29], "A": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "option": [1, 2, 4, 6, 7, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "lower": [1, 3, 7, 13, 15, 21, 23, 26], "bound": [1, 2, 4, 6, 7, 13, 14, 15, 18, 21, 22, 23, 24, 26, 28, 29, 31, 32], "cost": [1, 2, 4, 6, 7, 13, 14, 15, 18, 21, 23, 26, 32], "an": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32], "upper": [1, 3, 7, 11, 13, 15, 21, 23, 26], "__iter__": [1, 2, 6, 7, 9, 10, 13, 15, 21, 23, 24, 26], "iter": [1, 2, 3, 4, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 28], "return": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32], "over": [1, 2, 3, 4, 6, 7, 9, 10, 11, 13, 15, 18, 21, 22, 23, 24, 26], "": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 30, 32], "sub": [1, 6, 7, 11, 12, 13, 15, 18, 21, 23, 26, 27], "result": [1, 2, 6, 7, 9, 12, 13, 14, 15, 21, 22, 23, 24, 26, 29], "__lt__": [1, 2, 3, 7, 13, 15, 21, 23, 26], "other": [1, 2, 3, 4, 7, 11, 13, 14, 15, 16, 21, 22, 23, 24, 26], "test": [1, 2, 6, 7, 11, 13, 15, 18, 21, 23, 26, 28], "whether": [1, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30], "ar": [1, 2, 3, 4, 6, 7, 9, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 28, 30, 32], "less": [1, 3, 7, 10, 13, 14, 15, 21, 23, 26], "than": [1, 2, 3, 7, 9, 10, 13, 14, 15, 19, 21, 22, 23, 24, 26, 30], "_debug_tighten_bound": [1, 7, 13, 15, 21, 23, 26], "bool": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27], "add": [1, 7, 10, 13, 14, 15, 16, 19, 21, 23, 24, 26], "debug": [1, 7, 11, 13, 15, 21, 23, 26, 29, 30, 31, 32], "assert": [1, 7, 13, 15, 21, 23, 26], "when": [1, 2, 6, 7, 9, 10, 11, 12, 13, 15, 18, 19, 21, 23, 26, 27, 30], "tighten": [1, 3, 7, 13, 14, 15, 21, 22, 23, 26], "onli": [1, 2, 4, 6, 7, 9, 10, 11, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26], "rang": [1, 7, 13, 14, 15, 21, 22, 23, 26, 29, 31], "default": [1, 2, 4, 6, 7, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 26, 27, 30], "provid": [1, 2, 3, 4, 6, 7, 9, 10, 12, 15, 17, 18, 19, 21, 23, 24, 26, 27], "wa": [1, 6, 7, 9, 11, 12, 13, 14, 15, 18, 21, 23, 26, 27, 28, 30], "If": [1, 2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32], "constructor": [1, 7, 14, 15, 16, 21, 23, 26], "self": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30], "total_s": [1, 2, 4, 6, 7, 15, 18, 21, 23, 26], "1": [1, 7, 9, 12, 13, 14, 15, 21, 23, 24, 26, 28, 30], "has_non_zero_cost": [1, 7, 13, 15, 21, 23, 26], "ha": [1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 30, 32], "non": [1, 3, 7, 12, 13, 14, 15, 21, 23, 26, 32], "zero": [1, 3, 6, 7, 13, 15, 21, 23, 24, 26, 32], "until": [1, 3, 7, 13, 14, 15, 21, 22, 23, 26, 28], "either": [1, 3, 6, 7, 9, 10, 12, 13, 14, 15, 18, 20, 21, 23, 24, 26, 27], "its": [1, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 26, 27, 29, 30], "greater": [1, 7, 9, 13, 15, 21, 23, 24, 26], "definit": [1, 3, 7, 13, 14, 15, 21, 22, 23, 26], "initial_bound": [1, 7, 13, 15, 21, 22, 23, 26], "is_complet": [1, 7, 13, 14, 15, 21, 23, 26], "complet": [1, 2, 4, 6, 7, 11, 13, 14, 15, 18, 21, 23, 26, 28], "further": [1, 7, 15, 21, 23, 26], "call": [1, 3, 4, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 29, 30, 31, 32], "tighten_bound": [1, 3, 7, 13, 14, 15, 21, 22, 23, 26], "chang": [1, 7, 15, 21, 23, 25, 26, 28], "natur": [1, 7, 11, 15, 21, 23, 26], "consid": [1, 2, 6, 7, 11, 15, 21, 23, 26, 28], "valid": [1, 2, 4, 6, 7, 9, 13, 15, 18, 21, 23, 26], "abl": [1, 7, 11, 14, 15, 19, 21, 23, 26], "discern": [1, 7, 15, 21, 23, 26], "uniqu": [1, 7, 9, 15, 16, 21, 23, 26], "solut": [1, 7, 14, 15, 21, 22, 23, 26], "even": [1, 2, 6, 7, 14, 15, 16, 18, 21, 23, 24, 26, 28], "final": [1, 7, 11, 13, 15, 19, 20, 21, 23, 26], "unknown": [1, 7, 9, 15, 21, 22, 23, 26], "should": [1, 2, 4, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29], "reimplement": [1, 7, 12, 15, 21, 23, 26, 27], "method": [1, 7, 11, 14, 15, 16, 19, 21, 23, 24, 26, 32], "check": [1, 3, 7, 9, 10, 11, 13, 15, 21, 23, 26], "For": [1, 2, 4, 6, 7, 9, 11, 14, 15, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30], "case": [1, 2, 7, 11, 15, 21, 23, 24, 26, 28], "true": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "futur": [1, 7, 14, 15, 21, 23, 26], "affect": [1, 7, 11, 15, 21, 23, 25, 26], "subsequ": [1, 7, 15, 21, 23, 26], "serv": [1, 7, 15, 21, 23, 26], "semant": [1, 7, 9, 10, 15, 21, 23, 26, 29], "on_diff": [1, 7, 13, 15, 21, 23, 26], "callback": [1, 2, 7, 12, 13, 15, 18, 21, 23, 26, 27], "assign": [1, 7, 11, 13, 14, 15, 21, 23, 24, 26, 29, 31], "diff": [1, 2, 4, 6, 7, 13, 15, 18, 23, 26, 28, 29, 30, 31], "recurs": [1, 2, 6, 7, 11, 13, 15, 18, 21, 23, 26], "all": [1, 2, 3, 4, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 21, 23, 24, 26, 30], "edit_list": [1, 7, 13, 15, 21, 23, 26], "append": [1, 7, 13, 15, 19, 21, 23, 25, 26], "ad": [1, 7, 11, 13, 15, 19, 21, 23, 26], "automat": [1, 2, 3, 4, 6, 7, 9, 11, 12, 15, 18, 19, 21, 23, 24, 25, 26, 27], "from": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 26, 27, 28, 30], "never": [1, 2, 6, 7, 11, 12, 17, 18, 21, 23, 26, 27], "directli": [1, 7, 21, 26, 30], "unless": [1, 2, 6, 7, 10, 18, 21, 23, 26, 28], "you": [1, 2, 4, 6, 7, 11, 14, 16, 18, 21, 22, 23, 26, 30], "realli": [1, 7, 21, 26], "know": [1, 7, 11, 21, 26], "what": [1, 7, 21, 26, 29, 31], "re": [1, 7, 21, 26], "do": [1, 6, 7, 10, 14, 15, 16, 21, 26, 29, 30, 31], "rais": [1, 2, 3, 7, 9, 10, 11, 12, 14, 16, 21, 23, 24, 26, 32], "notimplementederror": [1, 7, 21, 26, 32], "caus": [1, 7, 21, 26, 30], "fall": [1, 7, 11, 21, 26], "back": [1, 7, 11, 19, 21, 26], "own": [1, 7, 21, 26], "equival": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 18, 21, 22, 23, 24, 26, 27], "possibl": [1, 2, 4, 6, 7, 11, 13, 18, 21, 22, 23, 26, 28], "have": [1, 2, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 30], "been": [1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 21, 23, 24, 26, 27, 30], "fals": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27], "properti": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 27], "debugg": [1, 29, 31], "like": [1, 2, 4, 6, 7, 9, 12, 14, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30], "bool_lik": 1, "contain": [1, 2, 6, 7, 12, 14, 16, 17, 18, 21, 23, 24, 25, 26, 27, 30], "creat": [1, 2, 4, 6, 7, 10, 16, 18, 21, 22, 23, 24, 26], "given": [1, 2, 4, 6, 7, 9, 10, 11, 12, 18, 19, 21, 22, 23, 24, 26, 27], "object": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32], "obj": [1, 4, 9, 15, 16, 18, 21, 24, 27], "underli": [1, 4, 19], "python": [1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 21, 23, 24, 26, 29], "wrap": [1, 3, 4, 14, 19], "add_edit_modifi": [1, 2, 4, 6, 7, 18, 21, 23, 26], "modifi": [1, 2, 4, 6, 7, 10, 11, 12, 18, 21, 23, 26, 27, 28], "callabl": [1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 18, 21, 23, 24, 26, 27], "calculate_total_s": [1, 2, 4, 6, 7, 18, 21, 23, 26], "By": [1, 2, 4, 6, 9, 12, 17, 18, 21, 23, 26, 27], "leaf": [1, 4, 6], "size": [1, 2, 4, 6, 7, 9, 18, 19, 20, 21, 23, 26, 28, 29, 31], "equal": [1, 2, 3, 4, 9, 14, 15, 16, 24], "length": [1, 2, 4, 6, 9, 26], "string": [1, 4, 6, 9, 11, 12, 13, 17, 18, 19, 25, 26, 27], "represent": [1, 2, 4, 6, 7, 11, 12, 17, 18, 19, 21, 23, 26, 27, 28, 29], "len": [1, 2, 4, 6, 7, 9, 18, 21, 23, 26], "str": [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27], "howev": [1, 2, 4, 6, 7, 9, 11, 18, 21, 22, 23, 25, 26, 28], "subclass": [1, 2, 4, 6, 7, 11, 18, 21, 23, 26], "mai": [1, 4, 20, 22], "overrid": [1, 4, 9, 11, 14, 16], "whatev": [1, 4], "requir": [1, 2, 4, 6, 10, 12, 15, 21, 26, 27], "children": [1, 2, 4, 6, 7, 10, 15, 18, 21, 23, 26], "collect": [1, 4, 9, 10, 14, 15, 26, 29], "so": [1, 4, 10, 11, 14, 16, 23, 32], "alwai": [1, 2, 3, 4, 6, 7, 9, 11, 14, 18, 21, 23, 25, 26], "empti": [1, 4, 6, 9, 14, 16, 24], "tupl": [1, 2, 4, 6, 7, 9, 14, 18, 21, 23, 24, 25, 26], "copi": [1, 2, 4, 6, 7, 14, 18, 21, 23, 24, 26], "t": [1, 2, 4, 6, 7, 10, 11, 12, 13, 14, 16, 18, 21, 23, 24, 26, 27], "deep": [1, 2, 4, 6, 7, 18, 21, 23, 26], "copy_from": [1, 2, 4, 6, 7, 18, 21, 23, 26], "c": [1, 2, 4, 6, 7, 12, 14, 18, 21, 23, 24, 26, 27], "instanc": [1, 2, 4, 6, 7, 11, 12, 14, 16, 18, 19, 21, 23, 24, 26, 27], "tree": [1, 2, 3, 4, 6, 7, 12, 17, 18, 21, 23, 26, 27, 29, 30], "list": [1, 2, 4, 6, 7, 9, 11, 12, 14, 18, 19, 20, 21, 23, 24, 26, 27, 28], "df": [1, 2, 4, 6, 7, 18, 21, 23, 26], "perform": [1, 2, 4, 6, 7, 14, 18, 21, 23, 26, 28, 30], "depth": [1, 2, 4, 6, 7, 18, 21, 23, 26], "first": [1, 2, 4, 6, 7, 11, 14, 18, 21, 23, 24, 26, 30], "travers": [1, 2, 4, 6, 7, 18, 21, 23, 26], "descend": [1, 2, 4, 6, 7, 10, 18, 21, 23, 26], "includ": [1, 2, 4, 6, 7, 9, 10, 18, 21, 23, 25, 26, 30], "yield": [1, 2, 3, 4, 6, 7, 9, 10, 18, 21, 22, 23, 26], "stack": [1, 2, 4, 6, 7, 9, 18, 21, 23, 26], "while": [1, 2, 3, 4, 6, 7, 10, 14, 18, 21, 22, 23, 26], "pop": [1, 2, 3, 4, 6, 7, 10, 14, 16, 18, 21, 23, 24, 26], "extend": [1, 2, 4, 6, 7, 11, 12, 18, 19, 21, 23, 26, 27], "revers": [1, 2, 4, 6, 7, 9, 10, 11, 18, 21, 23, 26], "against": [1, 2, 4, 6, 7, 11, 18, 21, 23, 26], "which": [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30], "version": [1, 2, 4, 6, 7, 12, 14, 18, 21, 23, 26, 27, 29, 30, 31], "being": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 18, 21, 23, 24, 26, 27, 29, 30], "union": [1, 2, 4, 6, 7, 12, 14, 17, 18, 21, 23, 24, 25, 26, 27], "editable_dict": [1, 2, 4, 6, 7, 18, 21, 23, 26], "dict": [1, 2, 4, 6, 7, 9, 12, 14, 18, 19, 21, 23, 24, 26, 28], "ani": [1, 2, 3, 4, 6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "__dict__": [1, 2, 4, 6, 7, 9, 18, 21, 23, 26], "therein": [1, 2, 4, 7, 18, 21, 26], "ret": [1, 2, 4, 6, 7, 18, 21, 23, 26], "is_leaf": [1, 2, 4, 6, 7, 18, 21, 23, 26], "kei": [1, 2, 3, 4, 7, 10, 12, 15, 18, 19, 21, 24, 26, 28, 30], "valu": [1, 2, 3, 4, 6, 7, 9, 10, 12, 14, 16, 18, 21, 22, 23, 24, 26, 28, 30], "item": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 15, 18, 21, 22, 23, 24, 26, 27, 28], "isinst": [1, 2, 4, 7, 11, 18, 21, 26], "make_edit": [1, 2, 4, 6, 7, 18, 21, 23, 26], "us": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28], "wherea": [1, 2, 4, 6, 7, 18, 21, 23, 26], "calcul": [1, 2, 4, 6, 7, 13, 14, 18, 21, 23, 24, 26], "best": [1, 2, 4, 6, 7, 11, 18, 21, 22, 23, 26], "get_all_edit_context": [1, 2, 4, 6, 7, 18, 21, 23, 26], "context": [1, 2, 4, 6, 7, 9, 12, 18, 19, 21, 23, 26, 27], "one": [1, 2, 4, 6, 7, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29], "pair": [1, 2, 4, 6, 7, 9, 14, 18, 21, 23, 24, 26, 28], "path": [1, 2, 4, 6, 7, 12, 17, 18, 21, 23, 24, 26, 27], "note": [1, 2, 4, 6, 7, 11, 14, 16, 18, 21, 23, 26], "explod": [1, 2, 4, 6, 7, 18, 21, 23, 26], "sequenc": [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 15, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31], "get_all_edit": [1, 2, 4, 6, 7, 18, 21, 23, 26, 30], "also": [1, 2, 4, 6, 7, 9, 10, 11, 12, 18, 21, 23, 24, 25, 26, 27, 30], "__class__": [1, 2, 4, 6, 7, 11, 12, 18, 21, 23, 26, 27], "edited_typ": [1, 2, 4, 6, 7, 18, 21, 23, 26], "therebi": [1, 2, 4, 6, 7, 12, 18, 21, 23, 26], "mutabl": [1, 2, 4, 6, 7, 18, 21, 23, 24, 26], "parent": [1, 2, 4, 6, 7, 10, 11, 12, 18, 19, 21, 23, 26, 27, 30], "setter": [1, 2, 4, 6, 7, 18, 21, 23, 26], "set": [1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27], "itself": [1, 2, 4, 6, 7, 10, 12, 14, 17, 18, 21, 22, 23, 26, 27, 30], "child": [1, 2, 4, 6, 7, 10, 12, 18, 21, 23, 26, 27], "doe": [1, 2, 3, 4, 6, 7, 9, 10, 14, 16, 18, 19, 21, 23, 24, 26, 29, 31], "off": [1, 2, 4, 6, 7, 18, 21, 23, 26], "must": [1, 2, 4, 6, 7, 9, 14, 16, 18, 20, 21, 23, 26], "repr": [1, 4], "write": [1, 4, 6, 11, 12, 18, 19, 20, 21, 23, 26, 27], "print_parent_context": [1, 2, 4, 6, 7, 18, 21, 23, 26], "for_child": [1, 2, 4, 6, 7, 18, 21, 23, 26], "repres": [1, 2, 3, 4, 6, 7, 9, 15, 18, 21, 23, 26], "element": [1, 2, 4, 6, 7, 10, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28], "index": [1, 2, 4, 6, 7, 12, 18, 21, 23, 24, 26, 27, 29], "3": [1, 2, 4, 6, 7, 9, 14, 18, 21, 23, 24, 26, 28, 30], "might": [1, 2, 4, 6, 7, 11, 18, 21, 22, 23, 26, 29], "expect": [1, 2, 4, 6, 7, 14, 18, 21, 23, 26], "noth": [1, 2, 4, 6, 7, 14, 18, 21, 23, 26], "to_obj": [1, 2, 4, 6, 7, 18, 21, 23, 26], "arbitrari": [1, 2, 4, 6, 7, 12, 14, 18, 21, 23, 24, 26, 30], "immut": [1, 2, 4, 6, 7, 18, 21, 23, 26, 30], "time": [1, 2, 4, 6, 7, 10, 12, 13, 14, 18, 21, 23, 24, 26, 27, 28], "memoiz": [1, 2, 4, 6, 7, 14, 18, 21, 23, 26], "integ": [1, 2, 3, 4, 6, 7, 9, 14, 18, 21, 22, 23, 26], "allow_key_edit": [1, 2, 21, 26], "auto_match_kei": [1, 2, 15, 21, 26], "allow_list_edit": [1, 2, 6, 26], "allow_list_edits_when_same_length": [1, 2, 6, 26], "check_for_cyc": 1, "ignore_cycl": 1, "kwarg": [1, 2, 3, 6, 7, 9, 11, 12, 14, 18, 19, 20, 21, 23, 24, 26, 27], "pass": [1, 3, 6, 11, 12, 18, 19, 21, 22, 23, 26, 27], "build": [1, 4, 6, 12, 17, 18, 21, 25, 26, 27], "__getattr__": 1, "undefin": [1, 10, 14], "initi": [1, 2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "keyword": [1, 6, 11, 12, 18, 21, 23, 24, 26, 27], "attribut": [1, 9, 11, 19, 21, 26], "specifi": [1, 9, 11, 19, 24], "arg": [1, 2, 3, 6, 7, 9, 11, 12, 14, 18, 19, 20, 21, 23, 24, 26, 27], "compos": 1, "finit": [1, 3, 22], "neg": [1, 3, 24], "avail": [1, 9, 11], "determin": [1, 6, 9, 11, 12, 14, 16, 18, 21, 22, 23, 25, 26, 27, 30, 32], "longer": 1, "regardless": [1, 14, 16], "our": [1, 30], "fulli": [1, 3, 13, 14, 22], "whose": [1, 20], "known": [1, 22], "constant": [1, 3, 9, 10, 21], "kwd": [1, 24], "all_children_are_leav": [1, 2, 6, 7, 18, 21, 23, 26], "leav": [1, 2, 6, 7, 18, 21, 23, 26], "thei": [1, 2, 3, 6, 7, 10, 14, 16, 18, 19, 21, 23, 24, 26, 28, 29], "pure": [1, 2, 6, 7, 10, 14, 18, 21, 23, 26], "map": [1, 2, 6, 7, 9, 13, 14, 18, 21, 23, 24, 26, 29], "sole": [1, 2, 6, 7, 9, 13, 15, 18, 21, 23, 26], "oper": [1, 2, 3, 6, 7, 10, 18, 21, 23, 26, 29, 30, 31], "commandlin": [1, 2, 6, 7, 18, 21, 23, 26, 29], "express": [1, 2, 5, 6, 7, 18, 21, 23, 26, 29, 31], "evalu": [1, 2, 6, 7, 9, 18, 21, 23, 26], "dictionari": [1, 15, 24, 28], "multiset": [1, 14, 29, 31], "unlik": 1, "more": [1, 3, 6, 9, 11, 14, 15, 22, 24], "effici": [1, 14, 22, 24], "altern": 1, "support": [1, 9, 11, 24, 29], "duplic": [1, 21], "__contains__": [1, 2, 21], "k": [1, 2, 10, 21, 24, 30], "_": [1, 2, 4, 9, 12, 21], "run": [1, 2, 21, 25], "worst": [1, 2, 21], "linear": [1, 2, 21], "sought": [1, 2, 21], "exist": [1, 2, 3, 15, 21, 22, 24, 28, 29, 31], "__getitem__": [1, 2, 21, 24], "look": [1, 2, 6, 11, 12, 18, 21, 23, 26, 27], "up": [1, 2, 6, 11, 12, 18, 21, 22, 23, 24, 26, 27], "kvp": [1, 2, 21], "keyerror": [1, 2, 9, 14, 16, 21, 24], "found": [1, 2, 9, 11, 21, 22, 24], "container_typ": [1, 2, 6, 9, 21, 23, 26], "hashablecount": [1, 2, 15, 21, 29, 31], "store": [1, 2, 9, 10, 14, 21, 23, 24], "sequencenod": [1, 2, 6, 12, 13, 15, 18, 21, 26, 27, 29, 31], "_children": [1, 2, 6, 21, 23, 26], "n": [1, 2, 6, 9, 14, 16, 19, 20, 21, 23, 24, 26], "classmethod": [1, 2, 4, 5, 14, 16, 21, 24], "from_dict": [1, 2, 21], "source_dict": [1, 2, 21], "sourc": [1, 2, 12, 13, 21, 24, 26, 27, 28, 30], "similar": [1, 2, 7, 21, 28], "sinc": [1, 2, 3, 6, 14, 15, 21, 28, 30], "make_key_value_pair_nod": [1, 2, 21], "sequenceformatt": [1, 2, 6, 12, 18, 21, 26, 27, 29, 31], "dure": 1, "add_to_collect": 1, "gener": [1, 2, 9, 10, 11, 14, 22, 23, 24, 28, 29, 30], "compris": [1, 13, 30], "mixin": 1, "In": [1, 3, 24, 28, 29], "practic": [1, 14, 29], "almost": [1, 14], "instanti": [1, 6, 11, 12, 18, 20, 21, 23, 26, 27], "edited_cost": 1, "appli": [1, 5, 19, 29], "sum": [1, 2, 6, 9, 14, 21, 23, 24, 26], "e": [1, 2, 3, 9, 10, 11, 14, 19, 22, 24, 28], "upper_bound": [1, 3], "instead": [1, 2, 7, 19, 21, 24], "type_nam": 1, "default_mimetyp": 1, "mimetyp": 1, "file": [1, 6, 11, 12, 17, 18, 24, 26, 27, 28, 29, 30], "format": [1, 6, 12, 14, 18, 19, 21, 23, 26, 27, 28, 29, 31, 32], "registri": [1, 11], "inclus": [1, 3], "command": [1, 11, 19, 20, 25, 26, 30], "line": [1, 6, 19, 20, 25, 26, 28, 30], "argument": [1, 3, 6, 9, 11, 23], "mime": [1, 6, 12, 17, 18, 26, 27], "auto": [1, 3, 9], "detect": [1, 21], "short": 1, "name": [1, 2, 9, 11, 19, 20, 21, 29], "via": 1, "addit": [1, 9, 19, 25, 30], "associ": [1, 6, 9, 10, 11, 12, 17, 18, 21, 23, 26, 27], "valueerror": [1, 3, 9, 10, 12, 14, 21, 23], "conflict": 1, "preexist": [1, 11], "build_tre": [1, 4, 17, 29, 30, 31], "intermedi": [1, 11, 12, 17, 18, 23, 26, 27, 29], "pars": [1, 6, 12, 17, 18, 26, 27, 29, 31], "root": [1, 6, 11, 12, 17, 18, 19, 21, 23, 26, 27], "build_tree_handling_error": [1, 6, 12, 17, 18, 26, 27], "same": [1, 2, 6, 11, 12, 14, 16, 17, 18, 19, 26, 27, 30], "human": [1, 6, 12, 17, 18, 26, 27], "readabl": [1, 6, 11, 12, 17, 18, 19, 20, 26, 27], "error": [1, 6, 9, 12, 17, 18, 26, 27], "failur": [1, 6, 12, 17, 18, 26, 27], "throw": [1, 6, 12, 17, 18, 26, 27], "except": [1, 6, 9, 12, 16, 17, 18, 26, 27], "On": [1, 6, 12, 17, 18, 26, 27], "success": [1, 6, 12, 13, 17, 18, 26, 27], "messag": [1, 6, 9, 12, 17, 18, 19, 20, 26, 27], "default_inst": [1, 6, 11, 12, 17, 18, 21, 23, 26, 27, 30], "get_default_formatt": [1, 6, 12, 17, 18, 26, 27], "namespac": [1, 11], "abcmeta": [1, 11], "metaclass": [1, 6, 11, 12, 18, 21, 23, 26, 27], "regist": [1, 11], "them": [1, 3, 12, 14, 24, 26, 27], "lookup": [1, 9, 11], "clsdict": [1, 11], "__instancecheck__": [1, 11], "cl": [1, 6, 11, 12, 18, 21, 23, 26, 27], "__subclasscheck__": [1, 11], "issubclass": [1, 11], "_abc_caches_clear": [1, 11], "clear": [1, 10, 11, 14, 16, 24], "cach": [1, 9, 11], "_abc_registry_clear": [1, 11], "_dump_registri": [1, 11], "helper": [1, 11, 14], "mro": [1, 11], "resolut": [1, 11], "order": [1, 2, 7, 10, 11, 14, 16, 21, 22, 24, 29], "virtual": [1, 11], "allow": [1, 9, 11, 24, 26, 30], "usag": [1, 9, 11], "decor": [1, 3, 11, 19], "attempt": [1, 3, 14, 22], "two": [1, 11, 13, 14, 16, 24, 29, 30], "share": 1, "most": [1, 4, 9, 14, 21, 22, 24, 28], "current": [1, 9, 21, 22, 26], "protect": [1, 9, 21, 23], "member": [1, 2, 7, 9, 10, 14, 16, 21, 22, 23, 30], "__len__": [1, 2, 6, 21, 23, 24, 26], "number": [1, 2, 6, 9, 10, 11, 12, 19, 21, 22, 23, 24, 25, 26, 27], "total": [1, 2, 6, 12, 21, 22, 23, 26, 27], "output": [1, 11, 14, 19, 20, 21, 24, 30], "sequenceedit": [1, 13, 15, 29, 31], "remaind": [1, 9, 23], "get_formatt": [1, 6, 12, 13, 15, 18, 21, 23, 26, 27, 29, 31, 32], "conveni": [1, 9, 11, 13, 15, 19, 23], "aid": [1, 8, 13, 15, 23], "autom": [1, 11, 13, 15, 23], "It": [1, 9, 10, 11, 13, 14, 15, 23, 25], "cast": [1, 13, 15, 23], "float_lik": 1, "float": [1, 4, 9, 12, 14, 21], "formattercheck": [1, 6, 12, 18, 21, 23, 26, 27, 29, 31], "static": [1, 4, 6, 9, 11, 12, 18, 19, 21, 23, 26, 27], "__new__": [1, 6, 11, 12, 18, 21, 23, 26, 27], "popul": [1, 6, 11, 12, 18, 21, 23, 24, 26, 27], "sub_formatt": [1, 6, 11, 12, 18, 21, 23, 26, 27], "base_formatt": [1, 6, 11, 12, 18, 21, 23, 26, 27], "is_parti": [1, 6, 11, 12, 18, 21, 23, 26, 27], "manual": [1, 6, 11, 12, 18, 20, 21, 23, 26, 27], "node_or_edit": [1, 6, 12, 18, 21, 23, 26, 27, 32], "with_edit": [1, 6, 12, 18, 21, 23, 26, 27, 32], "veri": [1, 6, 12, 18, 21, 23, 26, 27], "complex": [1, 6, 9, 12, 18, 21, 23, 26, 27, 29], "due": [1, 6, 12, 18, 21, 23, 26, 27], "see": [1, 6, 11, 12, 18, 20, 21, 23, 26, 27, 29, 30, 32], "detail": [1, 6, 12, 18, 21, 23, 26, 27], "descript": [1, 6, 12, 18, 21, 23, 26, 27], "sub_format_typ": [1, 6, 11, 12, 18, 21, 23, 26, 27], "correspond": [1, 6, 11, 12, 18, 21, 23, 24, 26, 27], "to_insert": [1, 15], "insert_into": 1, "penalti": [1, 13], "insert_str": 1, "int_lik": 1, "from_kvp": 1, "to_kvp": 1, "__eq__": [1, 2, 14, 16], "anoth": [1, 2, 3, 6, 9, 11, 13, 14, 15, 24, 26, 28, 30], "keyvaluepair": [1, 2], "compar": [1, 2, 3, 6, 10, 11, 14, 16, 26, 29], "otherwis": [1, 2, 9, 24, 32], "smaller": [1, 2, 3], "blue": [1, 2, 12, 21], "follow": [1, 2, 6, 9, 11, 12, 18, 21, 23, 24, 26, 27, 32], "bright": [1, 2, 12, 19], "white": [1, 2], "match_from": 1, "match_to": 1, "null": [1, 14, 16], "initial_cost": 1, "compound": 1, "choos": [1, 32], "among": 1, "compet": 1, "chosen": [1, 32], "search": [1, 29, 31], "iterativetighteningsearch": [1, 29, 31], "One": [1, 3], "choic": [1, 4, 21], "best_poss": 1, "yet": [1, 11, 13, 22, 24], "to_remov": [1, 15], "remove_from": [1, 30], "remove_str": 1, "to_replac": 1, "replace_with": 1, "escap": [1, 6, 12, 19, 26, 27], "onc": [1, 12, 13, 26, 27], "charact": [1, 9, 12, 19, 26, 27], "is_quot": [1, 12, 26, 27], "print_stringedit": [1, 12, 26, 27], "print_stringnod": [1, 12, 18, 26, 27], "write_char": [1, 12, 26, 27], "num_edit": [1, 12, 26, 27], "There": [1, 9, 12, 19, 26, 27, 29, 30], "need": [1, 6, 12, 14, 26, 27, 30], "special": [1, 4, 11, 12, 21, 26, 27, 28, 32], "alreadi": [1, 3, 9, 10, 12, 14, 19, 26, 27], "configur": [1, 12, 26, 27], "prior": [1, 12, 14, 26, 27], "write_end_quot": [1, 12, 26, 27], "end": [1, 9, 12, 13, 18, 19, 21, 23, 24, 26, 27], "quot": [1, 12, 26, 27], "necessari": [1, 3, 11, 13, 14, 19, 26, 27], "write_start_quot": [1, 12, 26, 27], "start": [1, 9, 11, 12, 13, 18, 19, 21, 23, 26, 27, 28, 29], "string_lik": 1, "byte": [1, 4, 9, 12, 19, 20, 21, 24], "intend": [1, 3, 4], "hand": 1, "respons": [1, 30], "dynam": [1, 11], "both": [1, 3, 11, 14, 24, 29, 30], "variabl": [1, 9, 11, 30], "new_nod": 1, "wrapped_tree_nod": 1, "Its": [1, 29], "accept": [1, 10, 14, 16, 24, 26], "potenti": 1, "itertool": 1, "chain": 1, "els": [1, 11, 20, 24], "mime_typ": 1, "At": 1, "least": [1, 6, 12, 18, 21, 23, 24, 26, 27], "guess": 1, "guess_typ": 1, "could": [1, 11, 14, 25], "identifi": [1, 6, 9], "s1": 1, "s2": 1, "editdist": [1, 29, 31], "comput": [1, 9, 13, 14, 15, 16, 19], "distanc": [1, 13, 28], "between": [1, 12, 13, 14, 18, 21, 23, 26, 27, 30], "list1": 1, "list2": 1, "insert_remove_penalti": [1, 13], "levenshtein": [1, 28, 29, 31], "syntax": [2, 21, 30], "dataclassnod": [2, 21, 29, 31], "Be": [2, 7, 21], "care": [2, 7, 21], "post_init": [2, 7, 21], "treenod": [2, 4, 5, 6, 7, 11, 12, 13, 14, 15, 17, 18, 21, 23, 26, 27, 29, 30, 31, 32], "editedtreenod": [2, 4, 6, 7, 13, 15, 18, 21, 23, 26, 29, 30, 31], "compoundedit": [2, 4, 6, 7, 15, 18, 21, 23, 26, 29, 31], "containernod": [2, 4, 6, 7, 12, 18, 21, 23, 26, 27, 29, 31], "after": [2, 3, 6, 7, 9, 10, 12, 13, 18, 20, 21, 23, 24, 26, 27], "super": [2, 6, 7, 12, 13, 21], "superclass": [2, 7, 21], "__mro__": [2, 7, 11, 21], "target": [2, 13], "listnod": [2, 4, 6, 7, 12, 18, 21, 23, 26, 29, 30, 31], "mappingnod": [2, 6, 7, 12, 18, 21, 23, 26, 29, 31], "match": [2, 6, 7, 12, 13, 15, 16, 18, 21, 23, 26, 27, 29, 31], "function": [2, 4, 7, 10, 15, 16, 17, 22, 23, 29, 30, 31], "func": [2, 3, 19], "remov": [2, 6, 10, 12, 13, 14, 16, 19, 22, 24, 26, 27, 29, 30, 31], "insert": [2, 6, 9, 10, 12, 13, 24, 26, 27, 29, 31], "dictnod": [2, 15, 21, 29, 30, 31], "keyvaluepairnod": [2, 12, 15, 18, 21, 26, 27, 29, 30, 31], "leafnod": [2, 4, 6, 12, 18, 21, 26, 27, 29, 31], "from_nam": 2, "stringnod": [2, 4, 12, 18, 21, 26, 27, 29, 30, 31], "slice": [2, 9], "modul": [3, 4, 9, 14, 15, 19, 20, 21, 22, 25, 26, 28, 29, 31], "import": [3, 11, 14, 21, 24, 29, 30, 31], "p": [3, 6, 12, 18, 21, 23, 26, 27, 28, 30], "posit": [3, 6, 24], "10": [3, 9, 14], "20": [3, 14], "30": 3, "varieti": 3, "data": [3, 4, 14, 16, 24, 30], "structur": [3, 4, 14, 16, 24, 28, 29, 30], "algorithm": [3, 9, 10, 13, 14, 16, 22, 28, 30], "g": [3, 9, 11, 19, 22, 28], "negative_infin": [3, 29, 31], "positive_infin": [3, 29, 31], "shrink": [3, 14, 22], "were": [3, 11, 14, 22], "suffici": 3, "distinct": [3, 14], "differenti": [3, 30], "domin": 3, "event": [3, 14], "ident": [3, 16], "id": [3, 9], "constitut": 3, "where": [3, 9, 11, 12, 19, 21], "infinit": 3, "primarili": 3, "unbound": [3, 13, 24, 28], "lower_bound": [3, 13, 32], "neither": [3, 15], "intersect": [3, 14, 16, 24], "to_interv": 3, "interv": 3, "convert": [3, 9, 30], "intervaltre": 3, "packag": 3, "ensur": [3, 9], "overlap": [3, 14], "b": [3, 14, 22, 24], "smallest": [3, 10, 14, 22, 29, 31], "minimum": [3, 13, 14, 15, 24, 28], "repeatedli": 3, "ignor": [3, 21, 24], "heap": [3, 10], "fibonacciheap": [3, 29, 31], "push": [3, 10], "simplifi": 4, "ir": 4, "buildopt": [4, 6, 12, 17, 18, 21, 26, 27, 29, 31], "basic": [4, 11, 19], "build_int": [4, 21], "build_str": [4, 21], "nonetyp": [4, 21], "build_non": [4, 21], "build_float": [4, 21], "build_bool": [4, 21], "build_list": [4, 21], "frozenset": [4, 9, 14, 16, 21], "build_set": [4, 21], "build_dict": [4, 21], "expand": [4, 9, 11, 13, 21], "expand_list": [4, 21], "expand_dict": [4, 21], "_resolv": [4, 21], "obj_typ": [4, 21], "resolv": [4, 9, 11, 21], "boolnod": [4, 18, 21, 29, 31], "floatnod": [4, 18, 21, 29, 31], "integernod": [4, 18, 21, 29, 30, 31], "nullnod": [4, 21, 29, 31], "multisetnod": [4, 12, 14, 15, 21, 29, 31], "root_obj": [4, 21], "node_typ": [4, 11, 21], "default_build": [4, 21], "default_expand": [4, 21], "resolve_build": [4, 21], "resolve_expand": [4, 21], "condit": 5, "dif": [6, 11, 12, 18, 26, 27, 28, 29], "render": [6, 12, 18, 25, 26, 27, 30], "text": [6, 9, 12, 20, 26, 27], "graphtageformatt": [6, 7, 12, 13, 15, 18, 21, 23, 26, 27, 29, 31, 32], "top": 6, "level": 6, "print_leafnod": [6, 12, 18, 26, 27], "column": [6, 24], "row": [6, 24], "writer": [6, 20, 29, 31], "writerow": 6, "json": [6, 11, 21, 23, 28, 29, 30, 31], "jsonformatt": [6, 21, 29, 30, 31], "edit_print": [6, 12, 18, 21, 23, 26, 27], "simpli": [6, 11, 12, 18, 21, 23, 26, 27], "deleg": [6, 12, 15, 18, 21, 23, 26, 27, 32], "partial": [6, 10, 12, 14, 18, 21, 23, 26, 27], "item_newlin": [6, 12, 18, 21, 23, 26, 27], "is_first": [6, 12, 18, 21, 23, 26, 27], "is_last": [6, 12, 18, 21, 23, 26, 27], "singl": 6, "items_ind": [6, 12, 18, 21, 23, 26, 27], "indent": [6, 12, 18, 19, 21, 23, 26, 27], "immedi": [6, 11, 12, 18, 21, 23, 26, 27], "start_symbol": [6, 12, 18, 21, 23, 26, 27], "befor": [6, 9, 11, 12, 18, 21, 22, 23, 24, 25, 26, 27], "print_csvrow": 6, "print_sequencenod": [6, 12, 18, 21, 23, 26, 27], "With": [6, 18, 21, 23, 26, 27], "just": [6, 11, 18, 21, 23, 26, 27, 30], "newlin": [6, 11, 12, 18, 19, 20, 21, 23, 26, 27], "last": [6, 11, 12, 13, 18, 20, 21, 23, 24, 26, 27], "becaus": [6, 11, 14], "print_csvnod": 6, "reader": 6, "extra": [6, 12, 18, 19, 20, 21, 23, 26, 27], "abstractcompoundedit": [7, 13, 15, 21, 23, 26, 29, 31], "abstractedit": [7, 15, 21, 23, 26, 29, 31], "util": [8, 28, 30, 31], "safer": 9, "eval": 9, "infix": 9, "adjust": 9, "preced": [9, 11], "getitem": 9, "modicum": 9, "safeti": 9, "access": [9, 24], "programm": 9, "disallow": 9, "privat": 9, "here": [9, 11, 14, 25, 29, 30], "foo": [9, 11, 24, 28, 30], "bar": [9, 11, 20, 28, 30], "2": [9, 14, 24, 28, 30], "rpn": 9, "raw_str": 9, "op": 9, "5": [9, 14, 24, 28], "lambda": [9, 10, 12, 14, 18, 21, 23, 26, 27], "0x135057f80": 9, "multipl": 9, "4": [9, 14, 24, 28, 30], "0x135057d40": 9, "local": [9, 11], "40": 9, "1234": 9, "elid": 9, "trace": 9, "cannot": [9, 22, 28], "read": [9, 19, 20, 24, 29], "0x127808170": 9, "0x127805ef0": 9, "offset": [9, 19, 20], "15": [9, 28], "default_glob": [9, 29, 31], "global": [9, 11, 19, 22], "ab": 9, "ascii": 9, "bin": 9, "bytearrai": 9, "chr": 9, "enumer": 9, "filter": 9, "hash": [9, 14, 16, 24], "hex": 9, "max": [9, 24], "min": 9, "oct": 9, "ord": [9, 14], "round": 9, "sort": [9, 10, 14, 22, 24, 28, 29, 31], "zip": 9, "operators_by_nam": [9, 29, 31], "identifier_byt": [9, 29, 31], "letter": 9, "plu": [9, 19, 24], "close": [9, 19, 20], "bracket": 9, "raw_text": 9, "raw": 9, "within": 9, "input": [9, 11, 14, 16, 22, 24, 28, 30], "raw_token": 9, "origin": [9, 28, 30], "start_token_typ": 9, "alia": [9, 21], "collection_typ": 9, "datastructur": [9, 14], "keep": [9, 19, 24], "track": [9, 19], "polish": 9, "notat": 9, "state": [9, 10], "omit": [9, 10, 12, 18, 19, 20, 21, 23, 24, 26, 27], "get_valu": 9, "liter": 9, "numer": 9, "meta": 9, "inject": 9, "fix": 9, "ariti": 9, "indic": [9, 14, 30], "is_list": 9, "open": [9, 24], "discard": [9, 14, 16], "delimit": [9, 12, 18, 21, 23, 25, 26, 27], "is_function_cal": 9, "enum": 9, "bitwise_and": 9, "9": 9, "bitwise_left_shift": 9, "6": [9, 28], "bitwise_not": 9, "bitwise_or": 9, "11": 9, "bitwise_right_shift": 9, "bitwise_xor": 9, "divis": 9, "8": 9, "function_cal": 9, "greater_than": 9, "7": [9, 28], "greater_than_equ": 9, "IN": 9, "int_divis": 9, "less_than": 9, "less_than_equ": 9, "logical_and": 9, "12": [9, 14], "logical_not": 9, "logical_or": 9, "13": 9, "member_access": 9, "not_equ": 9, "subtract": [9, 24], "ternary_condit": 9, "ternary_els": 9, "14": [9, 14], "unary_minu": 9, "unary_plu": 9, "prioriti": 9, "execut": [9, 28], "is_left_associ": 9, "include_in_global_operator_t": 9, "three": [9, 25, 30], "consum": 9, "left_associ": 9, "left": [9, 10, 13], "programmat": [9, 21], "pari": 9, "runtimeerror": 9, "with_traceback": 9, "tb": 9, "__traceback__": 9, "stream": [9, 19, 20, 24, 30], "io": [9, 19, 20], "commenc": 9, "has_next": 9, "peek": [9, 10], "next": [9, 11, 13], "would": [9, 11, 30], "actual": [9, 10, 19, 32], "prev_token": 9, "previou": 9, "get": [9, 10, 24], "getattr": 9, "permit": [9, 12, 19, 27], "retriev": 9, "underscor": 9, "startswith": 9, "request": [9, 11], "api": [9, 19], "custom": [9, 12, 21, 27, 30], "behavior": [9, 10, 11, 14], "shunt": 9, "yard": 9, "expression_str": 9, "stream_or_str": 9, "mani": [10, 24], "we": [10, 11, 14, 16, 22, 30, 32], "speedup": 10, "amort": 10, "decrease_kei": 10, "x": [10, 12, 17, 18, 27], "decreas": [10, 13], "extract": 10, "comparison": [10, 30], "min_nod": 10, "without": [10, 19], "assum": [10, 12, 28], "delet": 10, "assumpt": [10, 22], "incorrect": [10, 22], "lead": 10, "corrupt": 10, "add_child": 10, "increment": 10, "degre": 10, "sibl": 10, "prevent": [10, 11], "manipul": 10, "mark": [10, 19], "remove_child": 10, "decrement": 10, "right": [10, 13], "wrapper": 10, "reusabl": 11, "textual": 11, "ti": 11, "easiest": 11, "problem": [11, 14, 22, 28], "capabl": [11, 14], "librari": [11, 24, 30], "yaml": [11, 29, 30, 31], "Or": [11, 24], "enabl": [11, 19, 22], "through": [11, 14, 19], "sai": 11, "develop": [11, 14, 25], "mean": 11, "user": 11, "deal": 11, "come": 11, "plai": 11, "magic": [11, 30], "wizardri": 11, "bit": 11, "infer": 11, "figur": 11, "out": [11, 19, 24], "specif": [11, 22, 29], "make": [11, 22], "stringformatt": [11, 12, 26, 27, 29, 31], "def": [11, 30], "print_str": 11, "f": [11, 24], "thing": 11, "registr": 11, "disabl": 11, "intformatt": 11, "print_int": 11, "1337": 11, "work": [11, 13, 14, 15, 30], "demonstr": 11, "inherit": 11, "fooformatt": 11, "print_foo": 11, "straightforward": 11, "enough": 11, "But": [11, 14, 16], "separ": [11, 28], "handl": [11, 19], "barformatt": 11, "print_bar": 11, "cool": 11, "huh": 11, "collis": 11, "let": 11, "join": [11, 29], "oof": 11, "As": [11, 30], "prefer": 11, "got": 11, "lucki": 11, "printout": 11, "though": [11, 14, 24], "happen": 11, "That": 11, "desir": 11, "To": [11, 30], "compartment": 11, "insid": 11, "formtter": 11, "organ": 11, "hierarch": 11, "barstringformatt": 11, "now": 11, "invok": [11, 12, 21], "describ": 11, "proper": 11, "activ": 11, "abov": [11, 13], "__name__": 11, "repeat": [11, 24], "process": 11, "subformatt": 11, "point": [11, 13, 28], "decid": 11, "everi": [11, 19], "begin": [11, 24], "print_": 11, "verifi": 11, "insofar": 11, "checker": 11, "typeerror": 11, "hint": [11, 19, 20], "correct": 11, "made": [11, 20], "accord": 11, "applic": [12, 17, 18, 26, 27], "javascript": 12, "symbol": [12, 18, 21, 23, 25, 26, 27], "end_symbol": [12, 18, 21, 23, 26, 27], "delimiter_callback": [12, 18, 21, 23, 26, 27], "print_mappingnod": [12, 18, 21, 26, 27], "print_multisetnod": [12, 18, 21, 26, 27], "print_containernod": [12, 27], "fallback": [12, 27], "xml": [12, 27, 29, 31], "xmlelement": [12, 27, 29, 31], "print_keyvaluepairnod": [12, 18, 26, 27], "dump": 12, "print_xmlel": [12, 26], "print_listnod": [12, 18, 21, 26, 27], "stringedit": [12, 26, 27, 29, 30, 31], "python_obj": [12, 21], "force_leaf_nod": 12, "unsupport": [12, 21], "onlin": [13, 28], "metric": [13, 28], "improv": [13, 22, 28], "converg": [13, 22, 28], "optim": [13, 14, 22, 28], "discov": [13, 14, 28], "from_seq": 13, "to_seq": 13, "matrix": [13, 14, 24], "diagon": 13, "cell": [13, 24], "reconstruct": [13, 30], "updat": [13, 14, 24, 25], "observ": 13, "monoton": [13, 22], "incomplet": 13, "canon": [13, 28], "solv": [14, 22, 28], "variant": 14, "much": [14, 16], "code": [14, 19], "nearli": 14, "karp": 14, "weight": [14, 28], "bipartit": [14, 28], "karp78": 14, "find": [14, 15, 22, 32], "minim": 14, "part": 14, "wai": 14, "scipi": [14, 24], "asymptot": 14, "inferior": 14, "superior": 14, "compil": 14, "compon": [14, 30], "interest": 14, "d": [14, 24], "edge_weight": 14, "97": 14, "99": 14, "101": 14, "103": 14, "105": 14, "from_nodes_index": 14, "matched_to_nodes_index": 14, "matched_edge_weight": 14, "16": 14, "18": 14, "richard": 14, "m": [14, 28], "o": 14, "mn": 14, "log": 14, "1978": 14, "cost_bar": 14, "cost_star": 14, "_from_iter": [14, 16], "signatur": [14, 16], "_hash": [14, 16], "don": [14, 16], "__hash__": [14, 16], "hashabl": [14, 16], "compat": [14, 16, 20], "ought": [14, 16], "freedom": [14, 16], "built": [14, 16], "effect": [14, 16, 24, 28], "present": [14, 24], "shallow": [14, 24], "differ": [14, 22, 30], "difference_upd": 14, "intersection_upd": 14, "isdisjoint": [14, 16], "issubset": 14, "report": 14, "issuperset": 14, "symmetric_differ": 14, "symmetr": 14, "exactli": 14, "symmetric_difference_upd": 14, "construct_edg": 14, "sorted_neighbor": 14, "matcher": 14, "direct": 14, "overridden": [14, 23], "flip_direct": 14, "path_to": 14, "from_any_of": 14, "is_speci": 14, "head": [14, 25], "tail": 14, "get_edg": 14, "atop": [14, 26], "select": 14, "graph": [14, 28, 29], "make_distinct": [14, 29, 31], "Then": 14, "multisetedit": [14, 29, 31], "dens": 14, "lazili": 14, "realiz": 14, "partwai": 14, "better": 14, "linear_sum_assign": 14, "faster": 14, "retain": 14, "ever": 14, "free_destin": 14, "free_sourc": 14, "min_valu": 14, "max_valu": 14, "dtype": 14, "numpi": 14, "w": [14, 24], "second": 14, "rest": 14, "nativ": [14, 24], "larger": [14, 15], "64": 14, "63": 14, "matched_to_node_index": 14, "boolean": 14, "latter": [15, 29], "conta": 15, "from_set": 15, "to_set": 15, "unord": [15, 29], "weightedbipartitematch": [15, 29, 31], "These": 15, "typic": [15, 23, 25], "nor": 15, "enforc": 15, "signific": 15, "amount": 15, "hold": [16, 24], "those": 16, "upon": 16, "initial_obj": 16, "mutableset": 16, "unhash": 16, "slow": 16, "absent": 16, "pydiffformatt": [17, 29, 31], "appl": 18, "print_boolnod": 18, "print_floatnod": 18, "print_integernod": 18, "print_plistnod": 18, "write_obj": [18, 27], "sever": [19, 29], "reason": [19, 28, 29], "toggl": 19, "ansi": 19, "color": 19, "logic": 19, "pretti": 19, "concurr": 19, "statu": [19, 20], "tqdm": [19, 20], "html": [19, 29, 31], "rather": [19, 30], "default_print": [19, 29, 30, 31], "sy": [19, 20, 24], "stdout": [19, 20, 30], "fore": 19, "ansifor": 19, "ansiback": 19, "style": [19, 23], "ansistyl": 19, "termin": 19, "foreground": 19, "background": 19, "bg_color": 19, "foreground_color": 19, "dim": 19, "end_cod": 19, "is_appli": 19, "start_cod": 19, "combining_mark": 19, "combin": 19, "written": [19, 20], "__enter__": [19, 24], "interact": [19, 24, 26, 30], "flush": [19, 20], "buffer": [19, 20], "isatti": [19, 20], "tty": 19, "marks_str": 19, "raw_writ": 19, "modif": 19, "get_back": 19, "get_for": 19, "titl": 19, "out_stream": [19, 20], "ansi_color": 19, "quiet": [19, 20], "progress": [19, 29, 31], "suppress": [19, 20], "fileno": [19, 20], "along": [19, 20], "html_element": 19, "element_nam": 19, "inlin": 19, "step": [19, 30], "indent_str": 19, "four": [19, 24, 30], "space": [19, 22], "mode": [19, 20], "ellipsi": [19, 20], "anystr": [19, 20], "readlin": [19, 20], "limit": [19, 20], "seek": [19, 20], "whenc": [19, 20], "seekabl": [19, 20], "status_stream": [19, 20], "textio": [19, 20], "strike": 19, "tell": [19, 20], "trang": [19, 20], "truncat": [19, 20], "under_plu": 19, "underneath": 19, "writabl": [19, 20], "write_raw": [19, 20], "stderr": [19, 20], "writelin": [19, 20], "fake": 19, "emit": 19, "statuswrit": [19, 29, 31], "subset": 19, "full": 20, "lifetim": 20, "control": 20, "block": 20, "lost": 20, "memori": [21, 24, 29], "document": [21, 25, 30], "basicbuild": [21, 29, 31], "builder": [21, 29, 31], "_ast": 21, "build_modul": 21, "build_ast_list": 21, "build_assign": 21, "build_nam": 21, "expr": 21, "build_const": 21, "build_cal": 21, "importfrom": 21, "build_import_from": 21, "build_alia": 21, "build_attribut": 21, "build_ast_dict": 21, "subscript": [21, 29, 31], "build_subscript": 21, "expand_modul": 21, "expand_collect": 21, "expand_assign": 21, "expand_const": 21, "expand_cal": 21, "expand_import_from": 21, "expand_ast_dict": 21, "expand_subscript": 21, "as_nam": 21, "jsondictformatt": [21, 23, 29, 31], "jsonlistformatt": [21, 23, 29, 31], "print_pyalia": 21, "print_subscript": 21, "print_assign": 21, "print_import": 21, "print_modul": 21, "class_nam": 21, "attr": 21, "from_obj": 21, "fixedkeydictnod": [21, 29, 31], "print_cal": 21, "print_callargu": 21, "print_keywordargu": 21, "pykeywordargu": 21, "red": 21, "light": 21, "print_pyobj": 21, "print_pyobjattribut": 21, "print_pyobjfixedattribut": 21, "ast": [21, 29, 31], "cycl": 21, "from_py_obj": 21, "to_py_obj": 21, "reveal": 22, "100": 22, "200": 22, "50": 22, "1000": 22, "60": 22, "500": 22, "guarante": 22, "toward": 22, "conform": 22, "150": 22, "160": 22, "155": 22, "153": 22, "about": 22, "rate": 22, "goal": 22, "computation": 22, "fewest": 22, "__bool__": 22, "good": 22, "greatli": 22, "speed": 22, "li": 22, "outsid": 22, "best_match": 22, "thu": 22, "feasibl": 22, "goal_test": 22, "remove_best": 22, "therefor": [22, 28, 30], "reach": 22, "your": 22, "produc": [22, 30], "interleav": 23, "counter": 24, "__add__": 24, "count": 24, "abbb": 24, "bcc": 24, "__and__": 24, "__delitem__": 24, "elem": 24, "miss": 24, "__iadd__": 24, "inplac": 24, "__iand__": 24, "__ior__": 24, "maximum": 24, "__isub__": 24, "abbbc": 24, "bccd": 24, "__missing__": 24, "__neg__": 24, "strip": 24, "flip": 24, "sign": 24, "__or__": 24, "__pos__": 24, "__sub__": 24, "_keep_posit": 24, "intern": [24, 32], "abcabc": 24, "knuth": 24, "prime": 24, "factor": 24, "1836": 24, "17": 24, "prime_factor": 24, "product": 24, "loop": 24, "multipli": 24, "fromkei": 24, "v": 24, "view": 24, "most_common": 24, "common": 24, "abracadabra": 24, "r": 24, "popitem": 24, "lifo": 24, "setdefault": 24, "replac": [24, 29, 31], "reduc": 24, "below": 24, "witch": 24, "watch": 24, "h": 24, "minu": 24, "ordereddict": 24, "rememb": 24, "encount": 24, "And": 24, "gallahad": 24, "od": 24, "move_to_end": 24, "move": 24, "fifo": 24, "num_row": 24, "num_col": 24, "default_valu": 24, "mutablemap": 24, "spars": 24, "matric": 24, "homogen": 24, "sparsematrixrow": 24, "row_num": 24, "col": 24, "indexerror": 24, "content": 24, "approxim": 24, "shape": 24, "lack": 24, "footprint": 24, "matrox": 24, "num_filled_el": 24, "explicitli": 24, "prefix": 24, "suffix": 24, "temporari": 24, "clean": 24, "tmp": 24, "var": 24, "folder": 24, "hrvzrctx6tg2_j17gb6wckph0000gn": 24, "tmpkza5fvr_": 24, "__exit__": 24, "traceback": 24, "filenam": 24, "hasattr": 24, "measur": 24, "central": 25, "inform": 25, "setup": 25, "py": 25, "dev_build": [25, 29, 31], "coincid": 25, "releas": 25, "deploi": 25, "pypi": 25, "git": 25, "branch": 25, "__version__": [25, 29, 31], "major": 25, "minor": 25, "revis": 25, "version_str": [25, 29, 31], "codebas": 25, "ref": 25, "q": 25, "parser": 26, "etre": 26, "elementtre": 26, "xhtml": 26, "tag": 26, "attrib": 26, "attrib_edit": 26, "child_edit": 26, "tag_edit": 26, "text_edit": 26, "path_or_element_tre": 26, "vnd": 27, "has_newlin": 27, "polynomi": 28, "tractabl": 28, "restrict": 28, "class": [28, 29, 30, 31], "dag": 28, "forest": 28, "constraint": [28, 29, 31], "exploit": 28, "particular": 28, "challeng": 28, "extant": 28, "take": 28, "zab": 28, "woo": 28, "foobar": 28, "tool": 28, "canonic": 28, "per": 28, "tradit": 28, "cat": 28, "jq": 28, "u": 28, "Not": 28, "entir": 28, "particularli": 28, "larg": 28, "break": 28, "wagner": 28, "fischer": 28, "destin": 28, "http": 28, "en": 28, "wikipedia": 28, "org": 28, "wiki": 28, "graph_isomorphism_problem": 28, "directed_acyclic_graph": 28, "online_algorithm": 28, "constructive_proof": 28, "levenshtein_dist": [28, 29, 31], "e2": 28, "80": 28, "93fischer_algorithm": 28, "assignment_problem": 28, "np": 28, "purpos": 29, "merg": 29, "csv": [29, 31], "portmanteau": 29, "graftag": 29, "togeth": 29, "grow": 29, "why": [29, 31], "focus": 29, "instruct": 29, "github": 29, "page": 29, "footnot": 29, "constantcostedit": [29, 31], "editcollect": [29, 31], "editsequ": [29, 31], "filetypewatch": [29, 31], "fixedkeydictnodeedit": [29, 31], "keyvaluepairedit": [29, 31], "possibleedit": [29, 31], "treenodemeta": [29, 31], "explode_edit": [29, 31], "get_filetyp": [29, 31], "string_edit_dist": [29, 31], "callargu": [29, 31], "callkeyword": [29, 31], "keywordargu": [29, 31], "boundedcompar": [29, 31], "constantbound": [29, 31], "infin": [29, 31], "min_bound": [29, 31], "repeat_until_tighten": [29, 31], "cyclicrefer": [29, 31], "conditionalmatch": [29, 31], "matchif": [29, 31], "matchunless": [29, 31], "csvformatt": [29, 31], "csvnode": [29, 31], "csvrow": [29, 31], "csvrowformatt": [29, 31], "dataclass": [29, 31], "dataclassedit": [29, 31], "closebracket": [29, 31], "closeparen": [29, 31], "collectioninfo": [29, 31], "comma": [29, 31], "fixedsizecollect": [29, 31], "floattoken": [29, 31], "functioncal": [29, 31], "identifiertoken": [29, 31], "integertoken": [29, 31], "numerictoken": [29, 31], "openbracket": [29, 31], "openparen": [29, 31], "operatortoken": [29, 31], "pairedendtoken": [29, 31], "pairedstarttoken": [29, 31], "pairedtoken": [29, 31], "parenthesi": [29, 31], "parseerror": [29, 31], "stringtoken": [29, 31], "token": [29, 31], "get_memb": [29, 31], "infix_to_rpn": [29, 31], "fibonacci": [29, 31], "heapnod": [29, 31], "maxfibonacciheap": [29, 31], "reversedcompar": [29, 31], "basicformatt": [29, 31], "json5": [29, 31], "jsonstringformatt": [29, 31], "edg": [29, 31], "matchingfromnod": [29, 31], "matchingnod": [29, 31], "matchingtonod": [29, 31], "pathset": [29, 31], "queueelement": [29, 31], "sortededg": [29, 31], "weightedbipartitematcherpartial_implement": [29, 31], "get_dtyp": [29, 31], "min_weight_bipartite_match": [29, 31], "object_set": [29, 31], "identityhash": [29, 31], "objectset": [29, 31], "pickl": [29, 31], "plist": [29, 31], "plistformatt": [29, 31], "plistnod": [29, 31], "plistsequenceformatt": [29, 31], "ansicontext": [29, 31], "combiningmarkcontext": [29, 31], "combiningmarkwrit": [29, 31], "htmlansicontext": [29, 31], "htmlprinter": [29, 31], "nullansicontext": [29, 31], "nullwrit": [29, 31], "rawwrit": [29, 31], "only_ansi": [29, 31], "pydiff": [29, 30, 31], "astbuild": [29, 31], "pyalia": [29, 31], "pydictformatt": [29, 31], "pyimportformatt": [29, 31], "pylistformatt": [29, 31], "pymoduleformatt": [29, 31], "pyobj": [29, 31], "pyobjattribut": [29, 31], "pyobjbuild": [29, 31], "pyobjedit": [29, 31], "pyobjfixedattribut": [29, 31], "pyobjformatt": [29, 31], "ast_to_tre": [29, 31], "print_diff": [29, 30, 31], "fixedlengthsequenceedit": [29, 31], "orderedcount": [29, 31], "sparsematrix": [29, 31], "tempfil": [29, 31], "getsizeof": [29, 31], "largest": [29, 31], "git_branch": [29, 31], "xmlchildformatt": [29, 31], "xmlelementattribformatt": [29, 31], "xmlelementchildren": [29, 31], "xmlelementedit": [29, 31], "xmlelementobj": [29, 31], "xmlformatt": [29, 31], "xmlstringformatt": [29, 31], "yamldictformatt": [29, 31], "yamlformatt": [29, 30, 31], "yamlkeyvaluepairformatt": [29, 31], "yamllistformatt": [29, 31], "yamlstringformatt": [29, 31], "standard": 30, "from_tre": 30, "to_tre": 30, "maintain": 30, "characterist": 30, "instanceof": 30, "too": 30, "editeddictnod": 30, "editedkeyvaluepairnod": 30, "editedstringnod": 30, "editedlistnod": 30, "editedintegernod": 30, "chose": 30, "did": 30, "independ": 30, "thank": 30, "abil": 30, "quickli": 30, "obj1": 30, "obj2": 30, "baz": 30, "bak": 30, "ba": 30, "z": 30, "graphtag": 32, "try": 32, "fail": 32, "warn": 32}, "objects": {"": [[1, 0, 0, "-", "graphtage"]], "graphtage": [[1, 1, 1, "", "AbstractCompoundEdit"], [1, 1, 1, "", "AbstractEdit"], [1, 1, 1, "", "BoolNode"], [1, 1, 1, "", "BuildOptions"], [1, 1, 1, "", "CompoundEdit"], [1, 1, 1, "", "ConstantCostEdit"], [1, 1, 1, "", "ContainerNode"], [1, 1, 1, "", "DictNode"], [1, 1, 1, "", "Edit"], [1, 1, 1, "", "EditCollection"], [1, 1, 1, "", "EditSequence"], [1, 1, 1, "", "EditedTreeNode"], [1, 1, 1, "", "Filetype"], [1, 1, 1, "", "FiletypeWatcher"], [1, 1, 1, "", "FixedKeyDictNode"], [1, 1, 1, "", "FixedKeyDictNodeEdit"], [1, 1, 1, "", "FloatNode"], [1, 1, 1, "", "GraphtageFormatter"], [1, 1, 1, "", "Insert"], [1, 1, 1, "", "IntegerNode"], [1, 1, 1, "", "KeyValuePairEdit"], [1, 1, 1, "", "KeyValuePairNode"], [1, 1, 1, "", "LeafNode"], [1, 1, 1, "", "ListNode"], [1, 1, 1, "", "MappingNode"], [1, 1, 1, "", "Match"], [1, 1, 1, "", "MultiSetNode"], [1, 1, 1, "", "NullNode"], [1, 1, 1, "", "PossibleEdits"], [1, 1, 1, "", "Remove"], [1, 1, 1, "", "Replace"], [1, 1, 1, "", "StringEdit"], [1, 1, 1, "", "StringFormatter"], [1, 1, 1, "", "StringNode"], [1, 1, 1, "", "TreeNode"], [1, 1, 1, "", "TreeNodeMeta"], [2, 0, 0, "-", "ast"], [3, 0, 0, "-", "bounds"], [4, 0, 0, "-", "builder"], [5, 0, 0, "-", "constraints"], [6, 0, 0, "-", "csv"], [7, 0, 0, "-", "dataclasses"], [8, 0, 0, "-", "debug"], [1, 5, 1, "", "explode_edits"], [9, 0, 0, "-", "expressions"], [10, 0, 0, "-", "fibonacci"], [11, 0, 0, "-", "formatter"], [1, 5, 1, "", "get_filetype"], [12, 0, 0, "-", "json"], [13, 0, 0, "-", "levenshtein"], [14, 0, 0, "-", "matching"], [15, 0, 0, "-", "multiset"], [16, 0, 0, "-", "object_set"], [17, 0, 0, "-", "pickle"], [18, 0, 0, "-", "plist"], [19, 0, 0, "-", "printer"], [20, 0, 0, "-", "progress"], [21, 0, 0, "-", "pydiff"], [22, 0, 0, "-", "search"], [23, 0, 0, "-", "sequences"], [1, 5, 1, "", "string_edit_distance"], [24, 0, 0, "-", "utils"], [25, 0, 0, "-", "version"], [26, 0, 0, "-", "xml"], [27, 0, 0, "-", "yaml"]], "graphtage.AbstractCompoundEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.AbstractEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.BoolNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.BuildOptions": [[1, 2, 1, "", "__getattr__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "copy"]], "graphtage.CompoundEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.ConstantCostEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.ContainerNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.DictNode": [[1, 2, 1, "", "__contains__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "items"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "make_key_value_pair_node"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.Edit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "id0", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "id1", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.EditCollection": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.EditSequence": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.EditedTreeNode": [[1, 2, 1, "", "__init__"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_cost"]], "graphtage.Filetype": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "build_tree"], [1, 2, 1, "", "build_tree_handling_errors"], [1, 3, 1, "", "default_instance"], [1, 2, 1, "", "get_default_formatter"]], "graphtage.FiletypeWatcher": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__instancecheck__"], [1, 2, 1, "", "__subclasscheck__"], [1, 2, 1, "", "_abc_caches_clear"], [1, 2, 1, "", "_abc_registry_clear"], [1, 2, 1, "", "_dump_registry"], [1, 2, 1, "", "mro"], [1, 2, 1, "", "register"]], "graphtage.FixedKeyDictNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__len__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "items"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "make_key_value_pair_node"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.FixedKeyDictNodeEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 4, 1, "", "sequence"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.FloatNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.GraphtageFormatter": [[1, 3, 1, "", "DEFAULT_INSTANCE"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "get_formatter"], [1, 3, 1, "", "is_partial"], [1, 3, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 4, 1, "", "root"], [1, 3, 1, "", "sub_format_types"], [1, 3, 1, "", "sub_formatters"]], "graphtage.Insert": [[1, 3, 1, "", "INSERT_STRING"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 4, 1, "", "insert_into"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "to_insert"], [1, 4, 1, "", "valid"]], "graphtage.IntegerNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.KeyValuePairEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.KeyValuePairNode": [[1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.LeafNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.ListNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__len__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.MappingNode": [[1, 2, 1, "", "__contains__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "items"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "make_key_value_pair_node"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.Match": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.MultiSetNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.NullNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.PossibleEdits": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "best_possibility"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.Remove": [[1, 3, 1, "", "REMOVE_STRING"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.Replace": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.StringEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "_debug_tighten_bounds"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.StringFormatter": [[1, 3, 1, "", "DEFAULT_INSTANCE"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "context"], [1, 2, 1, "", "escape"], [1, 2, 1, "", "get_formatter"], [1, 3, 1, "", "is_partial"], [1, 3, 1, "", "is_quoted"], [1, 3, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_StringEdit"], [1, 2, 1, "", "print_StringNode"], [1, 4, 1, "", "root"], [1, 3, 1, "", "sub_format_types"], [1, 3, 1, "", "sub_formatters"], [1, 2, 1, "", "write_char"], [1, 2, 1, "", "write_end_quote"], [1, 2, 1, "", "write_start_quote"]], "graphtage.StringNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.TreeNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_edit_modifier"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "copy_from"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edit_contexts"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 4, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_parent_context"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.TreeNodeMeta": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__instancecheck__"], [1, 2, 1, "", "__subclasscheck__"], [1, 2, 1, "", "_abc_caches_clear"], [1, 2, 1, "", "_abc_registry_clear"], [1, 2, 1, "", "_dump_registry"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "mro"], [1, 2, 1, "", "register"]], "graphtage.ast": [[2, 1, 1, "", "Assignment"], [2, 1, 1, "", "Call"], [2, 1, 1, "", "CallArguments"], [2, 1, 1, "", "CallKeywords"], [2, 1, 1, "", "Import"], [2, 1, 1, "", "KeywordArgument"], [2, 1, 1, "", "Module"], [2, 1, 1, "", "Subscript"]], "graphtage.ast.Assignment": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_edit_modifier"], [2, 2, 1, "", "all_children_are_leaves"], [2, 2, 1, "", "calculate_total_size"], [2, 2, 1, "", "children"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "copy_from"], [2, 2, 1, "", "dfs"], [2, 2, 1, "", "diff"], [2, 2, 1, "", "editable_dict"], [2, 4, 1, "", "edited"], [2, 2, 1, "", "edits"], [2, 2, 1, "", "get_all_edit_contexts"], [2, 2, 1, "", "get_all_edits"], [2, 4, 1, "", "is_leaf"], [2, 2, 1, "", "items"], [2, 2, 1, "", "make_edited"], [2, 4, 1, "", "parent"], [2, 2, 1, "", "post_init"], [2, 2, 1, "", "print"], [2, 2, 1, "", "print_parent_context"], [2, 3, 1, "", "targets"], [2, 2, 1, "", "to_obj"], [2, 4, 1, "", "total_size"], [2, 3, 1, "", "value"]], "graphtage.ast.Call": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_edit_modifier"], [2, 2, 1, "", "all_children_are_leaves"], [2, 3, 1, "", "args"], [2, 2, 1, "", "calculate_total_size"], [2, 2, 1, "", "children"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "copy_from"], [2, 2, 1, "", "dfs"], [2, 2, 1, "", "diff"], [2, 2, 1, "", "editable_dict"], [2, 4, 1, "", "edited"], [2, 2, 1, "", "edits"], [2, 3, 1, "", "func"], [2, 2, 1, "", "get_all_edit_contexts"], [2, 2, 1, "", "get_all_edits"], [2, 4, 1, "", "is_leaf"], [2, 2, 1, "", "items"], [2, 3, 1, "", "kwargs"], [2, 2, 1, "", "make_edited"], [2, 4, 1, "", "parent"], [2, 2, 1, "", "post_init"], [2, 2, 1, "", "print"], [2, 2, 1, "", "print_parent_context"], [2, 2, 1, "", "to_obj"], [2, 4, 1, "", "total_size"]], "graphtage.ast.CallArguments": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "__iter__"], [2, 2, 1, "", "__len__"], [2, 2, 1, "", "add_edit_modifier"], [2, 2, 1, "", "all_children_are_leaves"], [2, 2, 1, "", "calculate_total_size"], [2, 2, 1, "", "children"], [2, 4, 1, "", "container_type"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "copy_from"], [2, 2, 1, "", "dfs"], [2, 2, 1, "", "diff"], [2, 2, 1, "", "editable_dict"], [2, 4, 1, "", "edited"], [2, 2, 1, "", "edits"], [2, 2, 1, "", "get_all_edit_contexts"], [2, 2, 1, "", "get_all_edits"], [2, 4, 1, "", "is_leaf"], [2, 2, 1, "", "make_edited"], [2, 4, 1, "", "parent"], [2, 2, 1, "", "print"], [2, 2, 1, "", "print_parent_context"], [2, 2, 1, "", "to_obj"], [2, 4, 1, "", "total_size"]], "graphtage.ast.CallKeywords": [[2, 2, 1, "", "__contains__"], [2, 2, 1, "", "__getitem__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_edit_modifier"], [2, 2, 1, "", "all_children_are_leaves"], [2, 2, 1, "", "calculate_total_size"], [2, 2, 1, "", "children"], [2, 4, 1, "", "container_type"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "copy_from"], [2, 2, 1, "", "dfs"], [2, 2, 1, "", "diff"], [2, 2, 1, "", "editable_dict"], [2, 4, 1, "", "edited"], [2, 2, 1, "", "edits"], [2, 2, 1, "", "from_dict"], [2, 2, 1, "", "get_all_edit_contexts"], [2, 2, 1, "", "get_all_edits"], [2, 4, 1, "", "is_leaf"], [2, 2, 1, "", "items"], [2, 2, 1, "", "make_edited"], [2, 2, 1, "", "make_key_value_pair_node"], [2, 4, 1, "", "parent"], [2, 2, 1, "", "print"], [2, 2, 1, "", "print_parent_context"], [2, 2, 1, "", "to_obj"], [2, 4, 1, "", "total_size"]], "graphtage.ast.Import": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_edit_modifier"], [2, 2, 1, "", "all_children_are_leaves"], [2, 2, 1, "", "calculate_total_size"], [2, 2, 1, "", "children"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "copy_from"], [2, 2, 1, "", "dfs"], [2, 2, 1, "", "diff"], [2, 2, 1, "", "editable_dict"], [2, 4, 1, "", "edited"], [2, 2, 1, "", "edits"], [2, 3, 1, "", "from_name"], [2, 2, 1, "", "get_all_edit_contexts"], [2, 2, 1, "", "get_all_edits"], [2, 4, 1, "", "is_leaf"], [2, 2, 1, "", "items"], [2, 2, 1, "", "make_edited"], [2, 3, 1, "", "names"], [2, 4, 1, "", "parent"], [2, 2, 1, "", "post_init"], [2, 2, 1, "", "print"], [2, 2, 1, "", "print_parent_context"], [2, 2, 1, "", "to_obj"], [2, 4, 1, "", "total_size"]], "graphtage.ast.KeywordArgument": [[2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "__lt__"], [2, 2, 1, "", "add_edit_modifier"], [2, 2, 1, "", "all_children_are_leaves"], [2, 2, 1, "", "calculate_total_size"], [2, 2, 1, "", "children"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "copy_from"], [2, 2, 1, "", "dfs"], [2, 2, 1, "", "diff"], [2, 2, 1, "", "editable_dict"], [2, 4, 1, "", "edited"], [2, 2, 1, "", "edits"], [2, 2, 1, "", "get_all_edit_contexts"], [2, 2, 1, "", "get_all_edits"], [2, 4, 1, "", "is_leaf"], [2, 2, 1, "", "make_edited"], [2, 4, 1, "", "parent"], [2, 2, 1, "", "print"], [2, 2, 1, "", "print_parent_context"], [2, 2, 1, "", "to_obj"], [2, 4, 1, "", "total_size"]], "graphtage.ast.Module": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "__iter__"], [2, 2, 1, "", "__len__"], [2, 2, 1, "", "add_edit_modifier"], [2, 2, 1, "", "all_children_are_leaves"], [2, 2, 1, "", "calculate_total_size"], [2, 2, 1, "", "children"], [2, 4, 1, "", "container_type"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "copy_from"], [2, 2, 1, "", "dfs"], [2, 2, 1, "", "diff"], [2, 2, 1, "", "editable_dict"], [2, 4, 1, "", "edited"], [2, 2, 1, "", "edits"], [2, 2, 1, "", "get_all_edit_contexts"], [2, 2, 1, "", "get_all_edits"], [2, 4, 1, "", "is_leaf"], [2, 2, 1, "", "make_edited"], [2, 4, 1, "", "parent"], [2, 2, 1, "", "print"], [2, 2, 1, "", "print_parent_context"], [2, 2, 1, "", "to_obj"], [2, 4, 1, "", "total_size"]], "graphtage.ast.Subscript": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_edit_modifier"], [2, 2, 1, "", "all_children_are_leaves"], [2, 2, 1, "", "calculate_total_size"], [2, 2, 1, "", "children"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "copy_from"], [2, 2, 1, "", "dfs"], [2, 2, 1, "", "diff"], [2, 2, 1, "", "editable_dict"], [2, 4, 1, "", "edited"], [2, 2, 1, "", "edits"], [2, 2, 1, "", "get_all_edit_contexts"], [2, 2, 1, "", "get_all_edits"], [2, 4, 1, "", "is_leaf"], [2, 2, 1, "", "items"], [2, 2, 1, "", "make_edited"], [2, 4, 1, "", "parent"], [2, 2, 1, "", "post_init"], [2, 2, 1, "", "print"], [2, 2, 1, "", "print_parent_context"], [2, 3, 1, "", "slice"], [2, 2, 1, "", "to_obj"], [2, 4, 1, "", "total_size"], [2, 3, 1, "", "value"]], "graphtage.bounds": [[3, 1, 1, "", "Bounded"], [3, 1, 1, "", "BoundedComparator"], [3, 1, 1, "", "ConstantBound"], [3, 1, 1, "", "Infinity"], [3, 3, 1, "", "NEGATIVE_INFINITY"], [3, 3, 1, "", "POSITIVE_INFINITY"], [3, 1, 1, "", "Range"], [3, 5, 1, "", "make_distinct"], [3, 5, 1, "", "min_bounded"], [3, 5, 1, "", "repeat_until_tightened"], [3, 5, 1, "", "sort"]], "graphtage.bounds.Bounded": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "bounds"], [3, 2, 1, "", "tighten_bounds"]], "graphtage.bounds.BoundedComparator": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__lt__"], [3, 3, 1, "", "bounded"]], "graphtage.bounds.ConstantBound": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "bounds"], [3, 2, 1, "", "tighten_bounds"]], "graphtage.bounds.Infinity": [[3, 2, 1, "", "__init__"], [3, 4, 1, "", "positive"]], "graphtage.bounds.Range": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "definitive"], [3, 2, 1, "", "dominates"], [3, 4, 1, "", "finite"], [3, 2, 1, "", "intersect"], [3, 3, 1, "", "lower_bound"], [3, 2, 1, "", "to_interval"], [3, 3, 1, "", "upper_bound"]], "graphtage.builder": [[4, 1, 1, "", "BasicBuilder"], [4, 1, 1, "", "Builder"], [4, 1, 1, "", "CyclicReference"]], "graphtage.builder.BasicBuilder": [[4, 3, 1, "", "BUILDERS"], [4, 3, 1, "", "EXPANDERS"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "_resolve"], [4, 2, 1, "", "build"], [4, 2, 1, "", "build_bool"], [4, 2, 1, "", "build_dict"], [4, 2, 1, "", "build_float"], [4, 2, 1, "", "build_int"], [4, 2, 1, "", "build_list"], [4, 2, 1, "", "build_none"], [4, 2, 1, "", "build_set"], [4, 2, 1, "", "build_str"], [4, 2, 1, "", "build_tree"], [4, 2, 1, "", "builder"], [4, 2, 1, "", "default_builder"], [4, 2, 1, "", "default_expander"], [4, 2, 1, "", "expand"], [4, 2, 1, "", "expand_dict"], [4, 2, 1, "", "expand_list"], [4, 2, 1, "", "expander"], [4, 2, 1, "", "resolve_builder"], [4, 2, 1, "", "resolve_expander"]], "graphtage.builder.Builder": [[4, 3, 1, "", "BUILDERS"], [4, 3, 1, "", "EXPANDERS"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "_resolve"], [4, 2, 1, "", "build"], [4, 2, 1, "", "build_tree"], [4, 2, 1, "", "builder"], [4, 2, 1, "", "default_builder"], [4, 2, 1, "", "default_expander"], [4, 2, 1, "", "expand"], [4, 2, 1, "", "expander"], [4, 2, 1, "", "resolve_builder"], [4, 2, 1, "", "resolve_expander"]], "graphtage.builder.CyclicReference": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "add_edit_modifier"], [4, 2, 1, "", "calculate_total_size"], [4, 2, 1, "", "children"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "copy_from"], [4, 2, 1, "", "dfs"], [4, 2, 1, "", "diff"], [4, 2, 1, "", "editable_dict"], [4, 4, 1, "", "edited"], [4, 2, 1, "", "edits"], [4, 2, 1, "", "get_all_edit_contexts"], [4, 2, 1, "", "get_all_edits"], [4, 4, 1, "", "is_leaf"], [4, 2, 1, "", "make_edited"], [4, 4, 1, "", "parent"], [4, 2, 1, "", "print"], [4, 2, 1, "", "print_parent_context"], [4, 2, 1, "", "to_obj"], [4, 4, 1, "", "total_size"]], "graphtage.constraints": [[5, 1, 1, "", "ConditionalMatcher"], [5, 1, 1, "", "MatchIf"], [5, 1, 1, "", "MatchUnless"]], "graphtage.constraints.ConditionalMatcher": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "apply"]], "graphtage.constraints.MatchIf": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "apply"]], "graphtage.constraints.MatchUnless": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "apply"]], "graphtage.csv": [[6, 1, 1, "", "CSV"], [6, 1, 1, "", "CSVFormatter"], [6, 1, 1, "", "CSVNode"], [6, 1, 1, "", "CSVRow"], [6, 1, 1, "", "CSVRowFormatter"], [6, 1, 1, "", "CSVRows"], [6, 5, 1, "", "build_tree"]], "graphtage.csv.CSV": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "build_tree"], [6, 2, 1, "", "build_tree_handling_errors"], [6, 3, 1, "", "default_instance"], [6, 2, 1, "", "get_default_formatter"]], "graphtage.csv.CSVFormatter": [[6, 3, 1, "", "DEFAULT_INSTANCE"], [6, 2, 1, "", "__init__"], [6, 2, 1, "", "__new__"], [6, 2, 1, "", "get_formatter"], [6, 3, 1, "", "is_partial"], [6, 3, 1, "", "parent"], [6, 2, 1, "", "print"], [6, 2, 1, "", "print_LeafNode"], [6, 4, 1, "", "root"], [6, 3, 1, "", "sub_format_types"], [6, 3, 1, "", "sub_formatters"]], "graphtage.csv.CSVNode": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "__iter__"], [6, 2, 1, "", "__len__"], [6, 2, 1, "", "add_edit_modifier"], [6, 2, 1, "", "all_children_are_leaves"], [6, 2, 1, "", "calculate_total_size"], [6, 2, 1, "", "children"], [6, 4, 1, "", "container_type"], [6, 2, 1, "", "copy"], [6, 2, 1, "", "copy_from"], [6, 2, 1, "", "dfs"], [6, 2, 1, "", "diff"], [6, 2, 1, "", "editable_dict"], [6, 4, 1, "", "edited"], [6, 2, 1, "", "edits"], [6, 2, 1, "", "get_all_edit_contexts"], [6, 2, 1, "", "get_all_edits"], [6, 4, 1, "", "is_leaf"], [6, 2, 1, "", "make_edited"], [6, 4, 1, "", "parent"], [6, 2, 1, "", "print"], [6, 2, 1, "", "print_parent_context"], [6, 2, 1, "", "to_obj"], [6, 4, 1, "", "total_size"]], "graphtage.csv.CSVRow": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "__iter__"], [6, 2, 1, "", "__len__"], [6, 2, 1, "", "add_edit_modifier"], [6, 2, 1, "", "all_children_are_leaves"], [6, 2, 1, "", "calculate_total_size"], [6, 2, 1, "", "children"], [6, 4, 1, "", "container_type"], [6, 2, 1, "", "copy"], [6, 2, 1, "", "copy_from"], [6, 2, 1, "", "dfs"], [6, 2, 1, "", "diff"], [6, 2, 1, "", "editable_dict"], [6, 4, 1, "", "edited"], [6, 2, 1, "", "edits"], [6, 2, 1, "", "get_all_edit_contexts"], [6, 2, 1, "", "get_all_edits"], [6, 4, 1, "", "is_leaf"], [6, 2, 1, "", "make_edited"], [6, 4, 1, "", "parent"], [6, 2, 1, "", "print"], [6, 2, 1, "", "print_parent_context"], [6, 2, 1, "", "to_obj"], [6, 4, 1, "", "total_size"]], "graphtage.csv.CSVRowFormatter": [[6, 3, 1, "", "DEFAULT_INSTANCE"], [6, 2, 1, "", "__init__"], [6, 2, 1, "", "__new__"], [6, 2, 1, "", "edit_print"], [6, 2, 1, "", "get_formatter"], [6, 3, 1, "", "is_partial"], [6, 2, 1, "", "item_newline"], [6, 2, 1, "", "items_indent"], [6, 3, 1, "", "parent"], [6, 2, 1, "", "print"], [6, 2, 1, "", "print_CSVRow"], [6, 2, 1, "", "print_SequenceNode"], [6, 4, 1, "", "root"], [6, 3, 1, "", "sub_format_types"], [6, 3, 1, "", "sub_formatters"]], "graphtage.csv.CSVRows": [[6, 3, 1, "", "DEFAULT_INSTANCE"], [6, 2, 1, "", "__init__"], [6, 2, 1, "", "__new__"], [6, 2, 1, "", "edit_print"], [6, 2, 1, "", "get_formatter"], [6, 3, 1, "", "is_partial"], [6, 2, 1, "", "item_newline"], [6, 2, 1, "", "items_indent"], [6, 3, 1, "", "parent"], [6, 2, 1, "", "print"], [6, 2, 1, "", "print_CSVNode"], [6, 2, 1, "", "print_SequenceNode"], [6, 4, 1, "", "root"], [6, 3, 1, "", "sub_format_types"], [6, 3, 1, "", "sub_formatters"]], "graphtage.dataclasses": [[7, 1, 1, "", "DataClassEdit"], [7, 1, 1, "", "DataClassNode"]], "graphtage.dataclasses.DataClassEdit": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__iter__"], [7, 2, 1, "", "__lt__"], [7, 2, 1, "", "_debug_tighten_bounds"], [7, 2, 1, "", "bounds"], [7, 2, 1, "", "edits"], [7, 3, 1, "", "from_node"], [7, 2, 1, "", "has_non_zero_cost"], [7, 3, 1, "", "initial_bounds"], [7, 2, 1, "", "is_complete"], [7, 2, 1, "", "on_diff"], [7, 2, 1, "", "print"], [7, 2, 1, "", "tighten_bounds"], [7, 4, 1, "", "valid"]], "graphtage.dataclasses.DataClassNode": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "add_edit_modifier"], [7, 2, 1, "", "all_children_are_leaves"], [7, 2, 1, "", "calculate_total_size"], [7, 2, 1, "", "children"], [7, 2, 1, "", "copy"], [7, 2, 1, "", "copy_from"], [7, 2, 1, "", "dfs"], [7, 2, 1, "", "diff"], [7, 2, 1, "", "editable_dict"], [7, 4, 1, "", "edited"], [7, 2, 1, "", "edits"], [7, 2, 1, "", "get_all_edit_contexts"], [7, 2, 1, "", "get_all_edits"], [7, 4, 1, "", "is_leaf"], [7, 2, 1, "", "items"], [7, 2, 1, "", "make_edited"], [7, 4, 1, "", "parent"], [7, 2, 1, "", "post_init"], [7, 2, 1, "", "print"], [7, 2, 1, "", "print_parent_context"], [7, 2, 1, "", "to_obj"], [7, 4, 1, "", "total_size"]], "graphtage.debug": [[8, 1, 1, "", "Debuggable"]], "graphtage.debug.Debuggable": [[8, 2, 1, "", "__init__"]], "graphtage.expressions": [[9, 1, 1, "", "CloseBracket"], [9, 1, 1, "", "CloseParen"], [9, 1, 1, "", "CollectionInfo"], [9, 1, 1, "", "Comma"], [9, 3, 1, "", "DEFAULT_GLOBALS"], [9, 1, 1, "", "Expression"], [9, 1, 1, "", "FixedSizeCollection"], [9, 1, 1, "", "FloatToken"], [9, 1, 1, "", "FunctionCall"], [9, 3, 1, "", "IDENTIFIER_BYTES"], [9, 1, 1, "", "IdentifierToken"], [9, 1, 1, "", "IntegerToken"], [9, 1, 1, "", "NumericToken"], [9, 3, 1, "", "OPERATORS_BY_NAME"], [9, 1, 1, "", "OpenBracket"], [9, 1, 1, "", "OpenParen"], [9, 1, 1, "", "Operator"], [9, 1, 1, "", "OperatorToken"], [9, 1, 1, "", "PairedEndToken"], [9, 1, 1, "", "PairedStartToken"], [9, 1, 1, "", "PairedToken"], [9, 1, 1, "", "Parenthesis"], [9, 1, 1, "", "ParseError"], [9, 1, 1, "", "StringToken"], [9, 1, 1, "", "Token"], [9, 1, 1, "", "Tokenizer"], [9, 5, 1, "", "get_member"], [9, 5, 1, "", "infix_to_rpn"], [9, 5, 1, "", "parse"], [9, 5, 1, "", "tokenize"]], "graphtage.expressions.CloseBracket": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "name"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"], [9, 3, 1, "", "start_token_type"]], "graphtage.expressions.CloseParen": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "name"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"], [9, 3, 1, "", "start_token_type"]], "graphtage.expressions.CollectionInfo": [[9, 2, 1, "", "__init__"]], "graphtage.expressions.Comma": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"]], "graphtage.expressions.Expression": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "eval"], [9, 2, 1, "", "get_value"]], "graphtage.expressions.FixedSizeCollection": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "container_type"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"], [9, 3, 1, "", "size"]], "graphtage.expressions.FloatToken": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"], [9, 3, 1, "", "value"]], "graphtage.expressions.FunctionCall": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "offset"], [9, 3, 1, "", "op"], [9, 4, 1, "", "raw_token"]], "graphtage.expressions.IdentifierToken": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "name"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"]], "graphtage.expressions.IntegerToken": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"], [9, 3, 1, "", "value"]], "graphtage.expressions.NumericToken": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"], [9, 3, 1, "", "value"]], "graphtage.expressions.OpenBracket": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "discard"], [9, 3, 1, "", "is_list"], [9, 3, 1, "", "name"], [9, 3, 1, "", "offset"], [9, 3, 1, "", "op"], [9, 4, 1, "", "raw_token"]], "graphtage.expressions.OpenParen": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "discard"], [9, 3, 1, "", "name"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"]], "graphtage.expressions.Operator": [[9, 3, 1, "", "ADDITION"], [9, 3, 1, "", "BITWISE_AND"], [9, 3, 1, "", "BITWISE_LEFT_SHIFT"], [9, 3, 1, "", "BITWISE_NOT"], [9, 3, 1, "", "BITWISE_OR"], [9, 3, 1, "", "BITWISE_RIGHT_SHIFT"], [9, 3, 1, "", "BITWISE_XOR"], [9, 3, 1, "", "DIVISION"], [9, 3, 1, "", "EQUALS"], [9, 3, 1, "", "FUNCTION_CALL"], [9, 3, 1, "", "GETITEM"], [9, 3, 1, "", "GREATER_THAN"], [9, 3, 1, "", "GREATER_THAN_EQUAL"], [9, 3, 1, "", "IN"], [9, 3, 1, "", "INT_DIVISION"], [9, 3, 1, "", "LESS_THAN"], [9, 3, 1, "", "LESS_THAN_EQUAL"], [9, 3, 1, "", "LOGICAL_AND"], [9, 3, 1, "", "LOGICAL_NOT"], [9, 3, 1, "", "LOGICAL_OR"], [9, 3, 1, "", "MEMBER_ACCESS"], [9, 3, 1, "", "MULTIPLICATION"], [9, 3, 1, "", "NOT_EQUAL"], [9, 3, 1, "", "REMAINDER"], [9, 3, 1, "", "SUBTRACTION"], [9, 3, 1, "", "TERNARY_CONDITIONAL"], [9, 3, 1, "", "TERNARY_ELSE"], [9, 3, 1, "", "UNARY_MINUS"], [9, 3, 1, "", "UNARY_PLUS"], [9, 2, 1, "", "__init__"], [9, 3, 1, "", "arity"], [9, 3, 1, "", "execute"], [9, 3, 1, "", "expand"], [9, 3, 1, "", "left_associative"], [9, 3, 1, "", "priority"], [9, 3, 1, "", "token"]], "graphtage.expressions.OperatorToken": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "offset"], [9, 3, 1, "", "op"], [9, 4, 1, "", "raw_token"]], "graphtage.expressions.PairedEndToken": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "name"], [9, 3, 1, "", "start_token_type"]], "graphtage.expressions.PairedStartToken": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "discard"], [9, 3, 1, "", "name"]], "graphtage.expressions.PairedToken": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "name"]], "graphtage.expressions.Parenthesis": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"]], "graphtage.expressions.ParseError": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "args"], [9, 2, 1, "", "with_traceback"]], "graphtage.expressions.StringToken": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"]], "graphtage.expressions.Token": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "offset"], [9, 4, 1, "", "raw_token"]], "graphtage.expressions.Tokenizer": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "__iter__"], [9, 2, 1, "", "has_next"], [9, 2, 1, "", "next"], [9, 2, 1, "", "peek"], [9, 3, 1, "", "prev_token"]], "graphtage.fibonacci": [[10, 1, 1, "", "FibonacciHeap"], [10, 1, 1, "", "HeapNode"], [10, 1, 1, "", "MaxFibonacciHeap"], [10, 1, 1, "", "ReversedComparator"]], "graphtage.fibonacci.FibonacciHeap": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "clear"], [10, 2, 1, "", "decrease_key"], [10, 3, 1, "", "key"], [10, 4, 1, "", "min_node"], [10, 2, 1, "", "nodes"], [10, 2, 1, "", "peek"], [10, 2, 1, "", "pop"], [10, 2, 1, "", "push"], [10, 2, 1, "", "remove"]], "graphtage.fibonacci.HeapNode": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "__iter__"], [10, 2, 1, "", "add_child"], [10, 3, 1, "", "child"], [10, 4, 1, "", "children"], [10, 3, 1, "", "degree"], [10, 3, 1, "", "deleted"], [10, 3, 1, "", "item"], [10, 3, 1, "", "key"], [10, 3, 1, "", "left"], [10, 3, 1, "", "mark"], [10, 3, 1, "", "parent"], [10, 2, 1, "", "remove_child"], [10, 3, 1, "", "right"], [10, 4, 1, "", "siblings"]], "graphtage.fibonacci.MaxFibonacciHeap": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "clear"], [10, 2, 1, "", "decrease_key"], [10, 3, 1, "", "key"], [10, 4, 1, "", "min_node"], [10, 2, 1, "", "nodes"], [10, 2, 1, "", "peek"], [10, 2, 1, "", "pop"], [10, 2, 1, "", "push"], [10, 2, 1, "", "remove"]], "graphtage.fibonacci.ReversedComparator": [[10, 2, 1, "", "__init__"]], "graphtage.formatter": [[11, 1, 1, "", "BasicFormatter"], [11, 1, 1, "", "Formatter"], [11, 1, 1, "", "FormatterChecker"], [11, 5, 1, "", "get_formatter"]], "graphtage.formatter.BasicFormatter": [[11, 3, 1, "", "DEFAULT_INSTANCE"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "__new__"], [11, 2, 1, "", "get_formatter"], [11, 3, 1, "", "is_partial"], [11, 3, 1, "", "parent"], [11, 2, 1, "", "print"], [11, 4, 1, "", "root"], [11, 3, 1, "", "sub_format_types"], [11, 3, 1, "", "sub_formatters"]], "graphtage.formatter.Formatter": [[11, 3, 1, "", "DEFAULT_INSTANCE"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "__new__"], [11, 2, 1, "", "get_formatter"], [11, 3, 1, "", "is_partial"], [11, 3, 1, "", "parent"], [11, 2, 1, "", "print"], [11, 4, 1, "", "root"], [11, 3, 1, "", "sub_format_types"], [11, 3, 1, "", "sub_formatters"]], "graphtage.formatter.FormatterChecker": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "__instancecheck__"], [11, 2, 1, "", "__subclasscheck__"], [11, 2, 1, "", "_abc_caches_clear"], [11, 2, 1, "", "_abc_registry_clear"], [11, 2, 1, "", "_dump_registry"], [11, 2, 1, "", "mro"], [11, 2, 1, "", "register"]], "graphtage.json": [[12, 1, 1, "", "JSON"], [12, 1, 1, "", "JSON5"], [12, 1, 1, "", "JSONDictFormatter"], [12, 1, 1, "", "JSONFormatter"], [12, 1, 1, "", "JSONListFormatter"], [12, 1, 1, "", "JSONStringFormatter"], [12, 5, 1, "", "build_tree"]], "graphtage.json.JSON": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "build_tree"], [12, 2, 1, "", "build_tree_handling_errors"], [12, 3, 1, "", "default_instance"], [12, 2, 1, "", "get_default_formatter"]], "graphtage.json.JSON5": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "build_tree"], [12, 2, 1, "", "build_tree_handling_errors"], [12, 3, 1, "", "default_instance"], [12, 2, 1, "", "get_default_formatter"]], "graphtage.json.JSONDictFormatter": [[12, 3, 1, "", "DEFAULT_INSTANCE"], [12, 2, 1, "", "__init__"], [12, 2, 1, "", "__new__"], [12, 2, 1, "", "edit_print"], [12, 2, 1, "", "get_formatter"], [12, 3, 1, "", "is_partial"], [12, 2, 1, "", "item_newline"], [12, 2, 1, "", "items_indent"], [12, 3, 1, "", "parent"], [12, 2, 1, "", "print"], [12, 2, 1, "", "print_MappingNode"], [12, 2, 1, "", "print_MultiSetNode"], [12, 2, 1, "", "print_SequenceNode"], [12, 4, 1, "", "root"], [12, 3, 1, "", "sub_format_types"], [12, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONFormatter": [[12, 3, 1, "", "DEFAULT_INSTANCE"], [12, 2, 1, "", "__init__"], [12, 2, 1, "", "__new__"], [12, 2, 1, "", "get_formatter"], [12, 3, 1, "", "is_partial"], [12, 3, 1, "", "parent"], [12, 2, 1, "", "print"], [12, 2, 1, "", "print_ContainerNode"], [12, 2, 1, "", "print_KeyValuePairNode"], [12, 2, 1, "", "print_LeafNode"], [12, 2, 1, "", "print_XMLElement"], [12, 4, 1, "", "root"], [12, 3, 1, "", "sub_format_types"], [12, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONListFormatter": [[12, 3, 1, "", "DEFAULT_INSTANCE"], [12, 2, 1, "", "__init__"], [12, 2, 1, "", "__new__"], [12, 2, 1, "", "edit_print"], [12, 2, 1, "", "get_formatter"], [12, 3, 1, "", "is_partial"], [12, 2, 1, "", "item_newline"], [12, 2, 1, "", "items_indent"], [12, 3, 1, "", "parent"], [12, 2, 1, "", "print"], [12, 2, 1, "", "print_ListNode"], [12, 2, 1, "", "print_SequenceNode"], [12, 4, 1, "", "root"], [12, 3, 1, "", "sub_format_types"], [12, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONStringFormatter": [[12, 3, 1, "", "DEFAULT_INSTANCE"], [12, 2, 1, "", "__init__"], [12, 2, 1, "", "__new__"], [12, 2, 1, "", "context"], [12, 2, 1, "", "escape"], [12, 2, 1, "", "get_formatter"], [12, 3, 1, "", "is_partial"], [12, 3, 1, "", "is_quoted"], [12, 3, 1, "", "parent"], [12, 2, 1, "", "print"], [12, 2, 1, "", "print_StringEdit"], [12, 2, 1, "", "print_StringNode"], [12, 4, 1, "", "root"], [12, 3, 1, "", "sub_format_types"], [12, 3, 1, "", "sub_formatters"], [12, 2, 1, "", "write_char"], [12, 2, 1, "", "write_end_quote"], [12, 2, 1, "", "write_start_quote"]], "graphtage.levenshtein": [[13, 1, 1, "", "EditDistance"], [13, 5, 1, "", "levenshtein_distance"]], "graphtage.levenshtein.EditDistance": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "__iter__"], [13, 2, 1, "", "__lt__"], [13, 2, 1, "", "_debug_tighten_bounds"], [13, 2, 1, "", "bounds"], [13, 2, 1, "", "edits"], [13, 3, 1, "", "from_node"], [13, 2, 1, "", "has_non_zero_cost"], [13, 3, 1, "", "initial_bounds"], [13, 2, 1, "", "is_complete"], [13, 2, 1, "", "on_diff"], [13, 2, 1, "", "print"], [13, 4, 1, "", "sequence"], [13, 2, 1, "", "tighten_bounds"], [13, 4, 1, "", "valid"]], "graphtage.matching": [[14, 1, 1, "", "Edge"], [14, 1, 1, "", "Matching"], [14, 1, 1, "", "MatchingFromNode"], [14, 1, 1, "", "MatchingNode"], [14, 1, 1, "", "MatchingToNode"], [14, 1, 1, "", "PathSet"], [14, 1, 1, "", "QueueElement"], [14, 1, 1, "", "SortedEdges"], [14, 1, 1, "", "WeightedBipartiteMatcher"], [14, 1, 1, "", "WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION"], [14, 5, 1, "", "get_dtype"], [14, 5, 1, "", "min_weight_bipartite_matching"]], "graphtage.matching.Edge": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "bounds"], [14, 4, 1, "", "cost_bar"], [14, 4, 1, "", "cost_star"], [14, 2, 1, "", "tighten_bounds"]], "graphtage.matching.Matching": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "_from_iterable"], [14, 2, 1, "", "_hash"], [14, 2, 1, "", "add"], [14, 2, 1, "", "bounds"], [14, 2, 1, "", "clear"], [14, 2, 1, "", "copy"], [14, 2, 1, "", "difference"], [14, 2, 1, "", "difference_update"], [14, 2, 1, "", "discard"], [14, 2, 1, "", "intersection"], [14, 2, 1, "", "intersection_update"], [14, 2, 1, "", "isdisjoint"], [14, 2, 1, "", "issubset"], [14, 2, 1, "", "issuperset"], [14, 2, 1, "", "pop"], [14, 2, 1, "", "remove"], [14, 2, 1, "", "symmetric_difference"], [14, 2, 1, "", "symmetric_difference_update"], [14, 2, 1, "", "tighten_bounds"], [14, 2, 1, "", "union"], [14, 2, 1, "", "update"]], "graphtage.matching.MatchingFromNode": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "construct_edges"], [14, 2, 1, "", "edges"], [14, 4, 1, "", "sorted_neighbors"]], "graphtage.matching.MatchingNode": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "construct_edges"], [14, 2, 1, "", "edges"]], "graphtage.matching.MatchingToNode": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "construct_edges"], [14, 2, 1, "", "edges"]], "graphtage.matching.PathSet": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "_from_iterable"], [14, 2, 1, "", "_hash"], [14, 2, 1, "", "add"], [14, 2, 1, "", "bounds"], [14, 2, 1, "", "clear"], [14, 2, 1, "", "copy"], [14, 2, 1, "", "difference"], [14, 2, 1, "", "difference_update"], [14, 2, 1, "", "discard"], [14, 2, 1, "", "intersection"], [14, 2, 1, "", "intersection_update"], [14, 2, 1, "", "isdisjoint"], [14, 2, 1, "", "issubset"], [14, 2, 1, "", "issuperset"], [14, 2, 1, "", "path_to"], [14, 2, 1, "", "pop"], [14, 2, 1, "", "remove"], [14, 2, 1, "", "symmetric_difference"], [14, 2, 1, "", "symmetric_difference_update"], [14, 2, 1, "", "tighten_bounds"], [14, 2, 1, "", "union"], [14, 2, 1, "", "update"]], "graphtage.matching.QueueElement": [[14, 2, 1, "", "__init__"]], "graphtage.matching.SortedEdges": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "head"], [14, 2, 1, "", "tail"]], "graphtage.matching.WeightedBipartiteMatcher": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "bounds"], [14, 4, 1, "", "edges"], [14, 2, 1, "", "is_complete"], [14, 4, 1, "", "matching"], [14, 2, 1, "", "tighten_bounds"]], "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "bounds"], [14, 2, 1, "", "free_destinations"], [14, 2, 1, "", "free_sources"], [14, 2, 1, "", "tighten_bounds"]], "graphtage.multiset": [[15, 1, 1, "", "MultiSetEdit"]], "graphtage.multiset.MultiSetEdit": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__iter__"], [15, 2, 1, "", "__lt__"], [15, 2, 1, "", "_debug_tighten_bounds"], [15, 2, 1, "", "bounds"], [15, 2, 1, "", "edits"], [15, 3, 1, "", "from_node"], [15, 2, 1, "", "has_non_zero_cost"], [15, 3, 1, "", "initial_bounds"], [15, 2, 1, "", "is_complete"], [15, 2, 1, "", "on_diff"], [15, 2, 1, "", "print"], [15, 4, 1, "", "sequence"], [15, 2, 1, "", "tighten_bounds"], [15, 3, 1, "", "to_insert"], [15, 3, 1, "", "to_remove"], [15, 4, 1, "", "valid"]], "graphtage.object_set": [[16, 1, 1, "", "IdentityHash"], [16, 1, 1, "", "ObjectSet"]], "graphtage.object_set.IdentityHash": [[16, 2, 1, "", "__init__"]], "graphtage.object_set.ObjectSet": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "_from_iterable"], [16, 2, 1, "", "_hash"], [16, 2, 1, "", "add"], [16, 2, 1, "", "clear"], [16, 2, 1, "", "discard"], [16, 2, 1, "", "isdisjoint"], [16, 2, 1, "", "pop"], [16, 2, 1, "", "remove"]], "graphtage.pickle": [[17, 1, 1, "", "Pickle"]], "graphtage.pickle.Pickle": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "build_tree"], [17, 2, 1, "", "build_tree_handling_errors"], [17, 3, 1, "", "default_instance"], [17, 2, 1, "", "get_default_formatter"]], "graphtage.plist": [[18, 1, 1, "", "PLIST"], [18, 1, 1, "", "PLISTFormatter"], [18, 1, 1, "", "PLISTNode"], [18, 1, 1, "", "PLISTSequenceFormatter"], [18, 5, 1, "", "build_tree"]], "graphtage.plist.PLIST": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "build_tree"], [18, 2, 1, "", "build_tree_handling_errors"], [18, 3, 1, "", "default_instance"], [18, 2, 1, "", "get_default_formatter"]], "graphtage.plist.PLISTFormatter": [[18, 3, 1, "", "DEFAULT_INSTANCE"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "__new__"], [18, 2, 1, "", "get_formatter"], [18, 3, 1, "", "is_partial"], [18, 3, 1, "", "parent"], [18, 2, 1, "", "print"], [18, 2, 1, "", "print_BoolNode"], [18, 2, 1, "", "print_FloatNode"], [18, 2, 1, "", "print_IntegerNode"], [18, 2, 1, "", "print_LeafNode"], [18, 2, 1, "", "print_PLISTNode"], [18, 2, 1, "", "print_StringNode"], [18, 4, 1, "", "root"], [18, 3, 1, "", "sub_format_types"], [18, 3, 1, "", "sub_formatters"], [18, 2, 1, "", "write_obj"]], "graphtage.plist.PLISTNode": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "add_edit_modifier"], [18, 2, 1, "", "all_children_are_leaves"], [18, 2, 1, "", "calculate_total_size"], [18, 2, 1, "", "children"], [18, 2, 1, "", "copy"], [18, 2, 1, "", "copy_from"], [18, 2, 1, "", "dfs"], [18, 2, 1, "", "diff"], [18, 2, 1, "", "editable_dict"], [18, 4, 1, "", "edited"], [18, 2, 1, "", "edits"], [18, 2, 1, "", "get_all_edit_contexts"], [18, 2, 1, "", "get_all_edits"], [18, 4, 1, "", "is_leaf"], [18, 2, 1, "", "make_edited"], [18, 4, 1, "", "parent"], [18, 2, 1, "", "print"], [18, 2, 1, "", "print_parent_context"], [18, 2, 1, "", "to_obj"], [18, 4, 1, "", "total_size"]], "graphtage.plist.PLISTSequenceFormatter": [[18, 3, 1, "", "DEFAULT_INSTANCE"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "__new__"], [18, 2, 1, "", "edit_print"], [18, 2, 1, "", "get_formatter"], [18, 3, 1, "", "is_partial"], [18, 2, 1, "", "item_newline"], [18, 2, 1, "", "items_indent"], [18, 3, 1, "", "parent"], [18, 2, 1, "", "print"], [18, 2, 1, "", "print_KeyValuePairNode"], [18, 2, 1, "", "print_ListNode"], [18, 2, 1, "", "print_MappingNode"], [18, 2, 1, "", "print_MultiSetNode"], [18, 2, 1, "", "print_SequenceNode"], [18, 4, 1, "", "root"], [18, 3, 1, "", "sub_format_types"], [18, 3, 1, "", "sub_formatters"]], "graphtage.printer": [[19, 1, 1, "", "ANSIContext"], [19, 1, 1, "", "CombiningMarkContext"], [19, 1, 1, "", "CombiningMarkWriter"], [19, 3, 1, "", "DEFAULT_PRINTER"], [19, 1, 1, "", "HTMLANSIContext"], [19, 1, 1, "", "HTMLPrinter"], [19, 1, 1, "", "NullANSIContext"], [19, 1, 1, "", "NullWriter"], [19, 1, 1, "", "Printer"], [19, 1, 1, "", "RawWriter"], [19, 1, 1, "", "Writer"], [19, 5, 1, "", "only_ansi"]], "graphtage.printer.ANSIContext": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "back"], [19, 2, 1, "", "background"], [19, 2, 1, "", "bright"], [19, 2, 1, "", "color"], [19, 2, 1, "", "dim"], [19, 4, 1, "", "end_code"], [19, 4, 1, "", "fore"], [19, 3, 1, "", "is_applied"], [19, 4, 1, "", "parent"], [19, 4, 1, "", "root"], [19, 4, 1, "", "start_code"], [19, 4, 1, "", "style"]], "graphtage.printer.CombiningMarkContext": [[19, 2, 1, "", "__init__"]], "graphtage.printer.CombiningMarkWriter": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "add"], [19, 2, 1, "", "context"], [19, 3, 1, "", "enabled"], [19, 2, 1, "", "flush"], [19, 2, 1, "", "isatty"], [19, 4, 1, "", "marks"], [19, 4, 1, "", "marks_str"], [19, 3, 1, "", "parent"], [19, 2, 1, "", "raw_write"], [19, 2, 1, "", "remove"], [19, 2, 1, "", "write"]], "graphtage.printer.HTMLANSIContext": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "back"], [19, 2, 1, "", "background"], [19, 2, 1, "", "bright"], [19, 2, 1, "", "color"], [19, 2, 1, "", "dim"], [19, 4, 1, "", "end_code"], [19, 4, 1, "", "fore"], [19, 2, 1, "", "get_back"], [19, 2, 1, "", "get_fore"], [19, 3, 1, "", "is_applied"], [19, 4, 1, "", "parent"], [19, 4, 1, "", "root"], [19, 4, 1, "", "start_code"], [19, 3, 1, "", "stream"], [19, 4, 1, "", "style"]], "graphtage.printer.HTMLPrinter": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "ansi_color"], [19, 2, 1, "", "background"], [19, 2, 1, "", "bright"], [19, 2, 1, "", "close"], [19, 4, 1, "", "closed"], [19, 2, 1, "", "color"], [19, 2, 1, "", "context"], [19, 2, 1, "", "dim"], [19, 2, 1, "", "fileno"], [19, 2, 1, "", "flush"], [19, 2, 1, "", "html_element"], [19, 2, 1, "", "indent"], [19, 3, 1, "", "indent_str"], [19, 3, 1, "", "indents"], [19, 2, 1, "", "isatty"], [19, 4, 1, "", "mode"], [19, 4, 1, "", "name"], [19, 2, 1, "", "newline"], [19, 3, 1, "", "out_stream"], [19, 3, 1, "", "quiet"], [19, 2, 1, "", "raw_write"], [19, 2, 1, "", "read"], [19, 2, 1, "", "readable"], [19, 2, 1, "", "readline"], [19, 2, 1, "", "readlines"], [19, 2, 1, "", "seek"], [19, 2, 1, "", "seekable"], [19, 3, 1, "", "status_stream"], [19, 2, 1, "", "strike"], [19, 2, 1, "", "tell"], [19, 2, 1, "", "tqdm"], [19, 2, 1, "", "trange"], [19, 2, 1, "", "truncate"], [19, 2, 1, "", "under_plus"], [19, 2, 1, "", "writable"], [19, 2, 1, "", "write"], [19, 3, 1, "", "write_raw"], [19, 2, 1, "", "writelines"]], "graphtage.printer.NullANSIContext": [[19, 2, 1, "", "__init__"]], "graphtage.printer.NullWriter": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "flush"], [19, 2, 1, "", "isatty"], [19, 2, 1, "", "write"]], "graphtage.printer.Printer": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "ansi_color"], [19, 2, 1, "", "background"], [19, 2, 1, "", "bright"], [19, 2, 1, "", "close"], [19, 4, 1, "", "closed"], [19, 2, 1, "", "color"], [19, 2, 1, "", "context"], [19, 2, 1, "", "dim"], [19, 2, 1, "", "fileno"], [19, 2, 1, "", "flush"], [19, 2, 1, "", "indent"], [19, 3, 1, "", "indent_str"], [19, 3, 1, "", "indents"], [19, 2, 1, "", "isatty"], [19, 4, 1, "", "mode"], [19, 4, 1, "", "name"], [19, 2, 1, "", "newline"], [19, 3, 1, "", "out_stream"], [19, 3, 1, "", "quiet"], [19, 2, 1, "", "raw_write"], [19, 2, 1, "", "read"], [19, 2, 1, "", "readable"], [19, 2, 1, "", "readline"], [19, 2, 1, "", "readlines"], [19, 2, 1, "", "seek"], [19, 2, 1, "", "seekable"], [19, 3, 1, "", "status_stream"], [19, 2, 1, "", "strike"], [19, 2, 1, "", "tell"], [19, 2, 1, "", "tqdm"], [19, 2, 1, "", "trange"], [19, 2, 1, "", "truncate"], [19, 2, 1, "", "under_plus"], [19, 2, 1, "", "writable"], [19, 2, 1, "", "write"], [19, 3, 1, "", "write_raw"], [19, 2, 1, "", "writelines"]], "graphtage.printer.RawWriter": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "flush"], [19, 2, 1, "", "isatty"], [19, 2, 1, "", "raw_write"], [19, 2, 1, "", "write"]], "graphtage.printer.Writer": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "flush"], [19, 2, 1, "", "isatty"], [19, 2, 1, "", "write"]], "graphtage.progress": [[20, 1, 1, "", "StatusWriter"]], "graphtage.progress.StatusWriter": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "close"], [20, 4, 1, "", "closed"], [20, 2, 1, "", "fileno"], [20, 2, 1, "", "flush"], [20, 2, 1, "", "isatty"], [20, 4, 1, "", "mode"], [20, 4, 1, "", "name"], [20, 3, 1, "", "quiet"], [20, 2, 1, "", "read"], [20, 2, 1, "", "readable"], [20, 2, 1, "", "readline"], [20, 2, 1, "", "readlines"], [20, 2, 1, "", "seek"], [20, 2, 1, "", "seekable"], [20, 3, 1, "", "status_stream"], [20, 2, 1, "", "tell"], [20, 2, 1, "", "tqdm"], [20, 2, 1, "", "trange"], [20, 2, 1, "", "truncate"], [20, 2, 1, "", "writable"], [20, 2, 1, "", "write"], [20, 3, 1, "", "write_raw"], [20, 2, 1, "", "writelines"]], "graphtage.pydiff": [[21, 1, 1, "", "ASTBuilder"], [21, 1, 1, "", "PyAlias"], [21, 1, 1, "", "PyDictFormatter"], [21, 1, 1, "", "PyDiffFormatter"], [21, 1, 1, "", "PyImportFormatter"], [21, 1, 1, "", "PyListFormatter"], [21, 1, 1, "", "PyModuleFormatter"], [21, 1, 1, "", "PyObj"], [21, 1, 1, "", "PyObjAttribute"], [21, 1, 1, "", "PyObjAttributes"], [21, 1, 1, "", "PyObjBuilder"], [21, 1, 1, "", "PyObjEdit"], [21, 1, 1, "", "PyObjFixedAttributes"], [21, 1, 1, "", "PyObjFormatter"], [21, 5, 1, "", "ast_to_tree"], [21, 5, 1, "", "build_tree"], [21, 5, 1, "", "diff"], [21, 5, 1, "", "print_diff"]], "graphtage.pydiff.ASTBuilder": [[21, 3, 1, "", "BUILDERS"], [21, 3, 1, "", "EXPANDERS"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "_resolve"], [21, 2, 1, "", "build"], [21, 2, 1, "", "build_alias"], [21, 2, 1, "", "build_assign"], [21, 2, 1, "", "build_ast_dict"], [21, 2, 1, "", "build_ast_list"], [21, 2, 1, "", "build_attribute"], [21, 2, 1, "", "build_bool"], [21, 2, 1, "", "build_call"], [21, 2, 1, "", "build_constant"], [21, 2, 1, "", "build_dict"], [21, 2, 1, "", "build_float"], [21, 2, 1, "", "build_import_from"], [21, 2, 1, "", "build_int"], [21, 2, 1, "", "build_list"], [21, 2, 1, "", "build_module"], [21, 2, 1, "", "build_name"], [21, 2, 1, "", "build_none"], [21, 2, 1, "", "build_set"], [21, 2, 1, "", "build_str"], [21, 2, 1, "", "build_subscript"], [21, 2, 1, "", "build_tree"], [21, 2, 1, "", "builder"], [21, 2, 1, "", "default_builder"], [21, 2, 1, "", "default_expander"], [21, 2, 1, "", "expand"], [21, 2, 1, "", "expand_assign"], [21, 2, 1, "", "expand_ast_dict"], [21, 2, 1, "", "expand_call"], [21, 2, 1, "", "expand_collection"], [21, 2, 1, "", "expand_constant"], [21, 2, 1, "", "expand_dict"], [21, 2, 1, "", "expand_import_from"], [21, 2, 1, "", "expand_list"], [21, 2, 1, "", "expand_module"], [21, 2, 1, "", "expand_subscript"], [21, 2, 1, "", "expander"], [21, 3, 1, "", "options"], [21, 2, 1, "", "resolve_builder"], [21, 2, 1, "", "resolve_expander"]], "graphtage.pydiff.PyAlias": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "add_edit_modifier"], [21, 2, 1, "", "all_children_are_leaves"], [21, 3, 1, "", "as_name"], [21, 2, 1, "", "calculate_total_size"], [21, 2, 1, "", "children"], [21, 2, 1, "", "copy"], [21, 2, 1, "", "copy_from"], [21, 2, 1, "", "dfs"], [21, 2, 1, "", "diff"], [21, 2, 1, "", "editable_dict"], [21, 4, 1, "", "edited"], [21, 2, 1, "", "edits"], [21, 2, 1, "", "get_all_edit_contexts"], [21, 2, 1, "", "get_all_edits"], [21, 4, 1, "", "is_leaf"], [21, 2, 1, "", "items"], [21, 2, 1, "", "make_edited"], [21, 3, 1, "", "name"], [21, 4, 1, "", "parent"], [21, 2, 1, "", "post_init"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_parent_context"], [21, 2, 1, "", "to_obj"], [21, 4, 1, "", "total_size"]], "graphtage.pydiff.PyDictFormatter": [[21, 3, 1, "", "DEFAULT_INSTANCE"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "__new__"], [21, 3, 1, "", "delimiter_callback"], [21, 2, 1, "", "edit_print"], [21, 2, 1, "", "get_formatter"], [21, 3, 1, "", "is_partial"], [21, 2, 1, "", "item_newline"], [21, 2, 1, "", "items_indent"], [21, 3, 1, "", "parent"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_MappingNode"], [21, 2, 1, "", "print_MultiSetNode"], [21, 2, 1, "", "print_SequenceNode"], [21, 4, 1, "", "root"], [21, 3, 1, "", "sub_format_types"], [21, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyDiffFormatter": [[21, 3, 1, "", "DEFAULT_INSTANCE"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "__new__"], [21, 2, 1, "", "get_formatter"], [21, 3, 1, "", "is_partial"], [21, 3, 1, "", "parent"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_PyAlias"], [21, 2, 1, "", "print_Subscript"], [21, 4, 1, "", "root"], [21, 3, 1, "", "sub_format_types"], [21, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyImportFormatter": [[21, 3, 1, "", "DEFAULT_INSTANCE"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "__new__"], [21, 2, 1, "", "edit_print"], [21, 2, 1, "", "get_formatter"], [21, 3, 1, "", "is_partial"], [21, 2, 1, "", "item_newline"], [21, 2, 1, "", "items_indent"], [21, 3, 1, "", "parent"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_Assignment"], [21, 2, 1, "", "print_Import"], [21, 2, 1, "", "print_SequenceNode"], [21, 4, 1, "", "root"], [21, 3, 1, "", "sub_format_types"], [21, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyListFormatter": [[21, 3, 1, "", "DEFAULT_INSTANCE"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "__new__"], [21, 3, 1, "", "delimiter_callback"], [21, 2, 1, "", "edit_print"], [21, 2, 1, "", "get_formatter"], [21, 3, 1, "", "is_partial"], [21, 2, 1, "", "item_newline"], [21, 2, 1, "", "items_indent"], [21, 3, 1, "", "parent"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_ListNode"], [21, 2, 1, "", "print_SequenceNode"], [21, 4, 1, "", "root"], [21, 3, 1, "", "sub_format_types"], [21, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyModuleFormatter": [[21, 3, 1, "", "DEFAULT_INSTANCE"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "__new__"], [21, 2, 1, "", "edit_print"], [21, 2, 1, "", "get_formatter"], [21, 3, 1, "", "is_partial"], [21, 2, 1, "", "item_newline"], [21, 2, 1, "", "items_indent"], [21, 3, 1, "", "parent"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_Module"], [21, 2, 1, "", "print_SequenceNode"], [21, 4, 1, "", "root"], [21, 3, 1, "", "sub_format_types"], [21, 3, 1, "", "sub_formatters"]], "graphtage.pydiff.PyObj": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "add_edit_modifier"], [21, 2, 1, "", "all_children_are_leaves"], [21, 2, 1, "", "calculate_total_size"], [21, 2, 1, "", "children"], [21, 2, 1, "", "copy"], [21, 2, 1, "", "copy_from"], [21, 2, 1, "", "dfs"], [21, 2, 1, "", "diff"], [21, 2, 1, "", "editable_dict"], [21, 4, 1, "", "edited"], [21, 2, 1, "", "edits"], [21, 2, 1, "", "get_all_edit_contexts"], [21, 2, 1, "", "get_all_edits"], [21, 4, 1, "", "is_leaf"], [21, 2, 1, "", "make_edited"], [21, 4, 1, "", "parent"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_parent_context"], [21, 2, 1, "", "to_obj"], [21, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjAttribute": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "add_edit_modifier"], [21, 2, 1, "", "all_children_are_leaves"], [21, 3, 1, "", "attr"], [21, 2, 1, "", "calculate_total_size"], [21, 2, 1, "", "children"], [21, 2, 1, "", "copy"], [21, 2, 1, "", "copy_from"], [21, 2, 1, "", "dfs"], [21, 2, 1, "", "diff"], [21, 2, 1, "", "editable_dict"], [21, 4, 1, "", "edited"], [21, 2, 1, "", "edits"], [21, 2, 1, "", "get_all_edit_contexts"], [21, 2, 1, "", "get_all_edits"], [21, 4, 1, "", "is_leaf"], [21, 2, 1, "", "items"], [21, 2, 1, "", "make_edited"], [21, 3, 1, "", "object"], [21, 4, 1, "", "parent"], [21, 2, 1, "", "post_init"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_parent_context"], [21, 2, 1, "", "to_obj"], [21, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjAttributes": [[21, 2, 1, "", "__contains__"], [21, 2, 1, "", "__getitem__"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "add_edit_modifier"], [21, 2, 1, "", "all_children_are_leaves"], [21, 2, 1, "", "calculate_total_size"], [21, 2, 1, "", "children"], [21, 4, 1, "", "container_type"], [21, 2, 1, "", "copy"], [21, 2, 1, "", "copy_from"], [21, 2, 1, "", "dfs"], [21, 2, 1, "", "diff"], [21, 2, 1, "", "editable_dict"], [21, 4, 1, "", "edited"], [21, 2, 1, "", "edits"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "get_all_edit_contexts"], [21, 2, 1, "", "get_all_edits"], [21, 4, 1, "", "is_leaf"], [21, 2, 1, "", "items"], [21, 2, 1, "", "make_edited"], [21, 2, 1, "", "make_key_value_pair_node"], [21, 4, 1, "", "parent"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_parent_context"], [21, 2, 1, "", "to_obj"], [21, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjBuilder": [[21, 3, 1, "", "BUILDERS"], [21, 3, 1, "", "EXPANDERS"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "_resolve"], [21, 2, 1, "", "build"], [21, 2, 1, "", "build_bool"], [21, 2, 1, "", "build_dict"], [21, 2, 1, "", "build_float"], [21, 2, 1, "", "build_int"], [21, 2, 1, "", "build_list"], [21, 2, 1, "", "build_none"], [21, 2, 1, "", "build_set"], [21, 2, 1, "", "build_str"], [21, 2, 1, "", "build_tree"], [21, 2, 1, "", "builder"], [21, 2, 1, "", "default_builder"], [21, 2, 1, "", "default_expander"], [21, 2, 1, "", "expand"], [21, 2, 1, "", "expand_dict"], [21, 2, 1, "", "expand_list"], [21, 2, 1, "", "expander"], [21, 3, 1, "", "options"], [21, 2, 1, "", "resolve_builder"], [21, 2, 1, "", "resolve_expander"]], "graphtage.pydiff.PyObjEdit": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__iter__"], [21, 2, 1, "", "__lt__"], [21, 2, 1, "", "_debug_tighten_bounds"], [21, 2, 1, "", "bounds"], [21, 2, 1, "", "edits"], [21, 3, 1, "", "from_node"], [21, 2, 1, "", "has_non_zero_cost"], [21, 3, 1, "", "initial_bounds"], [21, 2, 1, "", "is_complete"], [21, 2, 1, "", "on_diff"], [21, 2, 1, "", "print"], [21, 2, 1, "", "tighten_bounds"], [21, 4, 1, "", "valid"]], "graphtage.pydiff.PyObjFixedAttributes": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "__len__"], [21, 2, 1, "", "add_edit_modifier"], [21, 2, 1, "", "all_children_are_leaves"], [21, 2, 1, "", "calculate_total_size"], [21, 2, 1, "", "children"], [21, 4, 1, "", "container_type"], [21, 2, 1, "", "copy"], [21, 2, 1, "", "copy_from"], [21, 2, 1, "", "dfs"], [21, 2, 1, "", "diff"], [21, 2, 1, "", "editable_dict"], [21, 4, 1, "", "edited"], [21, 2, 1, "", "edits"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "get_all_edit_contexts"], [21, 2, 1, "", "get_all_edits"], [21, 4, 1, "", "is_leaf"], [21, 2, 1, "", "items"], [21, 2, 1, "", "make_edited"], [21, 2, 1, "", "make_key_value_pair_node"], [21, 4, 1, "", "parent"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_parent_context"], [21, 2, 1, "", "to_obj"], [21, 4, 1, "", "total_size"]], "graphtage.pydiff.PyObjFormatter": [[21, 3, 1, "", "DEFAULT_INSTANCE"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "__new__"], [21, 2, 1, "", "edit_print"], [21, 2, 1, "", "get_formatter"], [21, 3, 1, "", "is_partial"], [21, 2, 1, "", "item_newline"], [21, 2, 1, "", "items_indent"], [21, 3, 1, "", "parent"], [21, 2, 1, "", "print"], [21, 2, 1, "", "print_Call"], [21, 2, 1, "", "print_CallArguments"], [21, 2, 1, "", "print_KeywordArgument"], [21, 2, 1, "", "print_PyObj"], [21, 2, 1, "", "print_PyObjAttribute"], [21, 2, 1, "", "print_PyObjAttributes"], [21, 2, 1, "", "print_PyObjFixedAttributes"], [21, 2, 1, "", "print_SequenceNode"], [21, 4, 1, "", "root"], [21, 3, 1, "", "sub_format_types"], [21, 3, 1, "", "sub_formatters"]], "graphtage.search": [[22, 1, 1, "", "IterativeTighteningSearch"]], "graphtage.search.IterativeTighteningSearch": [[22, 2, 1, "", "__bool__"], [22, 2, 1, "", "__init__"], [22, 4, 1, "", "best_match"], [22, 2, 1, "", "bounds"], [22, 2, 1, "", "goal_test"], [22, 2, 1, "", "remove_best"], [22, 2, 1, "", "search"], [22, 2, 1, "", "tighten_bounds"]], "graphtage.sequences": [[23, 1, 1, "", "FixedLengthSequenceEdit"], [23, 1, 1, "", "SequenceEdit"], [23, 1, 1, "", "SequenceFormatter"], [23, 1, 1, "", "SequenceNode"]], "graphtage.sequences.FixedLengthSequenceEdit": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "__iter__"], [23, 2, 1, "", "__lt__"], [23, 2, 1, "", "_debug_tighten_bounds"], [23, 2, 1, "", "bounds"], [23, 2, 1, "", "edits"], [23, 3, 1, "", "from_node"], [23, 2, 1, "", "has_non_zero_cost"], [23, 3, 1, "", "initial_bounds"], [23, 2, 1, "", "is_complete"], [23, 2, 1, "", "on_diff"], [23, 2, 1, "", "print"], [23, 4, 1, "", "sequence"], [23, 2, 1, "", "tighten_bounds"], [23, 4, 1, "", "valid"]], "graphtage.sequences.SequenceEdit": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "__iter__"], [23, 2, 1, "", "__lt__"], [23, 2, 1, "", "_debug_tighten_bounds"], [23, 2, 1, "", "bounds"], [23, 2, 1, "", "edits"], [23, 3, 1, "", "from_node"], [23, 2, 1, "", "has_non_zero_cost"], [23, 3, 1, "", "initial_bounds"], [23, 2, 1, "", "is_complete"], [23, 2, 1, "", "on_diff"], [23, 2, 1, "", "print"], [23, 4, 1, "", "sequence"], [23, 2, 1, "", "tighten_bounds"], [23, 4, 1, "", "valid"]], "graphtage.sequences.SequenceFormatter": [[23, 3, 1, "", "DEFAULT_INSTANCE"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__new__"], [23, 2, 1, "", "edit_print"], [23, 2, 1, "", "get_formatter"], [23, 3, 1, "", "is_partial"], [23, 2, 1, "", "item_newline"], [23, 2, 1, "", "items_indent"], [23, 3, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_SequenceNode"], [23, 4, 1, "", "root"], [23, 3, 1, "", "sub_format_types"], [23, 3, 1, "", "sub_formatters"]], "graphtage.sequences.SequenceNode": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "__iter__"], [23, 2, 1, "", "__len__"], [23, 2, 1, "", "add_edit_modifier"], [23, 2, 1, "", "all_children_are_leaves"], [23, 2, 1, "", "calculate_total_size"], [23, 2, 1, "", "children"], [23, 4, 1, "", "container_type"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "copy_from"], [23, 2, 1, "", "dfs"], [23, 2, 1, "", "diff"], [23, 2, 1, "", "editable_dict"], [23, 4, 1, "", "edited"], [23, 2, 1, "", "edits"], [23, 2, 1, "", "get_all_edit_contexts"], [23, 2, 1, "", "get_all_edits"], [23, 4, 1, "", "is_leaf"], [23, 2, 1, "", "make_edited"], [23, 4, 1, "", "parent"], [23, 2, 1, "", "print"], [23, 2, 1, "", "print_parent_context"], [23, 2, 1, "", "to_obj"], [23, 4, 1, "", "total_size"]], "graphtage.utils": [[24, 1, 1, "", "HashableCounter"], [24, 1, 1, "", "OrderedCounter"], [24, 1, 1, "", "Sized"], [24, 1, 1, "", "SparseMatrix"], [24, 1, 1, "", "Tempfile"], [24, 5, 1, "", "getsizeof"], [24, 5, 1, "", "largest"], [24, 5, 1, "", "smallest"]], "graphtage.utils.HashableCounter": [[24, 2, 1, "", "__add__"], [24, 2, 1, "", "__and__"], [24, 2, 1, "", "__delitem__"], [24, 2, 1, "", "__iadd__"], [24, 2, 1, "", "__iand__"], [24, 2, 1, "", "__init__"], [24, 2, 1, "", "__ior__"], [24, 2, 1, "", "__isub__"], [24, 2, 1, "", "__missing__"], [24, 2, 1, "", "__neg__"], [24, 2, 1, "", "__or__"], [24, 2, 1, "", "__pos__"], [24, 2, 1, "", "__sub__"], [24, 2, 1, "", "_keep_positive"], [24, 2, 1, "", "clear"], [24, 2, 1, "", "copy"], [24, 2, 1, "", "elements"], [24, 2, 1, "", "fromkeys"], [24, 2, 1, "", "get"], [24, 2, 1, "", "items"], [24, 2, 1, "", "keys"], [24, 2, 1, "", "most_common"], [24, 2, 1, "", "pop"], [24, 2, 1, "", "popitem"], [24, 2, 1, "", "setdefault"], [24, 2, 1, "", "subtract"], [24, 2, 1, "", "update"], [24, 2, 1, "", "values"]], "graphtage.utils.OrderedCounter": [[24, 2, 1, "", "__add__"], [24, 2, 1, "", "__and__"], [24, 2, 1, "", "__delitem__"], [24, 2, 1, "", "__iadd__"], [24, 2, 1, "", "__iand__"], [24, 2, 1, "", "__init__"], [24, 2, 1, "", "__ior__"], [24, 2, 1, "", "__isub__"], [24, 2, 1, "", "__missing__"], [24, 2, 1, "", "__neg__"], [24, 2, 1, "", "__or__"], [24, 2, 1, "", "__pos__"], [24, 2, 1, "", "__sub__"], [24, 2, 1, "", "_keep_positive"], [24, 2, 1, "", "clear"], [24, 2, 1, "", "copy"], [24, 2, 1, "", "elements"], [24, 2, 1, "", "fromkeys"], [24, 2, 1, "", "get"], [24, 2, 1, "", "items"], [24, 2, 1, "", "keys"], [24, 2, 1, "", "most_common"], [24, 2, 1, "", "move_to_end"], [24, 2, 1, "", "pop"], [24, 2, 1, "", "popitem"], [24, 2, 1, "", "setdefault"], [24, 2, 1, "", "subtract"], [24, 2, 1, "", "update"], [24, 2, 1, "", "values"]], "graphtage.utils.Sized": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "getsizeof"]], "graphtage.utils.SparseMatrix": [[24, 1, 1, "", "SparseMatrixRow"], [24, 2, 1, "", "__getitem__"], [24, 2, 1, "", "__init__"], [24, 2, 1, "", "__len__"], [24, 2, 1, "", "clear"], [24, 3, 1, "", "default_value"], [24, 2, 1, "", "get"], [24, 2, 1, "", "getsizeof"], [24, 2, 1, "", "items"], [24, 2, 1, "", "keys"], [24, 3, 1, "", "num_cols"], [24, 2, 1, "", "num_filled_elements"], [24, 3, 1, "", "num_rows"], [24, 3, 1, "", "rows"], [24, 2, 1, "", "shape"], [24, 2, 1, "", "values"]], "graphtage.utils.SparseMatrix.SparseMatrixRow": [[24, 2, 1, "", "__getitem__"], [24, 2, 1, "", "__init__"], [24, 2, 1, "", "__iter__"], [24, 2, 1, "", "__len__"], [24, 2, 1, "", "clear"], [24, 3, 1, "", "default_value"], [24, 2, 1, "", "get"], [24, 2, 1, "", "getsizeof"], [24, 2, 1, "", "items"], [24, 2, 1, "", "keys"], [24, 3, 1, "", "num_cols"], [24, 2, 1, "", "pop"], [24, 2, 1, "", "popitem"], [24, 3, 1, "", "row"], [24, 3, 1, "", "row_num"], [24, 2, 1, "", "setdefault"], [24, 2, 1, "", "shape"], [24, 2, 1, "", "update"], [24, 2, 1, "", "values"]], "graphtage.utils.Tempfile": [[24, 2, 1, "", "__enter__"], [24, 2, 1, "", "__exit__"], [24, 2, 1, "", "__init__"]], "graphtage.version": [[25, 3, 1, "", "DEV_BUILD"], [25, 3, 1, "", "VERSION_STRING"], [25, 3, 1, "", "__version__"], [25, 5, 1, "", "git_branch"]], "graphtage.xml": [[26, 1, 1, "", "HTML"], [26, 1, 1, "", "XML"], [26, 1, 1, "", "XMLChildFormatter"], [26, 1, 1, "", "XMLElement"], [26, 1, 1, "", "XMLElementAttribFormatter"], [26, 1, 1, "", "XMLElementChildren"], [26, 1, 1, "", "XMLElementEdit"], [26, 1, 1, "", "XMLElementObj"], [26, 1, 1, "", "XMLFormatter"], [26, 1, 1, "", "XMLStringFormatter"], [26, 5, 1, "", "build_tree"]], "graphtage.xml.HTML": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "build_tree"], [26, 2, 1, "", "build_tree_handling_errors"], [26, 3, 1, "", "default_instance"], [26, 2, 1, "", "get_default_formatter"]], "graphtage.xml.XML": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "build_tree"], [26, 2, 1, "", "build_tree_handling_errors"], [26, 3, 1, "", "default_instance"], [26, 2, 1, "", "get_default_formatter"]], "graphtage.xml.XMLChildFormatter": [[26, 3, 1, "", "DEFAULT_INSTANCE"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__new__"], [26, 3, 1, "", "delimiter_callback"], [26, 2, 1, "", "edit_print"], [26, 2, 1, "", "get_formatter"], [26, 3, 1, "", "is_partial"], [26, 2, 1, "", "item_newline"], [26, 2, 1, "", "items_indent"], [26, 3, 1, "", "parent"], [26, 2, 1, "", "print"], [26, 2, 1, "", "print_ListNode"], [26, 2, 1, "", "print_SequenceNode"], [26, 4, 1, "", "root"], [26, 3, 1, "", "sub_format_types"], [26, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLElement": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "add_edit_modifier"], [26, 2, 1, "", "all_children_are_leaves"], [26, 2, 1, "", "calculate_total_size"], [26, 2, 1, "", "children"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "copy_from"], [26, 2, 1, "", "dfs"], [26, 2, 1, "", "diff"], [26, 2, 1, "", "editable_dict"], [26, 4, 1, "", "edited"], [26, 2, 1, "", "edits"], [26, 2, 1, "", "get_all_edit_contexts"], [26, 2, 1, "", "get_all_edits"], [26, 4, 1, "", "is_leaf"], [26, 2, 1, "", "make_edited"], [26, 4, 1, "", "parent"], [26, 2, 1, "", "print"], [26, 2, 1, "", "print_parent_context"], [26, 3, 1, "", "tag"], [26, 3, 1, "", "text"], [26, 2, 1, "", "to_obj"], [26, 4, 1, "", "total_size"]], "graphtage.xml.XMLElementAttribFormatter": [[26, 3, 1, "", "DEFAULT_INSTANCE"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__new__"], [26, 3, 1, "", "delimiter_callback"], [26, 2, 1, "", "edit_print"], [26, 2, 1, "", "get_formatter"], [26, 3, 1, "", "is_partial"], [26, 2, 1, "", "item_newline"], [26, 2, 1, "", "items_indent"], [26, 3, 1, "", "parent"], [26, 2, 1, "", "print"], [26, 2, 1, "", "print_KeyValuePairNode"], [26, 2, 1, "", "print_MappingNode"], [26, 2, 1, "", "print_MultiSetNode"], [26, 2, 1, "", "print_SequenceNode"], [26, 4, 1, "", "root"], [26, 3, 1, "", "sub_format_types"], [26, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLElementChildren": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "__iter__"], [26, 2, 1, "", "__len__"], [26, 2, 1, "", "add_edit_modifier"], [26, 2, 1, "", "all_children_are_leaves"], [26, 2, 1, "", "calculate_total_size"], [26, 2, 1, "", "children"], [26, 4, 1, "", "container_type"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "copy_from"], [26, 2, 1, "", "dfs"], [26, 2, 1, "", "diff"], [26, 2, 1, "", "editable_dict"], [26, 4, 1, "", "edited"], [26, 2, 1, "", "edits"], [26, 2, 1, "", "get_all_edit_contexts"], [26, 2, 1, "", "get_all_edits"], [26, 4, 1, "", "is_leaf"], [26, 2, 1, "", "make_edited"], [26, 4, 1, "", "parent"], [26, 2, 1, "", "print"], [26, 2, 1, "", "print_parent_context"], [26, 2, 1, "", "to_obj"], [26, 4, 1, "", "total_size"]], "graphtage.xml.XMLElementEdit": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "__iter__"], [26, 2, 1, "", "__lt__"], [26, 2, 1, "", "_debug_tighten_bounds"], [26, 3, 1, "", "attrib_edit"], [26, 2, 1, "", "bounds"], [26, 3, 1, "", "child_edit"], [26, 2, 1, "", "edits"], [26, 3, 1, "", "from_node"], [26, 2, 1, "", "has_non_zero_cost"], [26, 3, 1, "", "initial_bounds"], [26, 2, 1, "", "is_complete"], [26, 2, 1, "", "on_diff"], [26, 2, 1, "", "print"], [26, 3, 1, "", "tag_edit"], [26, 3, 1, "", "text_edit"], [26, 2, 1, "", "tighten_bounds"], [26, 4, 1, "", "valid"]], "graphtage.xml.XMLElementObj": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "attrib"], [26, 3, 1, "", "children"], [26, 3, 1, "", "tag"], [26, 3, 1, "", "text"]], "graphtage.xml.XMLFormatter": [[26, 3, 1, "", "DEFAULT_INSTANCE"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__new__"], [26, 2, 1, "", "get_formatter"], [26, 3, 1, "", "is_partial"], [26, 3, 1, "", "parent"], [26, 2, 1, "", "print"], [26, 2, 1, "", "print_LeafNode"], [26, 2, 1, "", "print_XMLElement"], [26, 4, 1, "", "root"], [26, 3, 1, "", "sub_format_types"], [26, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLStringFormatter": [[26, 3, 1, "", "DEFAULT_INSTANCE"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__new__"], [26, 2, 1, "", "context"], [26, 2, 1, "", "escape"], [26, 2, 1, "", "get_formatter"], [26, 3, 1, "", "is_partial"], [26, 3, 1, "", "is_quoted"], [26, 3, 1, "", "parent"], [26, 2, 1, "", "print"], [26, 2, 1, "", "print_StringEdit"], [26, 2, 1, "", "print_StringNode"], [26, 4, 1, "", "root"], [26, 3, 1, "", "sub_format_types"], [26, 3, 1, "", "sub_formatters"], [26, 2, 1, "", "write_char"], [26, 2, 1, "", "write_end_quote"], [26, 2, 1, "", "write_start_quote"]], "graphtage.yaml": [[27, 1, 1, "", "YAML"], [27, 1, 1, "", "YAMLDictFormatter"], [27, 1, 1, "", "YAMLFormatter"], [27, 1, 1, "", "YAMLKeyValuePairFormatter"], [27, 1, 1, "", "YAMLListFormatter"], [27, 1, 1, "", "YAMLStringFormatter"], [27, 5, 1, "", "build_tree"]], "graphtage.yaml.YAML": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "build_tree"], [27, 2, 1, "", "build_tree_handling_errors"], [27, 3, 1, "", "default_instance"], [27, 2, 1, "", "get_default_formatter"]], "graphtage.yaml.YAMLDictFormatter": [[27, 3, 1, "", "DEFAULT_INSTANCE"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__new__"], [27, 3, 1, "", "delimiter_callback"], [27, 2, 1, "", "edit_print"], [27, 2, 1, "", "get_formatter"], [27, 3, 1, "", "is_partial"], [27, 2, 1, "", "item_newline"], [27, 2, 1, "", "items_indent"], [27, 3, 1, "", "parent"], [27, 2, 1, "", "print"], [27, 2, 1, "", "print_MappingNode"], [27, 2, 1, "", "print_MultiSetNode"], [27, 2, 1, "", "print_SequenceNode"], [27, 4, 1, "", "root"], [27, 3, 1, "", "sub_format_types"], [27, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLFormatter": [[27, 3, 1, "", "DEFAULT_INSTANCE"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__new__"], [27, 2, 1, "", "get_formatter"], [27, 3, 1, "", "is_partial"], [27, 3, 1, "", "parent"], [27, 2, 1, "", "print"], [27, 2, 1, "", "print_ContainerNode"], [27, 2, 1, "", "print_LeafNode"], [27, 4, 1, "", "root"], [27, 3, 1, "", "sub_format_types"], [27, 3, 1, "", "sub_formatters"], [27, 2, 1, "", "write_obj"]], "graphtage.yaml.YAMLKeyValuePairFormatter": [[27, 3, 1, "", "DEFAULT_INSTANCE"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__new__"], [27, 2, 1, "", "get_formatter"], [27, 3, 1, "", "is_partial"], [27, 3, 1, "", "parent"], [27, 2, 1, "", "print"], [27, 2, 1, "", "print_KeyValuePairNode"], [27, 4, 1, "", "root"], [27, 3, 1, "", "sub_format_types"], [27, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLListFormatter": [[27, 3, 1, "", "DEFAULT_INSTANCE"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__new__"], [27, 3, 1, "", "delimiter_callback"], [27, 2, 1, "", "edit_print"], [27, 2, 1, "", "get_formatter"], [27, 3, 1, "", "is_partial"], [27, 2, 1, "", "item_newline"], [27, 2, 1, "", "items_indent"], [27, 3, 1, "", "parent"], [27, 2, 1, "", "print"], [27, 2, 1, "", "print_ListNode"], [27, 2, 1, "", "print_SequenceNode"], [27, 4, 1, "", "root"], [27, 3, 1, "", "sub_format_types"], [27, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLStringFormatter": [[27, 3, 1, "", "DEFAULT_INSTANCE"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__new__"], [27, 2, 1, "", "context"], [27, 2, 1, "", "escape"], [27, 2, 1, "", "get_formatter"], [27, 3, 1, "", "has_newline"], [27, 3, 1, "", "is_partial"], [27, 3, 1, "", "is_quoted"], [27, 3, 1, "", "parent"], [27, 2, 1, "", "print"], [27, 2, 1, "", "print_StringEdit"], [27, 2, 1, "", "print_StringNode"], [27, 4, 1, "", "root"], [27, 3, 1, "", "sub_format_types"], [27, 3, 1, "", "sub_formatters"], [27, 2, 1, "", "write_char"], [27, 2, 1, "", "write_end_quote"], [27, 2, 1, "", "write_start_quote"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"extend": [0, 29], "graphtag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "abstractcompoundedit": 1, "abstractedit": 1, "boolnod": 1, "buildopt": 1, "compoundedit": 1, "constantcostedit": 1, "containernod": 1, "dictnod": 1, "edit": [1, 30], "editcollect": 1, "editsequ": 1, "editedtreenod": 1, "filetyp": 1, "filetypewatch": 1, "fixedkeydictnod": 1, "fixedkeydictnodeedit": 1, "floatnod": 1, "graphtageformatt": 1, "insert": 1, "integernod": 1, "keyvaluepairedit": 1, "keyvaluepairnod": 1, "leafnod": 1, "listnod": 1, "mappingnod": 1, "match": [1, 14, 28], "multisetnod": 1, "nullnod": 1, "possibleedit": 1, "remov": 1, "replac": 1, "stringedit": 1, "stringformatt": 1, "stringnod": 1, "treenod": 1, "treenodemeta": 1, "function": [1, 3, 6, 9, 11, 12, 13, 14, 18, 19, 21, 24, 25, 26, 27], "explode_edit": 1, "get_filetyp": 1, "string_edit_dist": 1, "ast": 2, "assign": 2, "call": 2, "callargu": 2, "callkeyword": 2, "import": 2, "keywordargu": 2, "modul": [2, 11], "subscript": 2, "bound": 3, "boundedcompar": 3, "constantbound": 3, "infin": 3, "rang": 3, "make_distinct": 3, "min_bound": 3, "repeat_until_tighten": 3, "sort": 3, "builder": 4, "basicbuild": 4, "cyclicrefer": 4, "constraint": 5, "conditionalmatch": 5, "matchif": 5, "matchunless": 5, "csv": 6, "csvformatt": 6, "csvnode": 6, "csvrow": 6, "csvrowformatt": 6, "build_tre": [6, 12, 18, 21, 26, 27], "dataclass": 7, "dataclassedit": 7, "dataclassnod": 7, "debug": 8, "debugg": 8, "express": 9, "closebracket": 9, "closeparen": 9, "collectioninfo": 9, "comma": 9, "fixedsizecollect": 9, "floattoken": 9, "functioncal": 9, "identifiertoken": 9, "integertoken": 9, "numerictoken": 9, "openbracket": 9, "openparen": 9, "oper": 9, "operatortoken": 9, "pairedendtoken": 9, "pairedstarttoken": 9, "pairedtoken": 9, "parenthesi": 9, "parseerror": 9, "stringtoken": 9, "token": 9, "get_memb": 9, "todo": 9, "infix_to_rpn": 9, "pars": 9, "fibonacci": 10, "fibonacciheap": 10, "heapnod": 10, "maxfibonacciheap": 10, "reversedcompar": 10, "formatt": 11, "why": [11, 28], "doe": 11, "exist": 11, "what": 11, "can": 11, "do": 11, "format": [11, 30], "protocol": [11, 32], "basicformatt": 11, "formattercheck": 11, "get_formatt": 11, "json": 12, "json5": 12, "jsondictformatt": 12, "jsonformatt": 12, "jsonlistformatt": 12, "jsonstringformatt": 12, "levenshtein": 13, "editdist": 13, "levenshtein_dist": 13, "edg": 14, "matchingfromnod": 14, "matchingnod": 14, "matchingtonod": 14, "pathset": 14, "queueelement": 14, "sortededg": 14, "weightedbipartitematch": 14, "weightedbipartitematcherpartial_implement": 14, "get_dtyp": 14, "min_weight_bipartite_match": 14, "multiset": 15, "multisetedit": 15, "object_set": 16, "identityhash": 16, "objectset": 16, "pickl": 17, "plist": 18, "plistformatt": 18, "plistnod": 18, "plistsequenceformatt": 18, "printer": 19, "ansicontext": 19, "combiningmarkcontext": 19, "combiningmarkwrit": 19, "htmlansicontext": 19, "htmlprinter": 19, "nullansicontext": 19, "nullwrit": 19, "rawwrit": 19, "writer": 19, "only_ansi": 19, "progress": 20, "statuswrit": 20, "pydiff": 21, "astbuild": 21, "pyalia": 21, "pydictformatt": 21, "pydiffformatt": 21, "pyimportformatt": 21, "pylistformatt": 21, "pymoduleformatt": 21, "pyobj": 21, "pyobjattribut": 21, "pyobjbuild": 21, "pyobjedit": 21, "pyobjfixedattribut": 21, "pyobjformatt": 21, "ast_to_tre": 21, "diff": 21, "print_diff": 21, "search": 22, "iterativetighteningsearch": 22, "sequenc": [23, 28], "fixedlengthsequenceedit": 23, "sequenceedit": 23, "sequenceformatt": 23, "sequencenod": 23, "util": [24, 29], "hashablecount": 24, "orderedcount": 24, "size": 24, "sparsematrix": 24, "tempfil": 24, "getsizeof": 24, "largest": 24, "smallest": 24, "version": 25, "git_branch": 25, "xml": 26, "html": 26, "xmlchildformatt": 26, "xmlelement": 26, "xmlelementattribformatt": 26, "xmlelementchildren": 26, "xmlelementedit": 26, "xmlelementobj": 26, "xmlformatt": 26, "xmlstringformatt": 26, "yaml": 27, "yamldictformatt": 27, "yamlformatt": 27, "yamlkeyvaluepairformatt": 27, "yamllistformatt": 27, "yamlstringformatt": 27, "how": [28, 29], "work": [28, 29], "map": 28, "tree": 28, "i": 28, "complex": 28, "order": 28, "unord": 28, "collect": 28, "footnot": 28, "document": 29, "you": 29, "want": 29, "learn": 29, "us": [29, 30], "command": 29, "line": 29, "programmat": [29, 30], "interact": 29, "librari": 29, "modifi": 29, "ar": 29, "alreadi": 29, "familiar": 29, "just": 29, "need": 29, "an": 29, "api": [29, 31], "refer": 29, "curiou": 29, "more": 29, "about": 29, "content": 29, "indic": 29, "tabl": 29, "The": 30, "intermedi": 30, "represent": 30, "transform": 30, "node": 30, "appli": 30, "print": [30, 32], "result": 30, "dif": 30, "In": 30, "memori": 30, "python": 30, "object": 30}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Extending Graphtage": [[0, "extending-graphtage"]], "graphtage": [[1, "module-graphtage"]], "graphtage classes": [[1, "graphtage-classes"]], "AbstractCompoundEdit": [[1, "abstractcompoundedit"]], "AbstractEdit": [[1, "abstractedit"]], "BoolNode": [[1, "boolnode"]], "BuildOptions": [[1, "buildoptions"]], "CompoundEdit": [[1, "compoundedit"]], "ConstantCostEdit": [[1, "constantcostedit"]], "ContainerNode": [[1, "containernode"]], "DictNode": [[1, "dictnode"]], "Edit": [[1, "edit"]], "EditCollection": [[1, "editcollection"]], "EditSequence": [[1, "editsequence"]], "EditedTreeNode": [[1, "editedtreenode"]], "Filetype": [[1, "filetype"]], "FiletypeWatcher": [[1, "filetypewatcher"]], "FixedKeyDictNode": [[1, "fixedkeydictnode"]], "FixedKeyDictNodeEdit": [[1, "fixedkeydictnodeedit"]], "FloatNode": [[1, "floatnode"]], "GraphtageFormatter": [[1, "graphtageformatter"]], "Insert": [[1, "insert"]], "IntegerNode": [[1, "integernode"]], "KeyValuePairEdit": [[1, "keyvaluepairedit"]], "KeyValuePairNode": [[1, "keyvaluepairnode"]], "LeafNode": [[1, "leafnode"]], "ListNode": [[1, "listnode"]], "MappingNode": [[1, "mappingnode"]], "Match": [[1, "match"]], "MultiSetNode": [[1, "multisetnode"]], "NullNode": [[1, "nullnode"]], "PossibleEdits": [[1, "possibleedits"]], "Remove": [[1, "remove"]], "Replace": [[1, "replace"]], "StringEdit": [[1, "stringedit"]], "StringFormatter": [[1, "stringformatter"]], "StringNode": [[1, "stringnode"]], "TreeNode": [[1, "treenode"]], "TreeNodeMeta": [[1, "treenodemeta"]], "graphtage functions": [[1, "graphtage-functions"]], "explode_edits": [[1, "explode-edits"]], "get_filetype": [[1, "get-filetype"]], "string_edit_distance": [[1, "string-edit-distance"]], "graphtage.ast": [[2, "module-graphtage.ast"]], "ast classes": [[2, "ast-classes"]], "Assignment": [[2, "assignment"]], "Call": [[2, "call"]], "CallArguments": [[2, "callarguments"]], "CallKeywords": [[2, "callkeywords"]], "Import": [[2, "import"]], "KeywordArgument": [[2, "keywordargument"]], "Module": [[2, "module"]], "Subscript": [[2, "subscript"]], "graphtage.bounds": [[3, "module-graphtage.bounds"]], "bounds classes": [[3, "bounds-classes"]], "Bounded": [[3, "bounded"]], "BoundedComparator": [[3, "boundedcomparator"]], "ConstantBound": [[3, "constantbound"]], "Infinity": [[3, "infinity"]], "Range": [[3, "range"]], "bounds functions": [[3, "bounds-functions"]], "make_distinct": [[3, "make-distinct"]], "min_bounded": [[3, "min-bounded"]], "repeat_until_tightened": [[3, "repeat-until-tightened"]], "sort": [[3, "sort"]], "graphtage.builder": [[4, "module-graphtage.builder"]], "builder classes": [[4, "builder-classes"]], "BasicBuilder": [[4, "basicbuilder"]], "Builder": [[4, "builder"]], "CyclicReference": [[4, "cyclicreference"]], "graphtage.constraints": [[5, "module-graphtage.constraints"]], "constraints classes": [[5, "constraints-classes"]], "ConditionalMatcher": [[5, "conditionalmatcher"]], "MatchIf": [[5, "matchif"]], "MatchUnless": [[5, "matchunless"]], "graphtage.csv": [[6, "module-graphtage.csv"]], "csv classes": [[6, "csv-classes"]], "CSV": [[6, "csv"]], "CSVFormatter": [[6, "csvformatter"]], "CSVNode": [[6, "csvnode"]], "CSVRow": [[6, "csvrow"]], "CSVRowFormatter": [[6, "csvrowformatter"]], "CSVRows": [[6, "csvrows"]], "csv functions": [[6, "csv-functions"]], "build_tree": [[6, "build-tree"], [12, "build-tree"], [18, "build-tree"], [21, "build-tree"], [26, "build-tree"], [27, "build-tree"]], "graphtage.dataclasses": [[7, "module-graphtage.dataclasses"]], "dataclasses classes": [[7, "dataclasses-classes"]], "DataClassEdit": [[7, "dataclassedit"]], "DataClassNode": [[7, "dataclassnode"]], "graphtage.debug": [[8, "module-graphtage.debug"]], "debug classes": [[8, "debug-classes"]], "Debuggable": [[8, "debuggable"]], "graphtage.expressions": [[9, "module-graphtage.expressions"]], "expressions classes": [[9, "expressions-classes"]], "CloseBracket": [[9, "closebracket"]], "CloseParen": [[9, "closeparen"]], "CollectionInfo": [[9, "collectioninfo"]], "Comma": [[9, "comma"]], "Expression": [[9, "expression"]], "FixedSizeCollection": [[9, "fixedsizecollection"]], "FloatToken": [[9, "floattoken"]], "FunctionCall": [[9, "functioncall"]], "IdentifierToken": [[9, "identifiertoken"]], "IntegerToken": [[9, "integertoken"]], "NumericToken": [[9, "numerictoken"]], "OpenBracket": [[9, "openbracket"]], "OpenParen": [[9, "openparen"]], "Operator": [[9, "operator"]], "OperatorToken": [[9, "operatortoken"]], "PairedEndToken": [[9, "pairedendtoken"]], "PairedStartToken": [[9, "pairedstarttoken"]], "PairedToken": [[9, "pairedtoken"]], "Parenthesis": [[9, "parenthesis"]], "ParseError": [[9, "parseerror"]], "StringToken": [[9, "stringtoken"]], "Token": [[9, "token"]], "Tokenizer": [[9, "tokenizer"]], "expressions functions": [[9, "expressions-functions"]], "get_member": [[9, "get-member"]], "Todo": [[9, "id1"]], "infix_to_rpn": [[9, "infix-to-rpn"]], "parse": [[9, "parse"]], "tokenize": [[9, "tokenize"]], "graphtage.fibonacci": [[10, "module-graphtage.fibonacci"]], "fibonacci classes": [[10, "fibonacci-classes"]], "FibonacciHeap": [[10, "fibonacciheap"]], "HeapNode": [[10, "heapnode"]], "MaxFibonacciHeap": [[10, "maxfibonacciheap"]], "ReversedComparator": [[10, "reversedcomparator"]], "graphtage.formatter": [[11, "module-graphtage.formatter"]], "Why does the formatter module exist?": [[11, "why-does-the-formatter-module-exist"]], "What the formatter module can do": [[11, "what-the-formatter-module-can-do"]], "Formatting Protocol": [[11, "formatting-protocol"]], "formatter classes": [[11, "formatter-classes"]], "BasicFormatter": [[11, "basicformatter"]], "Formatter": [[11, "formatter"]], "FormatterChecker": [[11, "formatterchecker"]], "formatter functions": [[11, "formatter-functions"]], "get_formatter": [[11, "get-formatter"]], "graphtage.json": [[12, "module-graphtage.json"]], "json classes": [[12, "json-classes"]], "JSON": [[12, "json"]], "JSON5": [[12, "json5"]], "JSONDictFormatter": [[12, "jsondictformatter"]], "JSONFormatter": [[12, "jsonformatter"]], "JSONListFormatter": [[12, "jsonlistformatter"]], "JSONStringFormatter": [[12, "jsonstringformatter"]], "json functions": [[12, "json-functions"]], "graphtage.levenshtein": [[13, "module-graphtage.levenshtein"]], "levenshtein classes": [[13, "levenshtein-classes"]], "EditDistance": [[13, "editdistance"]], "levenshtein functions": [[13, "levenshtein-functions"]], "levenshtein_distance": [[13, "levenshtein-distance"]], "graphtage.matching": [[14, "module-graphtage.matching"]], "matching classes": [[14, "matching-classes"]], "Edge": [[14, "edge"]], "Matching": [[14, "matching"]], "MatchingFromNode": [[14, "matchingfromnode"]], "MatchingNode": [[14, "matchingnode"]], "MatchingToNode": [[14, "matchingtonode"]], "PathSet": [[14, "pathset"]], "QueueElement": [[14, "queueelement"]], "SortedEdges": [[14, "sortededges"]], "WeightedBipartiteMatcher": [[14, "weightedbipartitematcher"]], "WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION": [[14, "weightedbipartitematcherpartial-implementation"]], "matching functions": [[14, "matching-functions"]], "get_dtype": [[14, "get-dtype"]], "min_weight_bipartite_matching": [[14, "min-weight-bipartite-matching"]], "graphtage.multiset": [[15, "module-graphtage.multiset"]], "multiset classes": [[15, "multiset-classes"]], "MultiSetEdit": [[15, "multisetedit"]], "graphtage.object_set": [[16, "module-graphtage.object_set"]], "object_set classes": [[16, "object-set-classes"]], "IdentityHash": [[16, "identityhash"]], "ObjectSet": [[16, "objectset"]], "graphtage.pickle": [[17, "module-graphtage.pickle"]], "pickle classes": [[17, "pickle-classes"]], "Pickle": [[17, "pickle"]], "graphtage.plist": [[18, "module-graphtage.plist"]], "plist classes": [[18, "plist-classes"]], "PLIST": [[18, "plist"]], "PLISTFormatter": [[18, "plistformatter"]], "PLISTNode": [[18, "plistnode"]], "PLISTSequenceFormatter": [[18, "plistsequenceformatter"]], "plist functions": [[18, "plist-functions"]], "graphtage.printer": [[19, "module-graphtage.printer"]], "printer classes": [[19, "printer-classes"]], "ANSIContext": [[19, "ansicontext"]], "CombiningMarkContext": [[19, "combiningmarkcontext"]], "CombiningMarkWriter": [[19, "combiningmarkwriter"]], "HTMLANSIContext": [[19, "htmlansicontext"]], "HTMLPrinter": [[19, "htmlprinter"]], "NullANSIContext": [[19, "nullansicontext"]], "NullWriter": [[19, "nullwriter"]], "Printer": [[19, "printer"]], "RawWriter": [[19, "rawwriter"]], "Writer": [[19, "writer"]], "printer functions": [[19, "printer-functions"]], "only_ansi": [[19, "only-ansi"]], "graphtage.progress": [[20, "module-graphtage.progress"]], "progress classes": [[20, "progress-classes"]], "StatusWriter": [[20, "statuswriter"]], "graphtage.pydiff": [[21, "module-graphtage.pydiff"]], "pydiff classes": [[21, "pydiff-classes"]], "ASTBuilder": [[21, "astbuilder"]], "PyAlias": [[21, "pyalias"]], "PyDictFormatter": [[21, "pydictformatter"]], "PyDiffFormatter": [[21, "pydiffformatter"]], "PyImportFormatter": [[21, "pyimportformatter"]], "PyListFormatter": [[21, "pylistformatter"]], "PyModuleFormatter": [[21, "pymoduleformatter"]], "PyObj": [[21, "pyobj"]], "PyObjAttribute": [[21, "pyobjattribute"]], "PyObjAttributes": [[21, "pyobjattributes"]], "PyObjBuilder": [[21, "pyobjbuilder"]], "PyObjEdit": [[21, "pyobjedit"]], "PyObjFixedAttributes": [[21, "pyobjfixedattributes"]], "PyObjFormatter": [[21, "pyobjformatter"]], "pydiff functions": [[21, "pydiff-functions"]], "ast_to_tree": [[21, "ast-to-tree"]], "diff": [[21, "diff"]], "print_diff": [[21, "print-diff"]], "graphtage.search": [[22, "module-graphtage.search"]], "search classes": [[22, "search-classes"]], "IterativeTighteningSearch": [[22, "iterativetighteningsearch"]], "graphtage.sequences": [[23, "module-graphtage.sequences"]], "sequences classes": [[23, "sequences-classes"]], "FixedLengthSequenceEdit": [[23, "fixedlengthsequenceedit"]], "SequenceEdit": [[23, "sequenceedit"]], "SequenceFormatter": [[23, "sequenceformatter"]], "SequenceNode": [[23, "sequencenode"]], "graphtage.utils": [[24, "module-graphtage.utils"]], "utils classes": [[24, "utils-classes"]], "HashableCounter": [[24, "hashablecounter"]], "OrderedCounter": [[24, "orderedcounter"]], "Sized": [[24, "sized"]], "SparseMatrix": [[24, "sparsematrix"]], "Tempfile": [[24, "tempfile"]], "utils functions": [[24, "utils-functions"]], "getsizeof": [[24, "getsizeof"]], "largest": [[24, "largest"]], "smallest": [[24, "smallest"]], "graphtage.version": [[25, "module-graphtage.version"]], "version functions": [[25, "version-functions"]], "git_branch": [[25, "git-branch"]], "graphtage.xml": [[26, "module-graphtage.xml"]], "xml classes": [[26, "xml-classes"]], "HTML": [[26, "html"]], "XML": [[26, "xml"]], "XMLChildFormatter": [[26, "xmlchildformatter"]], "XMLElement": [[26, "xmlelement"]], "XMLElementAttribFormatter": [[26, "xmlelementattribformatter"]], "XMLElementChildren": [[26, "xmlelementchildren"]], "XMLElementEdit": [[26, "xmlelementedit"]], "XMLElementObj": [[26, "xmlelementobj"]], "XMLFormatter": [[26, "xmlformatter"]], "XMLStringFormatter": [[26, "xmlstringformatter"]], "xml functions": [[26, "xml-functions"]], "graphtage.yaml": [[27, "module-graphtage.yaml"]], "yaml classes": [[27, "yaml-classes"]], "YAML": [[27, "yaml"]], "YAMLDictFormatter": [[27, "yamldictformatter"]], "YAMLFormatter": [[27, "yamlformatter"]], "YAMLKeyValuePairFormatter": [[27, "yamlkeyvaluepairformatter"]], "YAMLListFormatter": [[27, "yamllistformatter"]], "YAMLStringFormatter": [[27, "yamlstringformatter"]], "yaml functions": [[27, "yaml-functions"]], "How Graphtage Works": [[28, "how-graphtage-works"]], "Why Mapping Trees is Complex": [[28, "why-mapping-trees-is-complex"]], "Matching Ordered Sequences": [[28, "matching-ordered-sequences"]], "Matching Unordered Collections": [[28, "matching-unordered-collections"]], "Footnotes": [[28, "footnotes"]], "Graphtage Documentation": [[29, "graphtage-documentation"]], "You want to learn how to use Graphtage as a command line utility.": [[29, null]], "You want to programmatically interact with Graphtage as a library.": [[29, null]], "You want to modify or extend Graphtage.": [[29, null]], "You are already familiar with Graphtage and just need an API reference.": [[29, null]], "You are curious and want to learn more about how Graphtage works.": [[29, null]], "Contents:": [[29, null]], "Indices and tables": [[29, "indices-and-tables"]], "Using Graphtage Programmatically": [[30, "using-graphtage-programmatically"]], "The Intermediate Representation": [[30, "the-intermediate-representation"]], "Transforming Nodes with Edits": [[30, "transforming-nodes-with-edits"]], "Applying Edits to Nodes": [[30, "applying-edits-to-nodes"]], "Formatting and Printing Results": [[30, "formatting-and-printing-results"]], "Diffing In-Memory Python Objects": [[30, "diffing-in-memory-python-objects"]], "Graphtage API": [[31, "graphtage-api"]], "Printing Protocol": [[32, "printing-protocol"]]}, "indexentries": {"abstractcompoundedit (class in graphtage)": [[1, "graphtage.AbstractCompoundEdit"]], "abstractedit (class in graphtage)": [[1, "graphtage.AbstractEdit"]], "boolnode (class in graphtage)": [[1, "graphtage.BoolNode"]], "buildoptions (class in graphtage)": [[1, "graphtage.BuildOptions"]], "compoundedit (class in graphtage)": [[1, "graphtage.CompoundEdit"]], "constantcostedit (class in graphtage)": [[1, "graphtage.ConstantCostEdit"]], "containernode (class in graphtage)": [[1, "graphtage.ContainerNode"]], "default_instance (graphtage.graphtageformatter attribute)": [[1, "graphtage.GraphtageFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.DEFAULT_INSTANCE"]], "dictnode (class in graphtage)": [[1, "graphtage.DictNode"]], "edit (class in graphtage)": [[1, "graphtage.Edit"]], "editcollection (class in graphtage)": [[1, "graphtage.EditCollection"]], "editsequence (class in graphtage)": [[1, "graphtage.EditSequence"]], "editedtreenode (class in graphtage)": [[1, "graphtage.EditedTreeNode"]], "filetype (class in graphtage)": [[1, "graphtage.Filetype"]], "filetypewatcher (class in graphtage)": [[1, "graphtage.FiletypeWatcher"]], "fixedkeydictnode (class in graphtage)": [[1, "graphtage.FixedKeyDictNode"]], "fixedkeydictnodeedit (class in graphtage)": [[1, "graphtage.FixedKeyDictNodeEdit"]], "floatnode (class in graphtage)": [[1, "graphtage.FloatNode"]], "graphtageformatter (class in graphtage)": [[1, "graphtage.GraphtageFormatter"]], "insert_string (graphtage.insert attribute)": [[1, "graphtage.Insert.INSERT_STRING"]], "insert (class in graphtage)": [[1, "graphtage.Insert"]], "integernode (class in graphtage)": [[1, "graphtage.IntegerNode"]], "keyvaluepairedit (class in graphtage)": [[1, "graphtage.KeyValuePairEdit"]], "keyvaluepairnode (class in graphtage)": [[1, "graphtage.KeyValuePairNode"]], "leafnode (class in graphtage)": [[1, "graphtage.LeafNode"]], "listnode (class in graphtage)": [[1, "graphtage.ListNode"]], "mappingnode (class in graphtage)": [[1, "graphtage.MappingNode"]], "match (class in graphtage)": [[1, "graphtage.Match"]], "multisetnode (class in graphtage)": [[1, "graphtage.MultiSetNode"]], "nullnode (class in graphtage)": [[1, "graphtage.NullNode"]], "possibleedits (class in graphtage)": [[1, "graphtage.PossibleEdits"]], "remove_string (graphtage.remove attribute)": [[1, "graphtage.Remove.REMOVE_STRING"]], "remove (class in graphtage)": [[1, "graphtage.Remove"]], "replace (class in graphtage)": [[1, "graphtage.Replace"]], "stringedit (class in graphtage)": [[1, "graphtage.StringEdit"]], "stringformatter (class in graphtage)": [[1, "graphtage.StringFormatter"]], "stringnode (class in graphtage)": [[1, "graphtage.StringNode"]], "treenode (class in graphtage)": [[1, "graphtage.TreeNode"]], "treenodemeta (class in graphtage)": [[1, "graphtage.TreeNodeMeta"]], "__contains__() (graphtage.dictnode method)": [[1, "graphtage.DictNode.__contains__"]], "__contains__() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.__contains__"]], "__eq__() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.__eq__"]], "__getattr__() (graphtage.buildoptions method)": [[1, "graphtage.BuildOptions.__getattr__"]], "__getitem__() (graphtage.dictnode method)": [[1, "graphtage.DictNode.__getitem__"]], "__getitem__() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.__getitem__"]], "__init__() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.__init__"]], "__init__() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.__init__"]], "__init__() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.__init__"]], "__init__() (graphtage.buildoptions method)": [[1, "graphtage.BuildOptions.__init__"]], "__init__() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.__init__"]], "__init__() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.__init__"]], "__init__() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.__init__"]], "__init__() (graphtage.dictnode method)": [[1, "graphtage.DictNode.__init__"]], "__init__() (graphtage.edit method)": [[1, "graphtage.Edit.__init__"]], "__init__() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.__init__"]], "__init__() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.__init__"]], "__init__() (graphtage.editedtreenode method)": [[1, "graphtage.EditedTreeNode.__init__"]], "__init__() (graphtage.filetype method)": [[1, "graphtage.Filetype.__init__"]], "__init__() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher.__init__"]], "__init__() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.__init__"]], "__init__() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.__init__"]], "__init__() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.__init__"]], "__init__() (graphtage.graphtageformatter method)": [[1, "graphtage.GraphtageFormatter.__init__"]], "__init__() (graphtage.insert method)": [[1, "graphtage.Insert.__init__"]], "__init__() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.__init__"]], "__init__() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.__init__"]], "__init__() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.__init__"]], "__init__() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.__init__"]], "__init__() (graphtage.listnode method)": [[1, "graphtage.ListNode.__init__"]], "__init__() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.__init__"]], "__init__() (graphtage.match method)": [[1, "graphtage.Match.__init__"]], "__init__() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.__init__"]], "__init__() (graphtage.nullnode method)": [[1, "graphtage.NullNode.__init__"]], "__init__() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.__init__"]], "__init__() (graphtage.remove method)": [[1, "graphtage.Remove.__init__"]], "__init__() (graphtage.replace method)": [[1, "graphtage.Replace.__init__"]], "__init__() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.__init__"]], "__init__() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.__init__"]], "__init__() (graphtage.stringnode method)": [[1, "graphtage.StringNode.__init__"]], "__init__() (graphtage.treenode method)": [[1, "graphtage.TreeNode.__init__"]], "__init__() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.__init__"]], "__instancecheck__() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher.__instancecheck__"]], "__instancecheck__() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.__instancecheck__"]], "__iter__() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.__iter__"]], "__iter__() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.__iter__"]], "__iter__() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.__iter__"]], "__iter__() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.__iter__"]], "__iter__() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.__iter__"]], "__iter__() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.__iter__"]], "__iter__() (graphtage.listnode method)": [[1, "graphtage.ListNode.__iter__"]], "__iter__() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.__iter__"]], "__iter__() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.__iter__"]], "__len__() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.__len__"]], "__len__() (graphtage.listnode method)": [[1, "graphtage.ListNode.__len__"]], "__lt__() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.__lt__"]], "__lt__() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.__lt__"]], "__lt__() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.__lt__"]], "__lt__() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.__lt__"]], "__lt__() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.__lt__"]], "__lt__() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.__lt__"]], "__lt__() (graphtage.insert method)": [[1, "graphtage.Insert.__lt__"]], "__lt__() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.__lt__"]], "__lt__() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.__lt__"]], "__lt__() (graphtage.match method)": [[1, "graphtage.Match.__lt__"]], "__lt__() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.__lt__"]], "__lt__() (graphtage.remove method)": [[1, "graphtage.Remove.__lt__"]], "__lt__() (graphtage.replace method)": [[1, "graphtage.Replace.__lt__"]], "__lt__() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.__lt__"]], "__new__() (graphtage.graphtageformatter static method)": [[1, "graphtage.GraphtageFormatter.__new__"]], "__new__() (graphtage.stringformatter static method)": [[1, "graphtage.StringFormatter.__new__"]], "__subclasscheck__() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher.__subclasscheck__"]], "__subclasscheck__() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.__subclasscheck__"]], "_abc_caches_clear() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher._abc_caches_clear"]], "_abc_caches_clear() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta._abc_caches_clear"]], "_abc_registry_clear() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher._abc_registry_clear"]], "_abc_registry_clear() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta._abc_registry_clear"]], "_debug_tighten_bounds() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.editcollection method)": [[1, "graphtage.EditCollection._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.editsequence method)": [[1, "graphtage.EditSequence._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.insert method)": [[1, "graphtage.Insert._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.match method)": [[1, "graphtage.Match._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.remove method)": [[1, "graphtage.Remove._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.replace method)": [[1, "graphtage.Replace._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.stringedit method)": [[1, "graphtage.StringEdit._debug_tighten_bounds"]], "_dump_registry() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher._dump_registry"]], "_dump_registry() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta._dump_registry"]], "add_edit_modifier() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.dictnode method)": [[1, "graphtage.DictNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.listnode method)": [[1, "graphtage.ListNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.nullnode method)": [[1, "graphtage.NullNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.stringnode method)": [[1, "graphtage.StringNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.treenode method)": [[1, "graphtage.TreeNode.add_edit_modifier"]], "all_children_are_leaves() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.dictnode method)": [[1, "graphtage.DictNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.listnode method)": [[1, "graphtage.ListNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.all_children_are_leaves"]], "best_possibility() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.best_possibility"]], "bounds() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.bounds"]], "bounds() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.bounds"]], "bounds() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.bounds"]], "bounds() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.bounds"]], "bounds() (graphtage.edit method)": [[1, "graphtage.Edit.bounds"]], "bounds() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.bounds"]], "bounds() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.bounds"]], "bounds() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.bounds"]], "bounds() (graphtage.insert method)": [[1, "graphtage.Insert.bounds"]], "bounds() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.bounds"]], "bounds() (graphtage.match method)": [[1, "graphtage.Match.bounds"]], "bounds() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.bounds"]], "bounds() (graphtage.remove method)": [[1, "graphtage.Remove.bounds"]], "bounds() (graphtage.replace method)": [[1, "graphtage.Replace.bounds"]], "bounds() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.bounds"]], "build_tree() (graphtage.filetype method)": [[1, "graphtage.Filetype.build_tree"]], "build_tree_handling_errors() (graphtage.filetype method)": [[1, "graphtage.Filetype.build_tree_handling_errors"]], "calculate_total_size() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.calculate_total_size"]], "calculate_total_size() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.calculate_total_size"]], "calculate_total_size() (graphtage.dictnode method)": [[1, "graphtage.DictNode.calculate_total_size"]], "calculate_total_size() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.calculate_total_size"]], "calculate_total_size() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.calculate_total_size"]], "calculate_total_size() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.calculate_total_size"]], "calculate_total_size() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.calculate_total_size"]], "calculate_total_size() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.calculate_total_size"]], "calculate_total_size() (graphtage.listnode method)": [[1, "graphtage.ListNode.calculate_total_size"]], "calculate_total_size() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.calculate_total_size"]], "calculate_total_size() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.calculate_total_size"]], "calculate_total_size() (graphtage.nullnode method)": [[1, "graphtage.NullNode.calculate_total_size"]], "calculate_total_size() (graphtage.stringnode method)": [[1, "graphtage.StringNode.calculate_total_size"]], "calculate_total_size() (graphtage.treenode method)": [[1, "graphtage.TreeNode.calculate_total_size"]], "children() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.children"]], "children() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.children"]], "children() (graphtage.dictnode method)": [[1, "graphtage.DictNode.children"]], "children() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.children"]], "children() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.children"]], "children() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.children"]], "children() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.children"]], "children() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.children"]], "children() (graphtage.listnode method)": [[1, "graphtage.ListNode.children"]], "children() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.children"]], "children() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.children"]], "children() (graphtage.nullnode method)": [[1, "graphtage.NullNode.children"]], "children() (graphtage.stringnode method)": [[1, "graphtage.StringNode.children"]], "children() (graphtage.treenode method)": [[1, "graphtage.TreeNode.children"]], "container_type (graphtage.dictnode property)": [[1, "graphtage.DictNode.container_type"]], "container_type (graphtage.fixedkeydictnode property)": [[1, "graphtage.FixedKeyDictNode.container_type"]], "container_type (graphtage.listnode property)": [[1, "graphtage.ListNode.container_type"]], "container_type (graphtage.multisetnode property)": [[1, "graphtage.MultiSetNode.container_type"]], "context() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.context"]], "copy() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.copy"]], "copy() (graphtage.buildoptions method)": [[1, "graphtage.BuildOptions.copy"]], "copy() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.copy"]], "copy() (graphtage.dictnode method)": [[1, "graphtage.DictNode.copy"]], "copy() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.copy"]], "copy() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.copy"]], "copy() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.copy"]], "copy() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.copy"]], "copy() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.copy"]], "copy() (graphtage.listnode method)": [[1, "graphtage.ListNode.copy"]], "copy() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.copy"]], "copy() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.copy"]], "copy() (graphtage.nullnode method)": [[1, "graphtage.NullNode.copy"]], "copy() (graphtage.stringnode method)": [[1, "graphtage.StringNode.copy"]], "copy() (graphtage.treenode method)": [[1, "graphtage.TreeNode.copy"]], "copy_from() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.copy_from"]], "copy_from() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.copy_from"]], "copy_from() (graphtage.dictnode method)": [[1, "graphtage.DictNode.copy_from"]], "copy_from() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.copy_from"]], "copy_from() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.copy_from"]], "copy_from() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.copy_from"]], "copy_from() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.copy_from"]], "copy_from() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.copy_from"]], "copy_from() (graphtage.listnode method)": [[1, "graphtage.ListNode.copy_from"]], "copy_from() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.copy_from"]], "copy_from() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.copy_from"]], "copy_from() (graphtage.nullnode method)": [[1, "graphtage.NullNode.copy_from"]], "copy_from() (graphtage.stringnode method)": [[1, "graphtage.StringNode.copy_from"]], "copy_from() (graphtage.treenode method)": [[1, "graphtage.TreeNode.copy_from"]], "default_instance (graphtage.filetype attribute)": [[1, "graphtage.Filetype.default_instance"]], "dfs() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.dfs"]], "dfs() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.dfs"]], "dfs() (graphtage.dictnode method)": [[1, "graphtage.DictNode.dfs"]], "dfs() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.dfs"]], "dfs() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.dfs"]], "dfs() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.dfs"]], "dfs() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.dfs"]], "dfs() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.dfs"]], "dfs() (graphtage.listnode method)": [[1, "graphtage.ListNode.dfs"]], "dfs() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.dfs"]], "dfs() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.dfs"]], "dfs() (graphtage.nullnode method)": [[1, "graphtage.NullNode.dfs"]], "dfs() (graphtage.stringnode method)": [[1, "graphtage.StringNode.dfs"]], "dfs() (graphtage.treenode method)": [[1, "graphtage.TreeNode.dfs"]], "diff() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.diff"]], "diff() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.diff"]], "diff() (graphtage.dictnode method)": [[1, "graphtage.DictNode.diff"]], "diff() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.diff"]], "diff() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.diff"]], "diff() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.diff"]], "diff() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.diff"]], "diff() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.diff"]], "diff() (graphtage.listnode method)": [[1, "graphtage.ListNode.diff"]], "diff() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.diff"]], "diff() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.diff"]], "diff() (graphtage.nullnode method)": [[1, "graphtage.NullNode.diff"]], "diff() (graphtage.stringnode method)": [[1, "graphtage.StringNode.diff"]], "diff() (graphtage.treenode method)": [[1, "graphtage.TreeNode.diff"]], "editable_dict() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.editable_dict"]], "editable_dict() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.editable_dict"]], "editable_dict() (graphtage.dictnode method)": [[1, "graphtage.DictNode.editable_dict"]], "editable_dict() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.editable_dict"]], "editable_dict() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.editable_dict"]], "editable_dict() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.editable_dict"]], "editable_dict() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.editable_dict"]], "editable_dict() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.editable_dict"]], "editable_dict() (graphtage.listnode method)": [[1, "graphtage.ListNode.editable_dict"]], "editable_dict() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.editable_dict"]], "editable_dict() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.editable_dict"]], "editable_dict() (graphtage.nullnode method)": [[1, "graphtage.NullNode.editable_dict"]], "editable_dict() (graphtage.stringnode method)": [[1, "graphtage.StringNode.editable_dict"]], "editable_dict() (graphtage.treenode method)": [[1, "graphtage.TreeNode.editable_dict"]], "edited (graphtage.boolnode property)": [[1, "graphtage.BoolNode.edited"]], "edited (graphtage.containernode property)": [[1, "graphtage.ContainerNode.edited"]], "edited (graphtage.dictnode property)": [[1, "graphtage.DictNode.edited"]], "edited (graphtage.editedtreenode property)": [[1, "graphtage.EditedTreeNode.edited"]], "edited (graphtage.fixedkeydictnode property)": [[1, "graphtage.FixedKeyDictNode.edited"]], "edited (graphtage.floatnode property)": [[1, "graphtage.FloatNode.edited"]], "edited (graphtage.integernode property)": [[1, "graphtage.IntegerNode.edited"]], "edited (graphtage.keyvaluepairnode property)": [[1, "graphtage.KeyValuePairNode.edited"]], "edited (graphtage.leafnode property)": [[1, "graphtage.LeafNode.edited"]], "edited (graphtage.listnode property)": [[1, "graphtage.ListNode.edited"]], "edited (graphtage.mappingnode property)": [[1, "graphtage.MappingNode.edited"]], "edited (graphtage.multisetnode property)": [[1, "graphtage.MultiSetNode.edited"]], "edited (graphtage.nullnode property)": [[1, "graphtage.NullNode.edited"]], "edited (graphtage.stringnode property)": [[1, "graphtage.StringNode.edited"]], "edited (graphtage.treenode property)": [[1, "graphtage.TreeNode.edited"]], "edited_cost() (graphtage.editedtreenode method)": [[1, "graphtage.EditedTreeNode.edited_cost"]], "edited_type() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.edited_type"]], "edits() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.edits"]], "edits() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.edits"]], "edits() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.edits"]], "edits() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.edits"]], "edits() (graphtage.dictnode method)": [[1, "graphtage.DictNode.edits"]], "edits() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.edits"]], "edits() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.edits"]], "edits() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.edits"]], "edits() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.edits"]], "edits() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.edits"]], "edits() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.edits"]], "edits() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.edits"]], "edits() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.edits"]], "edits() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.edits"]], "edits() (graphtage.listnode method)": [[1, "graphtage.ListNode.edits"]], "edits() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.edits"]], "edits() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.edits"]], "edits() (graphtage.nullnode method)": [[1, "graphtage.NullNode.edits"]], "edits() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.edits"]], "edits() (graphtage.stringnode method)": [[1, "graphtage.StringNode.edits"]], "edits() (graphtage.treenode method)": [[1, "graphtage.TreeNode.edits"]], "escape() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.escape"]], "explode_edits() (in module graphtage)": [[1, "graphtage.explode_edits"]], "from_dict() (graphtage.dictnode class method)": [[1, "graphtage.DictNode.from_dict"]], "from_dict() (graphtage.fixedkeydictnode class method)": [[1, "graphtage.FixedKeyDictNode.from_dict"]], "from_dict() (graphtage.mappingnode class method)": [[1, "graphtage.MappingNode.from_dict"]], "from_node (graphtage.abstractcompoundedit attribute)": [[1, "graphtage.AbstractCompoundEdit.from_node"]], "from_node (graphtage.abstractedit attribute)": [[1, "graphtage.AbstractEdit.from_node"]], "from_node (graphtage.compoundedit attribute)": [[1, "graphtage.CompoundEdit.from_node"]], "from_node (graphtage.constantcostedit attribute)": [[1, "graphtage.ConstantCostEdit.from_node"]], "from_node (graphtage.edit attribute)": [[1, "graphtage.Edit.from_node"], [1, "id0"]], "from_node (graphtage.editcollection attribute)": [[1, "graphtage.EditCollection.from_node"]], "from_node (graphtage.editsequence attribute)": [[1, "graphtage.EditSequence.from_node"]], "from_node (graphtage.fixedkeydictnodeedit attribute)": [[1, "graphtage.FixedKeyDictNodeEdit.from_node"]], "from_node (graphtage.insert attribute)": [[1, "graphtage.Insert.from_node"]], "from_node (graphtage.keyvaluepairedit attribute)": [[1, "graphtage.KeyValuePairEdit.from_node"]], "from_node (graphtage.match attribute)": [[1, "graphtage.Match.from_node"]], "from_node (graphtage.possibleedits attribute)": [[1, "graphtage.PossibleEdits.from_node"]], "from_node (graphtage.remove attribute)": [[1, "graphtage.Remove.from_node"]], "from_node (graphtage.replace attribute)": [[1, "graphtage.Replace.from_node"]], "from_node (graphtage.stringedit attribute)": [[1, "graphtage.StringEdit.from_node"]], "get_all_edit_contexts() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.dictnode method)": [[1, "graphtage.DictNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.listnode method)": [[1, "graphtage.ListNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.nullnode method)": [[1, "graphtage.NullNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.stringnode method)": [[1, "graphtage.StringNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.treenode method)": [[1, "graphtage.TreeNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.get_all_edits"]], "get_all_edits() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.get_all_edits"]], "get_all_edits() (graphtage.dictnode method)": [[1, "graphtage.DictNode.get_all_edits"]], "get_all_edits() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.get_all_edits"]], "get_all_edits() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.get_all_edits"]], "get_all_edits() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.get_all_edits"]], "get_all_edits() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.get_all_edits"]], "get_all_edits() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.get_all_edits"]], "get_all_edits() (graphtage.listnode method)": [[1, "graphtage.ListNode.get_all_edits"]], "get_all_edits() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.get_all_edits"]], "get_all_edits() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.get_all_edits"]], "get_all_edits() (graphtage.nullnode method)": [[1, "graphtage.NullNode.get_all_edits"]], "get_all_edits() (graphtage.stringnode method)": [[1, "graphtage.StringNode.get_all_edits"]], "get_all_edits() (graphtage.treenode method)": [[1, "graphtage.TreeNode.get_all_edits"]], "get_default_formatter() (graphtage.filetype method)": [[1, "graphtage.Filetype.get_default_formatter"]], "get_filetype() (in module graphtage)": [[1, "graphtage.get_filetype"]], "get_formatter() (graphtage.graphtageformatter method)": [[1, "graphtage.GraphtageFormatter.get_formatter"]], "get_formatter() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.get_formatter"]], "graphtage": [[1, "module-graphtage"]], "has_non_zero_cost() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.edit method)": [[1, "graphtage.Edit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.insert method)": [[1, "graphtage.Insert.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.match method)": [[1, "graphtage.Match.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.remove method)": [[1, "graphtage.Remove.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.replace method)": [[1, "graphtage.Replace.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.has_non_zero_cost"]], "initial_bounds (graphtage.abstractcompoundedit attribute)": [[1, "graphtage.AbstractCompoundEdit.initial_bounds"]], "initial_bounds (graphtage.abstractedit attribute)": [[1, "graphtage.AbstractEdit.initial_bounds"]], "initial_bounds (graphtage.compoundedit attribute)": [[1, "graphtage.CompoundEdit.initial_bounds"]], "initial_bounds (graphtage.constantcostedit attribute)": [[1, "graphtage.ConstantCostEdit.initial_bounds"]], "initial_bounds (graphtage.edit attribute)": [[1, "graphtage.Edit.initial_bounds"], [1, "id1"]], "initial_bounds (graphtage.editcollection attribute)": [[1, "graphtage.EditCollection.initial_bounds"]], "initial_bounds (graphtage.editsequence attribute)": [[1, "graphtage.EditSequence.initial_bounds"]], "initial_bounds (graphtage.fixedkeydictnodeedit attribute)": [[1, "graphtage.FixedKeyDictNodeEdit.initial_bounds"]], "initial_bounds (graphtage.insert attribute)": [[1, "graphtage.Insert.initial_bounds"]], "initial_bounds (graphtage.keyvaluepairedit attribute)": [[1, "graphtage.KeyValuePairEdit.initial_bounds"]], "initial_bounds (graphtage.match attribute)": [[1, "graphtage.Match.initial_bounds"]], "initial_bounds (graphtage.possibleedits attribute)": [[1, "graphtage.PossibleEdits.initial_bounds"]], "initial_bounds (graphtage.remove attribute)": [[1, "graphtage.Remove.initial_bounds"]], "initial_bounds (graphtage.replace attribute)": [[1, "graphtage.Replace.initial_bounds"]], "initial_bounds (graphtage.stringedit attribute)": [[1, "graphtage.StringEdit.initial_bounds"]], "insert_into (graphtage.insert property)": [[1, "graphtage.Insert.insert_into"]], "is_complete() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.is_complete"]], "is_complete() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.is_complete"]], "is_complete() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.is_complete"]], "is_complete() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.is_complete"]], "is_complete() (graphtage.edit method)": [[1, "graphtage.Edit.is_complete"]], "is_complete() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.is_complete"]], "is_complete() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.is_complete"]], "is_complete() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.is_complete"]], "is_complete() (graphtage.insert method)": [[1, "graphtage.Insert.is_complete"]], "is_complete() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.is_complete"]], "is_complete() (graphtage.match method)": [[1, "graphtage.Match.is_complete"]], "is_complete() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.is_complete"]], "is_complete() (graphtage.remove method)": [[1, "graphtage.Remove.is_complete"]], "is_complete() (graphtage.replace method)": [[1, "graphtage.Replace.is_complete"]], "is_complete() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.is_complete"]], "is_leaf (graphtage.boolnode property)": [[1, "graphtage.BoolNode.is_leaf"]], "is_leaf (graphtage.containernode property)": [[1, "graphtage.ContainerNode.is_leaf"]], "is_leaf (graphtage.dictnode property)": [[1, "graphtage.DictNode.is_leaf"]], "is_leaf (graphtage.fixedkeydictnode property)": [[1, "graphtage.FixedKeyDictNode.is_leaf"]], "is_leaf (graphtage.floatnode property)": [[1, "graphtage.FloatNode.is_leaf"]], "is_leaf (graphtage.integernode property)": [[1, "graphtage.IntegerNode.is_leaf"]], "is_leaf (graphtage.keyvaluepairnode property)": [[1, "graphtage.KeyValuePairNode.is_leaf"]], "is_leaf (graphtage.leafnode property)": [[1, "graphtage.LeafNode.is_leaf"]], "is_leaf (graphtage.listnode property)": [[1, "graphtage.ListNode.is_leaf"]], "is_leaf (graphtage.mappingnode property)": [[1, "graphtage.MappingNode.is_leaf"]], "is_leaf (graphtage.multisetnode property)": [[1, "graphtage.MultiSetNode.is_leaf"]], "is_leaf (graphtage.nullnode property)": [[1, "graphtage.NullNode.is_leaf"]], "is_leaf (graphtage.stringnode property)": [[1, "graphtage.StringNode.is_leaf"]], "is_leaf (graphtage.treenode property)": [[1, "graphtage.TreeNode.is_leaf"]], "is_partial (graphtage.graphtageformatter attribute)": [[1, "graphtage.GraphtageFormatter.is_partial"]], "is_partial (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.is_partial"]], "is_quoted (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.is_quoted"]], "items() (graphtage.dictnode method)": [[1, "graphtage.DictNode.items"]], "items() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.items"]], "items() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.items"]], "make_edited() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.make_edited"]], "make_edited() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.make_edited"]], "make_edited() (graphtage.dictnode method)": [[1, "graphtage.DictNode.make_edited"]], "make_edited() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.make_edited"]], "make_edited() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.make_edited"]], "make_edited() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.make_edited"]], "make_edited() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.make_edited"]], "make_edited() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.make_edited"]], "make_edited() (graphtage.listnode method)": [[1, "graphtage.ListNode.make_edited"]], "make_edited() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.make_edited"]], "make_edited() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.make_edited"]], "make_edited() (graphtage.nullnode method)": [[1, "graphtage.NullNode.make_edited"]], "make_edited() (graphtage.stringnode method)": [[1, "graphtage.StringNode.make_edited"]], "make_edited() (graphtage.treenode method)": [[1, "graphtage.TreeNode.make_edited"]], "make_key_value_pair_node() (graphtage.dictnode class method)": [[1, "graphtage.DictNode.make_key_value_pair_node"]], "make_key_value_pair_node() (graphtage.fixedkeydictnode class method)": [[1, "graphtage.FixedKeyDictNode.make_key_value_pair_node"]], "make_key_value_pair_node() (graphtage.mappingnode class method)": [[1, "graphtage.MappingNode.make_key_value_pair_node"]], "module": [[1, "module-graphtage"], [2, "module-graphtage.ast"], [3, "module-graphtage.bounds"], [4, "module-graphtage.builder"], [5, "module-graphtage.constraints"], [6, "module-graphtage.csv"], [7, "module-graphtage.dataclasses"], [8, "module-graphtage.debug"], [9, "module-graphtage.expressions"], [10, "module-graphtage.fibonacci"], [11, "module-graphtage.formatter"], [12, "module-graphtage.json"], [13, "module-graphtage.levenshtein"], [14, "module-graphtage.matching"], [15, "module-graphtage.multiset"], [16, "module-graphtage.object_set"], [17, "module-graphtage.pickle"], [18, "module-graphtage.plist"], [19, "module-graphtage.printer"], [20, "module-graphtage.progress"], [21, "module-graphtage.pydiff"], [22, "module-graphtage.search"], [23, "module-graphtage.sequences"], [24, "module-graphtage.utils"], [25, "module-graphtage.version"], [26, "module-graphtage.xml"], [27, "module-graphtage.yaml"]], "mro() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher.mro"]], "mro() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.mro"]], "on_diff() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.on_diff"]], "on_diff() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.on_diff"]], "on_diff() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.on_diff"]], "on_diff() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.on_diff"]], "on_diff() (graphtage.edit method)": [[1, "graphtage.Edit.on_diff"]], "on_diff() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.on_diff"]], "on_diff() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.on_diff"]], "on_diff() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.on_diff"]], "on_diff() (graphtage.insert method)": [[1, "graphtage.Insert.on_diff"]], "on_diff() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.on_diff"]], "on_diff() (graphtage.match method)": [[1, "graphtage.Match.on_diff"]], "on_diff() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.on_diff"]], "on_diff() (graphtage.remove method)": [[1, "graphtage.Remove.on_diff"]], "on_diff() (graphtage.replace method)": [[1, "graphtage.Replace.on_diff"]], "on_diff() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.on_diff"]], "parent (graphtage.boolnode property)": [[1, "graphtage.BoolNode.parent"]], "parent (graphtage.containernode property)": [[1, "graphtage.ContainerNode.parent"]], "parent (graphtage.dictnode property)": [[1, "graphtage.DictNode.parent"]], "parent (graphtage.fixedkeydictnode property)": [[1, "graphtage.FixedKeyDictNode.parent"]], "parent (graphtage.floatnode property)": [[1, "graphtage.FloatNode.parent"]], "parent (graphtage.graphtageformatter attribute)": [[1, "graphtage.GraphtageFormatter.parent"]], "parent (graphtage.integernode property)": [[1, "graphtage.IntegerNode.parent"]], "parent (graphtage.keyvaluepairnode property)": [[1, "graphtage.KeyValuePairNode.parent"]], "parent (graphtage.leafnode property)": [[1, "graphtage.LeafNode.parent"]], "parent (graphtage.listnode property)": [[1, "graphtage.ListNode.parent"]], "parent (graphtage.mappingnode property)": [[1, "graphtage.MappingNode.parent"]], "parent (graphtage.multisetnode property)": [[1, "graphtage.MultiSetNode.parent"]], "parent (graphtage.nullnode property)": [[1, "graphtage.NullNode.parent"]], "parent (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.parent"]], "parent (graphtage.stringnode property)": [[1, "graphtage.StringNode.parent"]], "parent (graphtage.treenode property)": [[1, "graphtage.TreeNode.parent"]], "print() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.print"]], "print() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.print"]], "print() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.print"]], "print() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.print"]], "print() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.print"]], "print() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.print"]], "print() (graphtage.dictnode method)": [[1, "graphtage.DictNode.print"]], "print() (graphtage.edit method)": [[1, "graphtage.Edit.print"]], "print() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.print"]], "print() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.print"]], "print() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.print"]], "print() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.print"]], "print() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.print"]], "print() (graphtage.graphtageformatter method)": [[1, "graphtage.GraphtageFormatter.print"]], "print() (graphtage.insert method)": [[1, "graphtage.Insert.print"]], "print() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.print"]], "print() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.print"]], "print() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.print"]], "print() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.print"]], "print() (graphtage.listnode method)": [[1, "graphtage.ListNode.print"]], "print() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.print"]], "print() (graphtage.match method)": [[1, "graphtage.Match.print"]], "print() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.print"]], "print() (graphtage.nullnode method)": [[1, "graphtage.NullNode.print"]], "print() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.print"]], "print() (graphtage.remove method)": [[1, "graphtage.Remove.print"]], "print() (graphtage.replace method)": [[1, "graphtage.Replace.print"]], "print() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.print"]], "print() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.print"]], "print() (graphtage.stringnode method)": [[1, "graphtage.StringNode.print"]], "print() (graphtage.treenode method)": [[1, "graphtage.TreeNode.print"]], "print_stringedit() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.print_StringNode"]], "print_parent_context() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.print_parent_context"]], "print_parent_context() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.print_parent_context"]], "print_parent_context() (graphtage.dictnode method)": [[1, "graphtage.DictNode.print_parent_context"]], "print_parent_context() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.print_parent_context"]], "print_parent_context() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.print_parent_context"]], "print_parent_context() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.print_parent_context"]], "print_parent_context() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.print_parent_context"]], "print_parent_context() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.print_parent_context"]], "print_parent_context() (graphtage.listnode method)": [[1, "graphtage.ListNode.print_parent_context"]], "print_parent_context() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.print_parent_context"]], "print_parent_context() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.print_parent_context"]], "print_parent_context() (graphtage.nullnode method)": [[1, "graphtage.NullNode.print_parent_context"]], "print_parent_context() (graphtage.stringnode method)": [[1, "graphtage.StringNode.print_parent_context"]], "print_parent_context() (graphtage.treenode method)": [[1, "graphtage.TreeNode.print_parent_context"]], "register() (graphtage.filetypewatcher method)": [[1, "graphtage.FiletypeWatcher.register"]], "register() (graphtage.treenodemeta method)": [[1, "graphtage.TreeNodeMeta.register"]], "root (graphtage.graphtageformatter property)": [[1, "graphtage.GraphtageFormatter.root"]], "root (graphtage.stringformatter property)": [[1, "graphtage.StringFormatter.root"]], "sequence (graphtage.fixedkeydictnodeedit property)": [[1, "graphtage.FixedKeyDictNodeEdit.sequence"]], "string_edit_distance() (in module graphtage)": [[1, "graphtage.string_edit_distance"]], "sub_format_types (graphtage.graphtageformatter attribute)": [[1, "graphtage.GraphtageFormatter.sub_format_types"]], "sub_format_types (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.sub_format_types"]], "sub_formatters (graphtage.graphtageformatter attribute)": [[1, "graphtage.GraphtageFormatter.sub_formatters"]], "sub_formatters (graphtage.stringformatter attribute)": [[1, "graphtage.StringFormatter.sub_formatters"]], "tighten_bounds() (graphtage.abstractcompoundedit method)": [[1, "graphtage.AbstractCompoundEdit.tighten_bounds"]], "tighten_bounds() (graphtage.abstractedit method)": [[1, "graphtage.AbstractEdit.tighten_bounds"]], "tighten_bounds() (graphtage.compoundedit method)": [[1, "graphtage.CompoundEdit.tighten_bounds"]], "tighten_bounds() (graphtage.constantcostedit method)": [[1, "graphtage.ConstantCostEdit.tighten_bounds"]], "tighten_bounds() (graphtage.edit method)": [[1, "graphtage.Edit.tighten_bounds"]], "tighten_bounds() (graphtage.editcollection method)": [[1, "graphtage.EditCollection.tighten_bounds"]], "tighten_bounds() (graphtage.editsequence method)": [[1, "graphtage.EditSequence.tighten_bounds"]], "tighten_bounds() (graphtage.fixedkeydictnodeedit method)": [[1, "graphtage.FixedKeyDictNodeEdit.tighten_bounds"]], "tighten_bounds() (graphtage.insert method)": [[1, "graphtage.Insert.tighten_bounds"]], "tighten_bounds() (graphtage.keyvaluepairedit method)": [[1, "graphtage.KeyValuePairEdit.tighten_bounds"]], "tighten_bounds() (graphtage.match method)": [[1, "graphtage.Match.tighten_bounds"]], "tighten_bounds() (graphtage.possibleedits method)": [[1, "graphtage.PossibleEdits.tighten_bounds"]], "tighten_bounds() (graphtage.remove method)": [[1, "graphtage.Remove.tighten_bounds"]], "tighten_bounds() (graphtage.replace method)": [[1, "graphtage.Replace.tighten_bounds"]], "tighten_bounds() (graphtage.stringedit method)": [[1, "graphtage.StringEdit.tighten_bounds"]], "to_insert (graphtage.insert property)": [[1, "graphtage.Insert.to_insert"]], "to_obj() (graphtage.boolnode method)": [[1, "graphtage.BoolNode.to_obj"]], "to_obj() (graphtage.containernode method)": [[1, "graphtage.ContainerNode.to_obj"]], "to_obj() (graphtage.dictnode method)": [[1, "graphtage.DictNode.to_obj"]], "to_obj() (graphtage.fixedkeydictnode method)": [[1, "graphtage.FixedKeyDictNode.to_obj"]], "to_obj() (graphtage.floatnode method)": [[1, "graphtage.FloatNode.to_obj"]], "to_obj() (graphtage.integernode method)": [[1, "graphtage.IntegerNode.to_obj"]], "to_obj() (graphtage.keyvaluepairnode method)": [[1, "graphtage.KeyValuePairNode.to_obj"]], "to_obj() (graphtage.leafnode method)": [[1, "graphtage.LeafNode.to_obj"]], "to_obj() (graphtage.listnode method)": [[1, "graphtage.ListNode.to_obj"]], "to_obj() (graphtage.mappingnode method)": [[1, "graphtage.MappingNode.to_obj"]], "to_obj() (graphtage.multisetnode method)": [[1, "graphtage.MultiSetNode.to_obj"]], "to_obj() (graphtage.nullnode method)": [[1, "graphtage.NullNode.to_obj"]], "to_obj() (graphtage.stringnode method)": [[1, "graphtage.StringNode.to_obj"]], "to_obj() (graphtage.treenode method)": [[1, "graphtage.TreeNode.to_obj"]], "total_size (graphtage.boolnode property)": [[1, "graphtage.BoolNode.total_size"]], "total_size (graphtage.containernode property)": [[1, "graphtage.ContainerNode.total_size"]], "total_size (graphtage.dictnode property)": [[1, "graphtage.DictNode.total_size"]], "total_size (graphtage.fixedkeydictnode property)": [[1, "graphtage.FixedKeyDictNode.total_size"]], "total_size (graphtage.floatnode property)": [[1, "graphtage.FloatNode.total_size"]], "total_size (graphtage.integernode property)": [[1, "graphtage.IntegerNode.total_size"]], "total_size (graphtage.keyvaluepairnode property)": [[1, "graphtage.KeyValuePairNode.total_size"]], "total_size (graphtage.leafnode property)": [[1, "graphtage.LeafNode.total_size"]], "total_size (graphtage.listnode property)": [[1, "graphtage.ListNode.total_size"]], "total_size (graphtage.mappingnode property)": [[1, "graphtage.MappingNode.total_size"]], "total_size (graphtage.multisetnode property)": [[1, "graphtage.MultiSetNode.total_size"]], "total_size (graphtage.nullnode property)": [[1, "graphtage.NullNode.total_size"]], "total_size (graphtage.stringnode property)": [[1, "graphtage.StringNode.total_size"]], "total_size (graphtage.treenode property)": [[1, "graphtage.TreeNode.total_size"]], "valid (graphtage.abstractcompoundedit property)": [[1, "graphtage.AbstractCompoundEdit.valid"]], "valid (graphtage.abstractedit property)": [[1, "graphtage.AbstractEdit.valid"]], "valid (graphtage.compoundedit property)": [[1, "graphtage.CompoundEdit.valid"]], "valid (graphtage.constantcostedit property)": [[1, "graphtage.ConstantCostEdit.valid"]], "valid (graphtage.edit property)": [[1, "graphtage.Edit.valid"]], "valid (graphtage.editcollection property)": [[1, "graphtage.EditCollection.valid"]], "valid (graphtage.editsequence property)": [[1, "graphtage.EditSequence.valid"]], "valid (graphtage.fixedkeydictnodeedit property)": [[1, "graphtage.FixedKeyDictNodeEdit.valid"]], "valid (graphtage.insert property)": [[1, "graphtage.Insert.valid"]], "valid (graphtage.keyvaluepairedit property)": [[1, "graphtage.KeyValuePairEdit.valid"]], "valid (graphtage.match property)": [[1, "graphtage.Match.valid"]], "valid (graphtage.possibleedits property)": [[1, "graphtage.PossibleEdits.valid"]], "valid (graphtage.remove property)": [[1, "graphtage.Remove.valid"]], "valid (graphtage.replace property)": [[1, "graphtage.Replace.valid"]], "valid (graphtage.stringedit property)": [[1, "graphtage.StringEdit.valid"]], "write_char() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.write_char"]], "write_end_quote() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.write_end_quote"]], "write_start_quote() (graphtage.stringformatter method)": [[1, "graphtage.StringFormatter.write_start_quote"]], "assignment (class in graphtage.ast)": [[2, "graphtage.ast.Assignment"]], "call (class in graphtage.ast)": [[2, "graphtage.ast.Call"]], "callarguments (class in graphtage.ast)": [[2, "graphtage.ast.CallArguments"]], "callkeywords (class in graphtage.ast)": [[2, "graphtage.ast.CallKeywords"]], "import (class in graphtage.ast)": [[2, "graphtage.ast.Import"]], "keywordargument (class in graphtage.ast)": [[2, "graphtage.ast.KeywordArgument"]], "module (class in graphtage.ast)": [[2, "graphtage.ast.Module"]], "subscript (class in graphtage.ast)": [[2, "graphtage.ast.Subscript"]], "__contains__() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.__contains__"]], "__eq__() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.__eq__"]], "__getitem__() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.__getitem__"]], "__init__() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.__init__"]], "__init__() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.__init__"]], "__init__() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.__init__"]], "__init__() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.__init__"]], "__init__() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.__init__"]], "__init__() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.__init__"]], "__init__() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.__init__"]], "__init__() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.__init__"]], "__iter__() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.__iter__"]], "__iter__() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.__iter__"]], "__len__() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.__len__"]], "__len__() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.__len__"]], "__lt__() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.__lt__"]], "add_edit_modifier() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.add_edit_modifier"]], "add_edit_modifier() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.add_edit_modifier"]], "all_children_are_leaves() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.all_children_are_leaves"]], "args (graphtage.ast.call attribute)": [[2, "graphtage.ast.Call.args"]], "calculate_total_size() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.calculate_total_size"]], "calculate_total_size() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.calculate_total_size"]], "calculate_total_size() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.calculate_total_size"]], "calculate_total_size() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.calculate_total_size"]], "calculate_total_size() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.calculate_total_size"]], "calculate_total_size() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.calculate_total_size"]], "calculate_total_size() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.calculate_total_size"]], "calculate_total_size() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.calculate_total_size"]], "children() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.children"]], "children() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.children"]], "children() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.children"]], "children() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.children"]], "children() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.children"]], "children() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.children"]], "children() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.children"]], "children() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.children"]], "container_type (graphtage.ast.callarguments property)": [[2, "graphtage.ast.CallArguments.container_type"]], "container_type (graphtage.ast.callkeywords property)": [[2, "graphtage.ast.CallKeywords.container_type"]], "container_type (graphtage.ast.module property)": [[2, "graphtage.ast.Module.container_type"]], "copy() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.copy"]], "copy() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.copy"]], "copy() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.copy"]], "copy() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.copy"]], "copy() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.copy"]], "copy() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.copy"]], "copy() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.copy"]], "copy() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.copy"]], "copy_from() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.copy_from"]], "copy_from() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.copy_from"]], "copy_from() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.copy_from"]], "copy_from() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.copy_from"]], "copy_from() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.copy_from"]], "copy_from() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.copy_from"]], "copy_from() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.copy_from"]], "copy_from() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.copy_from"]], "dfs() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.dfs"]], "dfs() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.dfs"]], "dfs() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.dfs"]], "dfs() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.dfs"]], "dfs() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.dfs"]], "dfs() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.dfs"]], "dfs() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.dfs"]], "dfs() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.dfs"]], "diff() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.diff"]], "diff() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.diff"]], "diff() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.diff"]], "diff() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.diff"]], "diff() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.diff"]], "diff() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.diff"]], "diff() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.diff"]], "diff() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.diff"]], "editable_dict() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.editable_dict"]], "editable_dict() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.editable_dict"]], "editable_dict() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.editable_dict"]], "editable_dict() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.editable_dict"]], "editable_dict() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.editable_dict"]], "editable_dict() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.editable_dict"]], "editable_dict() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.editable_dict"]], "editable_dict() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.editable_dict"]], "edited (graphtage.ast.assignment property)": [[2, "graphtage.ast.Assignment.edited"]], "edited (graphtage.ast.call property)": [[2, "graphtage.ast.Call.edited"]], "edited (graphtage.ast.callarguments property)": [[2, "graphtage.ast.CallArguments.edited"]], "edited (graphtage.ast.callkeywords property)": [[2, "graphtage.ast.CallKeywords.edited"]], "edited (graphtage.ast.import property)": [[2, "graphtage.ast.Import.edited"]], "edited (graphtage.ast.keywordargument property)": [[2, "graphtage.ast.KeywordArgument.edited"]], "edited (graphtage.ast.module property)": [[2, "graphtage.ast.Module.edited"]], "edited (graphtage.ast.subscript property)": [[2, "graphtage.ast.Subscript.edited"]], "edits() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.edits"]], "edits() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.edits"]], "edits() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.edits"]], "edits() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.edits"]], "edits() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.edits"]], "edits() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.edits"]], "edits() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.edits"]], "edits() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.edits"]], "from_dict() (graphtage.ast.callkeywords class method)": [[2, "graphtage.ast.CallKeywords.from_dict"]], "from_name (graphtage.ast.import attribute)": [[2, "graphtage.ast.Import.from_name"]], "func (graphtage.ast.call attribute)": [[2, "graphtage.ast.Call.func"]], "get_all_edit_contexts() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.get_all_edit_contexts"]], "get_all_edits() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.get_all_edits"]], "get_all_edits() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.get_all_edits"]], "get_all_edits() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.get_all_edits"]], "get_all_edits() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.get_all_edits"]], "get_all_edits() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.get_all_edits"]], "get_all_edits() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.get_all_edits"]], "get_all_edits() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.get_all_edits"]], "get_all_edits() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.get_all_edits"]], "graphtage.ast": [[2, "module-graphtage.ast"]], "is_leaf (graphtage.ast.assignment property)": [[2, "graphtage.ast.Assignment.is_leaf"]], "is_leaf (graphtage.ast.call property)": [[2, "graphtage.ast.Call.is_leaf"]], "is_leaf (graphtage.ast.callarguments property)": [[2, "graphtage.ast.CallArguments.is_leaf"]], "is_leaf (graphtage.ast.callkeywords property)": [[2, "graphtage.ast.CallKeywords.is_leaf"]], "is_leaf (graphtage.ast.import property)": [[2, "graphtage.ast.Import.is_leaf"]], "is_leaf (graphtage.ast.keywordargument property)": [[2, "graphtage.ast.KeywordArgument.is_leaf"]], "is_leaf (graphtage.ast.module property)": [[2, "graphtage.ast.Module.is_leaf"]], "is_leaf (graphtage.ast.subscript property)": [[2, "graphtage.ast.Subscript.is_leaf"]], "items() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.items"]], "items() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.items"]], "items() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.items"]], "items() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.items"]], "items() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.items"]], "kwargs (graphtage.ast.call attribute)": [[2, "graphtage.ast.Call.kwargs"]], "make_edited() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.make_edited"]], "make_edited() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.make_edited"]], "make_edited() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.make_edited"]], "make_edited() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.make_edited"]], "make_edited() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.make_edited"]], "make_edited() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.make_edited"]], "make_edited() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.make_edited"]], "make_edited() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.make_edited"]], "make_key_value_pair_node() (graphtage.ast.callkeywords class method)": [[2, "graphtage.ast.CallKeywords.make_key_value_pair_node"]], "names (graphtage.ast.import attribute)": [[2, "graphtage.ast.Import.names"]], "parent (graphtage.ast.assignment property)": [[2, "graphtage.ast.Assignment.parent"]], "parent (graphtage.ast.call property)": [[2, "graphtage.ast.Call.parent"]], "parent (graphtage.ast.callarguments property)": [[2, "graphtage.ast.CallArguments.parent"]], "parent (graphtage.ast.callkeywords property)": [[2, "graphtage.ast.CallKeywords.parent"]], "parent (graphtage.ast.import property)": [[2, "graphtage.ast.Import.parent"]], "parent (graphtage.ast.keywordargument property)": [[2, "graphtage.ast.KeywordArgument.parent"]], "parent (graphtage.ast.module property)": [[2, "graphtage.ast.Module.parent"]], "parent (graphtage.ast.subscript property)": [[2, "graphtage.ast.Subscript.parent"]], "post_init() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.post_init"]], "post_init() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.post_init"]], "post_init() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.post_init"]], "post_init() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.post_init"]], "print() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.print"]], "print() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.print"]], "print() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.print"]], "print() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.print"]], "print() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.print"]], "print() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.print"]], "print() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.print"]], "print() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.print"]], "print_parent_context() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.print_parent_context"]], "print_parent_context() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.print_parent_context"]], "print_parent_context() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.print_parent_context"]], "print_parent_context() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.print_parent_context"]], "print_parent_context() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.print_parent_context"]], "print_parent_context() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.print_parent_context"]], "print_parent_context() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.print_parent_context"]], "print_parent_context() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.print_parent_context"]], "slice (graphtage.ast.subscript attribute)": [[2, "graphtage.ast.Subscript.slice"]], "targets (graphtage.ast.assignment attribute)": [[2, "graphtage.ast.Assignment.targets"]], "to_obj() (graphtage.ast.assignment method)": [[2, "graphtage.ast.Assignment.to_obj"]], "to_obj() (graphtage.ast.call method)": [[2, "graphtage.ast.Call.to_obj"]], "to_obj() (graphtage.ast.callarguments method)": [[2, "graphtage.ast.CallArguments.to_obj"]], "to_obj() (graphtage.ast.callkeywords method)": [[2, "graphtage.ast.CallKeywords.to_obj"]], "to_obj() (graphtage.ast.import method)": [[2, "graphtage.ast.Import.to_obj"]], "to_obj() (graphtage.ast.keywordargument method)": [[2, "graphtage.ast.KeywordArgument.to_obj"]], "to_obj() (graphtage.ast.module method)": [[2, "graphtage.ast.Module.to_obj"]], "to_obj() (graphtage.ast.subscript method)": [[2, "graphtage.ast.Subscript.to_obj"]], "total_size (graphtage.ast.assignment property)": [[2, "graphtage.ast.Assignment.total_size"]], "total_size (graphtage.ast.call property)": [[2, "graphtage.ast.Call.total_size"]], "total_size (graphtage.ast.callarguments property)": [[2, "graphtage.ast.CallArguments.total_size"]], "total_size (graphtage.ast.callkeywords property)": [[2, "graphtage.ast.CallKeywords.total_size"]], "total_size (graphtage.ast.import property)": [[2, "graphtage.ast.Import.total_size"]], "total_size (graphtage.ast.keywordargument property)": [[2, "graphtage.ast.KeywordArgument.total_size"]], "total_size (graphtage.ast.module property)": [[2, "graphtage.ast.Module.total_size"]], "total_size (graphtage.ast.subscript property)": [[2, "graphtage.ast.Subscript.total_size"]], "value (graphtage.ast.assignment attribute)": [[2, "graphtage.ast.Assignment.value"]], "value (graphtage.ast.subscript attribute)": [[2, "graphtage.ast.Subscript.value"]], "bounded (class in graphtage.bounds)": [[3, "graphtage.bounds.Bounded"]], "boundedcomparator (class in graphtage.bounds)": [[3, "graphtage.bounds.BoundedComparator"]], "constantbound (class in graphtage.bounds)": [[3, "graphtage.bounds.ConstantBound"]], "infinity (class in graphtage.bounds)": [[3, "graphtage.bounds.Infinity"]], "negative_infinity (in module graphtage.bounds)": [[3, "graphtage.bounds.NEGATIVE_INFINITY"]], "positive_infinity (in module graphtage.bounds)": [[3, "graphtage.bounds.POSITIVE_INFINITY"]], "range (class in graphtage.bounds)": [[3, "graphtage.bounds.Range"]], "__init__() (graphtage.bounds.bounded method)": [[3, "graphtage.bounds.Bounded.__init__"]], "__init__() (graphtage.bounds.boundedcomparator method)": [[3, "graphtage.bounds.BoundedComparator.__init__"]], "__init__() (graphtage.bounds.constantbound method)": [[3, "graphtage.bounds.ConstantBound.__init__"]], "__init__() (graphtage.bounds.infinity method)": [[3, "graphtage.bounds.Infinity.__init__"]], "__init__() (graphtage.bounds.range method)": [[3, "graphtage.bounds.Range.__init__"]], "__lt__() (graphtage.bounds.boundedcomparator method)": [[3, "graphtage.bounds.BoundedComparator.__lt__"]], "bounded (graphtage.bounds.boundedcomparator attribute)": [[3, "graphtage.bounds.BoundedComparator.bounded"]], "bounds() (graphtage.bounds.bounded method)": [[3, "graphtage.bounds.Bounded.bounds"]], "bounds() (graphtage.bounds.constantbound method)": [[3, "graphtage.bounds.ConstantBound.bounds"]], "definitive() (graphtage.bounds.range method)": [[3, "graphtage.bounds.Range.definitive"]], "dominates() (graphtage.bounds.range method)": [[3, "graphtage.bounds.Range.dominates"]], "finite (graphtage.bounds.range property)": [[3, "graphtage.bounds.Range.finite"]], "graphtage.bounds": [[3, "module-graphtage.bounds"]], "intersect() (graphtage.bounds.range method)": [[3, "graphtage.bounds.Range.intersect"]], "lower_bound (graphtage.bounds.range attribute)": [[3, "graphtage.bounds.Range.lower_bound"]], "make_distinct() (in module graphtage.bounds)": [[3, "graphtage.bounds.make_distinct"]], "min_bounded() (in module graphtage.bounds)": [[3, "graphtage.bounds.min_bounded"]], "positive (graphtage.bounds.infinity property)": [[3, "graphtage.bounds.Infinity.positive"]], "repeat_until_tightened() (in module graphtage.bounds)": [[3, "graphtage.bounds.repeat_until_tightened"]], "sort() (in module graphtage.bounds)": [[3, "graphtage.bounds.sort"]], "tighten_bounds() (graphtage.bounds.bounded method)": [[3, "graphtage.bounds.Bounded.tighten_bounds"]], "tighten_bounds() (graphtage.bounds.constantbound method)": [[3, "graphtage.bounds.ConstantBound.tighten_bounds"]], "to_interval() (graphtage.bounds.range method)": [[3, "graphtage.bounds.Range.to_interval"]], "upper_bound (graphtage.bounds.range attribute)": [[3, "graphtage.bounds.Range.upper_bound"]], "builders (graphtage.builder.basicbuilder attribute)": [[4, "graphtage.builder.BasicBuilder.BUILDERS"]], "builders (graphtage.builder.builder attribute)": [[4, "graphtage.builder.Builder.BUILDERS"]], "basicbuilder (class in graphtage.builder)": [[4, "graphtage.builder.BasicBuilder"]], "builder (class in graphtage.builder)": [[4, "graphtage.builder.Builder"]], "cyclicreference (class in graphtage.builder)": [[4, "graphtage.builder.CyclicReference"]], "expanders (graphtage.builder.basicbuilder attribute)": [[4, "graphtage.builder.BasicBuilder.EXPANDERS"]], "expanders (graphtage.builder.builder attribute)": [[4, "graphtage.builder.Builder.EXPANDERS"]], "__init__() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.__init__"]], "__init__() (graphtage.builder.builder method)": [[4, "graphtage.builder.Builder.__init__"]], "__init__() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.__init__"]], "_resolve() (graphtage.builder.basicbuilder class method)": [[4, "graphtage.builder.BasicBuilder._resolve"]], "_resolve() (graphtage.builder.builder class method)": [[4, "graphtage.builder.Builder._resolve"]], "add_edit_modifier() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.add_edit_modifier"]], "build() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.build"]], "build() (graphtage.builder.builder method)": [[4, "graphtage.builder.Builder.build"]], "build_bool() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.build_bool"]], "build_dict() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.build_dict"]], "build_float() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.build_float"]], "build_int() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.build_int"]], "build_list() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.build_list"]], "build_none() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.build_none"]], "build_set() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.build_set"]], "build_str() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.build_str"]], "build_tree() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.build_tree"]], "build_tree() (graphtage.builder.builder method)": [[4, "graphtage.builder.Builder.build_tree"]], "builder() (graphtage.builder.basicbuilder static method)": [[4, "graphtage.builder.BasicBuilder.builder"]], "builder() (graphtage.builder.builder static method)": [[4, "graphtage.builder.Builder.builder"]], "calculate_total_size() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.calculate_total_size"]], "children() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.children"]], "copy() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.copy"]], "copy_from() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.copy_from"]], "default_builder() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.default_builder"]], "default_builder() (graphtage.builder.builder method)": [[4, "graphtage.builder.Builder.default_builder"]], "default_expander() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.default_expander"]], "default_expander() (graphtage.builder.builder method)": [[4, "graphtage.builder.Builder.default_expander"]], "dfs() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.dfs"]], "diff() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.diff"]], "editable_dict() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.editable_dict"]], "edited (graphtage.builder.cyclicreference property)": [[4, "graphtage.builder.CyclicReference.edited"]], "edits() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.edits"]], "expand() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.expand"]], "expand() (graphtage.builder.builder method)": [[4, "graphtage.builder.Builder.expand"]], "expand_dict() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.expand_dict"]], "expand_list() (graphtage.builder.basicbuilder method)": [[4, "graphtage.builder.BasicBuilder.expand_list"]], "expander() (graphtage.builder.basicbuilder static method)": [[4, "graphtage.builder.BasicBuilder.expander"]], "expander() (graphtage.builder.builder static method)": [[4, "graphtage.builder.Builder.expander"]], "get_all_edit_contexts() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.get_all_edit_contexts"]], "get_all_edits() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.get_all_edits"]], "graphtage.builder": [[4, "module-graphtage.builder"]], "is_leaf (graphtage.builder.cyclicreference property)": [[4, "graphtage.builder.CyclicReference.is_leaf"]], "make_edited() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.make_edited"]], "parent (graphtage.builder.cyclicreference property)": [[4, "graphtage.builder.CyclicReference.parent"]], "print() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.print"]], "print_parent_context() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.print_parent_context"]], "resolve_builder() (graphtage.builder.basicbuilder class method)": [[4, "graphtage.builder.BasicBuilder.resolve_builder"]], "resolve_builder() (graphtage.builder.builder class method)": [[4, "graphtage.builder.Builder.resolve_builder"]], "resolve_expander() (graphtage.builder.basicbuilder class method)": [[4, "graphtage.builder.BasicBuilder.resolve_expander"]], "resolve_expander() (graphtage.builder.builder class method)": [[4, "graphtage.builder.Builder.resolve_expander"]], "to_obj() (graphtage.builder.cyclicreference method)": [[4, "graphtage.builder.CyclicReference.to_obj"]], "total_size (graphtage.builder.cyclicreference property)": [[4, "graphtage.builder.CyclicReference.total_size"]], "conditionalmatcher (class in graphtage.constraints)": [[5, "graphtage.constraints.ConditionalMatcher"]], "matchif (class in graphtage.constraints)": [[5, "graphtage.constraints.MatchIf"]], "matchunless (class in graphtage.constraints)": [[5, "graphtage.constraints.MatchUnless"]], "__init__() (graphtage.constraints.conditionalmatcher method)": [[5, "graphtage.constraints.ConditionalMatcher.__init__"]], "__init__() (graphtage.constraints.matchif method)": [[5, "graphtage.constraints.MatchIf.__init__"]], "__init__() (graphtage.constraints.matchunless method)": [[5, "graphtage.constraints.MatchUnless.__init__"]], "apply() (graphtage.constraints.conditionalmatcher class method)": [[5, "graphtage.constraints.ConditionalMatcher.apply"]], "apply() (graphtage.constraints.matchif class method)": [[5, "graphtage.constraints.MatchIf.apply"]], "apply() (graphtage.constraints.matchunless class method)": [[5, "graphtage.constraints.MatchUnless.apply"]], "graphtage.constraints": [[5, "module-graphtage.constraints"]], "csv (class in graphtage.csv)": [[6, "graphtage.csv.CSV"]], "csvformatter (class in graphtage.csv)": [[6, "graphtage.csv.CSVFormatter"]], "csvnode (class in graphtage.csv)": [[6, "graphtage.csv.CSVNode"]], "csvrow (class in graphtage.csv)": [[6, "graphtage.csv.CSVRow"]], "csvrowformatter (class in graphtage.csv)": [[6, "graphtage.csv.CSVRowFormatter"]], "csvrows (class in graphtage.csv)": [[6, "graphtage.csv.CSVRows"]], "default_instance (graphtage.csv.csvformatter attribute)": [[6, "graphtage.csv.CSVFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.csv.csvrowformatter attribute)": [[6, "graphtage.csv.CSVRowFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.csv.csvrows attribute)": [[6, "graphtage.csv.CSVRows.DEFAULT_INSTANCE"]], "__init__() (graphtage.csv.csv method)": [[6, "graphtage.csv.CSV.__init__"]], "__init__() (graphtage.csv.csvformatter method)": [[6, "graphtage.csv.CSVFormatter.__init__"]], "__init__() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.__init__"]], "__init__() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.__init__"]], "__init__() (graphtage.csv.csvrowformatter method)": [[6, "graphtage.csv.CSVRowFormatter.__init__"]], "__init__() (graphtage.csv.csvrows method)": [[6, "graphtage.csv.CSVRows.__init__"]], "__iter__() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.__iter__"]], "__iter__() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.__iter__"]], "__len__() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.__len__"]], "__len__() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.__len__"]], "__new__() (graphtage.csv.csvformatter static method)": [[6, "graphtage.csv.CSVFormatter.__new__"]], "__new__() (graphtage.csv.csvrowformatter static method)": [[6, "graphtage.csv.CSVRowFormatter.__new__"]], "__new__() (graphtage.csv.csvrows static method)": [[6, "graphtage.csv.CSVRows.__new__"]], "add_edit_modifier() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.add_edit_modifier"]], "add_edit_modifier() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.add_edit_modifier"]], "all_children_are_leaves() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.all_children_are_leaves"]], "build_tree() (graphtage.csv.csv method)": [[6, "graphtage.csv.CSV.build_tree"]], "build_tree() (in module graphtage.csv)": [[6, "graphtage.csv.build_tree"]], "build_tree_handling_errors() (graphtage.csv.csv method)": [[6, "graphtage.csv.CSV.build_tree_handling_errors"]], "calculate_total_size() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.calculate_total_size"]], "calculate_total_size() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.calculate_total_size"]], "children() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.children"]], "children() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.children"]], "container_type (graphtage.csv.csvnode property)": [[6, "graphtage.csv.CSVNode.container_type"]], "container_type (graphtage.csv.csvrow property)": [[6, "graphtage.csv.CSVRow.container_type"]], "copy() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.copy"]], "copy() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.copy"]], "copy_from() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.copy_from"]], "copy_from() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.copy_from"]], "default_instance (graphtage.csv.csv attribute)": [[6, "graphtage.csv.CSV.default_instance"]], "dfs() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.dfs"]], "dfs() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.dfs"]], "diff() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.diff"]], "diff() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.diff"]], "edit_print() (graphtage.csv.csvrowformatter method)": [[6, "graphtage.csv.CSVRowFormatter.edit_print"]], "edit_print() (graphtage.csv.csvrows method)": [[6, "graphtage.csv.CSVRows.edit_print"]], "editable_dict() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.editable_dict"]], "editable_dict() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.editable_dict"]], "edited (graphtage.csv.csvnode property)": [[6, "graphtage.csv.CSVNode.edited"]], "edited (graphtage.csv.csvrow property)": [[6, "graphtage.csv.CSVRow.edited"]], "edits() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.edits"]], "edits() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.edits"]], "get_all_edit_contexts() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.get_all_edit_contexts"]], "get_all_edits() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.get_all_edits"]], "get_all_edits() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.get_all_edits"]], "get_default_formatter() (graphtage.csv.csv method)": [[6, "graphtage.csv.CSV.get_default_formatter"]], "get_formatter() (graphtage.csv.csvformatter method)": [[6, "graphtage.csv.CSVFormatter.get_formatter"]], "get_formatter() (graphtage.csv.csvrowformatter method)": [[6, "graphtage.csv.CSVRowFormatter.get_formatter"]], "get_formatter() (graphtage.csv.csvrows method)": [[6, "graphtage.csv.CSVRows.get_formatter"]], "graphtage.csv": [[6, "module-graphtage.csv"]], "is_leaf (graphtage.csv.csvnode property)": [[6, "graphtage.csv.CSVNode.is_leaf"]], "is_leaf (graphtage.csv.csvrow property)": [[6, "graphtage.csv.CSVRow.is_leaf"]], "is_partial (graphtage.csv.csvformatter attribute)": [[6, "graphtage.csv.CSVFormatter.is_partial"]], "is_partial (graphtage.csv.csvrowformatter attribute)": [[6, "graphtage.csv.CSVRowFormatter.is_partial"]], "is_partial (graphtage.csv.csvrows attribute)": [[6, "graphtage.csv.CSVRows.is_partial"]], "item_newline() (graphtage.csv.csvrowformatter method)": [[6, "graphtage.csv.CSVRowFormatter.item_newline"]], "item_newline() (graphtage.csv.csvrows method)": [[6, "graphtage.csv.CSVRows.item_newline"]], "items_indent() (graphtage.csv.csvrowformatter method)": [[6, "graphtage.csv.CSVRowFormatter.items_indent"]], "items_indent() (graphtage.csv.csvrows method)": [[6, "graphtage.csv.CSVRows.items_indent"]], "make_edited() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.make_edited"]], "make_edited() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.make_edited"]], "parent (graphtage.csv.csvformatter attribute)": [[6, "graphtage.csv.CSVFormatter.parent"]], "parent (graphtage.csv.csvnode property)": [[6, "graphtage.csv.CSVNode.parent"]], "parent (graphtage.csv.csvrow property)": [[6, "graphtage.csv.CSVRow.parent"]], "parent (graphtage.csv.csvrowformatter attribute)": [[6, "graphtage.csv.CSVRowFormatter.parent"]], "parent (graphtage.csv.csvrows attribute)": [[6, "graphtage.csv.CSVRows.parent"]], "print() (graphtage.csv.csvformatter method)": [[6, "graphtage.csv.CSVFormatter.print"]], "print() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.print"]], "print() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.print"]], "print() (graphtage.csv.csvrowformatter method)": [[6, "graphtage.csv.CSVRowFormatter.print"]], "print() (graphtage.csv.csvrows method)": [[6, "graphtage.csv.CSVRows.print"]], "print_csvnode() (graphtage.csv.csvrows method)": [[6, "graphtage.csv.CSVRows.print_CSVNode"]], "print_csvrow() (graphtage.csv.csvrowformatter method)": [[6, "graphtage.csv.CSVRowFormatter.print_CSVRow"]], "print_leafnode() (graphtage.csv.csvformatter method)": [[6, "graphtage.csv.CSVFormatter.print_LeafNode"]], "print_sequencenode() (graphtage.csv.csvrowformatter method)": [[6, "graphtage.csv.CSVRowFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.csv.csvrows method)": [[6, "graphtage.csv.CSVRows.print_SequenceNode"]], "print_parent_context() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.print_parent_context"]], "print_parent_context() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.print_parent_context"]], "root (graphtage.csv.csvformatter property)": [[6, "graphtage.csv.CSVFormatter.root"]], "root (graphtage.csv.csvrowformatter property)": [[6, "graphtage.csv.CSVRowFormatter.root"]], "root (graphtage.csv.csvrows property)": [[6, "graphtage.csv.CSVRows.root"]], "sub_format_types (graphtage.csv.csvformatter attribute)": [[6, "graphtage.csv.CSVFormatter.sub_format_types"]], "sub_format_types (graphtage.csv.csvrowformatter attribute)": [[6, "graphtage.csv.CSVRowFormatter.sub_format_types"]], "sub_format_types (graphtage.csv.csvrows attribute)": [[6, "graphtage.csv.CSVRows.sub_format_types"]], "sub_formatters (graphtage.csv.csvformatter attribute)": [[6, "graphtage.csv.CSVFormatter.sub_formatters"]], "sub_formatters (graphtage.csv.csvrowformatter attribute)": [[6, "graphtage.csv.CSVRowFormatter.sub_formatters"]], "sub_formatters (graphtage.csv.csvrows attribute)": [[6, "graphtage.csv.CSVRows.sub_formatters"]], "to_obj() (graphtage.csv.csvnode method)": [[6, "graphtage.csv.CSVNode.to_obj"]], "to_obj() (graphtage.csv.csvrow method)": [[6, "graphtage.csv.CSVRow.to_obj"]], "total_size (graphtage.csv.csvnode property)": [[6, "graphtage.csv.CSVNode.total_size"]], "total_size (graphtage.csv.csvrow property)": [[6, "graphtage.csv.CSVRow.total_size"]], "dataclassedit (class in graphtage.dataclasses)": [[7, "graphtage.dataclasses.DataClassEdit"]], "dataclassnode (class in graphtage.dataclasses)": [[7, "graphtage.dataclasses.DataClassNode"]], "__init__() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit.__init__"]], "__init__() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.__init__"]], "__iter__() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit.__iter__"]], "__lt__() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit.__lt__"]], "_debug_tighten_bounds() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit._debug_tighten_bounds"]], "add_edit_modifier() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.add_edit_modifier"]], "all_children_are_leaves() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.all_children_are_leaves"]], "bounds() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit.bounds"]], "calculate_total_size() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.calculate_total_size"]], "children() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.children"]], "copy() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.copy"]], "copy_from() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.copy_from"]], "dfs() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.dfs"]], "diff() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.diff"]], "editable_dict() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.editable_dict"]], "edited (graphtage.dataclasses.dataclassnode property)": [[7, "graphtage.dataclasses.DataClassNode.edited"]], "edits() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit.edits"]], "edits() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.edits"]], "from_node (graphtage.dataclasses.dataclassedit attribute)": [[7, "graphtage.dataclasses.DataClassEdit.from_node"]], "get_all_edit_contexts() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.get_all_edits"]], "graphtage.dataclasses": [[7, "module-graphtage.dataclasses"]], "has_non_zero_cost() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit.has_non_zero_cost"]], "initial_bounds (graphtage.dataclasses.dataclassedit attribute)": [[7, "graphtage.dataclasses.DataClassEdit.initial_bounds"]], "is_complete() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit.is_complete"]], "is_leaf (graphtage.dataclasses.dataclassnode property)": [[7, "graphtage.dataclasses.DataClassNode.is_leaf"]], "items() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.items"]], "make_edited() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.make_edited"]], "on_diff() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit.on_diff"]], "parent (graphtage.dataclasses.dataclassnode property)": [[7, "graphtage.dataclasses.DataClassNode.parent"]], "post_init() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.post_init"]], "print() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit.print"]], "print() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.print"]], "print_parent_context() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.print_parent_context"]], "tighten_bounds() (graphtage.dataclasses.dataclassedit method)": [[7, "graphtage.dataclasses.DataClassEdit.tighten_bounds"]], "to_obj() (graphtage.dataclasses.dataclassnode method)": [[7, "graphtage.dataclasses.DataClassNode.to_obj"]], "total_size (graphtage.dataclasses.dataclassnode property)": [[7, "graphtage.dataclasses.DataClassNode.total_size"]], "valid (graphtage.dataclasses.dataclassedit property)": [[7, "graphtage.dataclasses.DataClassEdit.valid"]], "debuggable (class in graphtage.debug)": [[8, "graphtage.debug.Debuggable"]], "__init__() (graphtage.debug.debuggable method)": [[8, "graphtage.debug.Debuggable.__init__"]], "graphtage.debug": [[8, "module-graphtage.debug"]], "addition (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.ADDITION"]], "bitwise_and (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.BITWISE_AND"]], "bitwise_left_shift (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.BITWISE_LEFT_SHIFT"]], "bitwise_not (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.BITWISE_NOT"]], "bitwise_or (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.BITWISE_OR"]], "bitwise_right_shift (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.BITWISE_RIGHT_SHIFT"]], "bitwise_xor (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.BITWISE_XOR"]], "closebracket (class in graphtage.expressions)": [[9, "graphtage.expressions.CloseBracket"]], "closeparen (class in graphtage.expressions)": [[9, "graphtage.expressions.CloseParen"]], "collectioninfo (class in graphtage.expressions)": [[9, "graphtage.expressions.CollectionInfo"]], "comma (class in graphtage.expressions)": [[9, "graphtage.expressions.Comma"]], "default_globals (in module graphtage.expressions)": [[9, "graphtage.expressions.DEFAULT_GLOBALS"]], "division (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.DIVISION"]], "equals (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.EQUALS"]], "expression (class in graphtage.expressions)": [[9, "graphtage.expressions.Expression"]], "function_call (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.FUNCTION_CALL"]], "fixedsizecollection (class in graphtage.expressions)": [[9, "graphtage.expressions.FixedSizeCollection"]], "floattoken (class in graphtage.expressions)": [[9, "graphtage.expressions.FloatToken"]], "functioncall (class in graphtage.expressions)": [[9, "graphtage.expressions.FunctionCall"]], "getitem (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.GETITEM"]], "greater_than (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.GREATER_THAN"]], "greater_than_equal (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.GREATER_THAN_EQUAL"]], "identifier_bytes (in module graphtage.expressions)": [[9, "graphtage.expressions.IDENTIFIER_BYTES"]], "in (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.IN"]], "int_division (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.INT_DIVISION"]], "identifiertoken (class in graphtage.expressions)": [[9, "graphtage.expressions.IdentifierToken"]], "integertoken (class in graphtage.expressions)": [[9, "graphtage.expressions.IntegerToken"]], "less_than (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.LESS_THAN"]], "less_than_equal (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.LESS_THAN_EQUAL"]], "logical_and (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.LOGICAL_AND"]], "logical_not (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.LOGICAL_NOT"]], "logical_or (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.LOGICAL_OR"]], "member_access (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.MEMBER_ACCESS"]], "multiplication (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.MULTIPLICATION"]], "not_equal (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.NOT_EQUAL"]], "numerictoken (class in graphtage.expressions)": [[9, "graphtage.expressions.NumericToken"]], "operators_by_name (in module graphtage.expressions)": [[9, "graphtage.expressions.OPERATORS_BY_NAME"]], "openbracket (class in graphtage.expressions)": [[9, "graphtage.expressions.OpenBracket"]], "openparen (class in graphtage.expressions)": [[9, "graphtage.expressions.OpenParen"]], "operator (class in graphtage.expressions)": [[9, "graphtage.expressions.Operator"]], "operatortoken (class in graphtage.expressions)": [[9, "graphtage.expressions.OperatorToken"]], "pairedendtoken (class in graphtage.expressions)": [[9, "graphtage.expressions.PairedEndToken"]], "pairedstarttoken (class in graphtage.expressions)": [[9, "graphtage.expressions.PairedStartToken"]], "pairedtoken (class in graphtage.expressions)": [[9, "graphtage.expressions.PairedToken"]], "parenthesis (class in graphtage.expressions)": [[9, "graphtage.expressions.Parenthesis"]], "parseerror (class in graphtage.expressions)": [[9, "graphtage.expressions.ParseError"]], "remainder (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.REMAINDER"]], "subtraction (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.SUBTRACTION"]], "stringtoken (class in graphtage.expressions)": [[9, "graphtage.expressions.StringToken"]], "ternary_conditional (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.TERNARY_CONDITIONAL"]], "ternary_else (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.TERNARY_ELSE"]], "token (class in graphtage.expressions)": [[9, "graphtage.expressions.Token"]], "tokenizer (class in graphtage.expressions)": [[9, "graphtage.expressions.Tokenizer"]], "unary_minus (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.UNARY_MINUS"]], "unary_plus (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.UNARY_PLUS"]], "__init__() (graphtage.expressions.closebracket method)": [[9, "graphtage.expressions.CloseBracket.__init__"]], "__init__() (graphtage.expressions.closeparen method)": [[9, "graphtage.expressions.CloseParen.__init__"]], "__init__() (graphtage.expressions.collectioninfo method)": [[9, "graphtage.expressions.CollectionInfo.__init__"]], "__init__() (graphtage.expressions.comma method)": [[9, "graphtage.expressions.Comma.__init__"]], "__init__() (graphtage.expressions.expression method)": [[9, "graphtage.expressions.Expression.__init__"]], "__init__() (graphtage.expressions.fixedsizecollection method)": [[9, "graphtage.expressions.FixedSizeCollection.__init__"]], "__init__() (graphtage.expressions.floattoken method)": [[9, "graphtage.expressions.FloatToken.__init__"]], "__init__() (graphtage.expressions.functioncall method)": [[9, "graphtage.expressions.FunctionCall.__init__"]], "__init__() (graphtage.expressions.identifiertoken method)": [[9, "graphtage.expressions.IdentifierToken.__init__"]], "__init__() (graphtage.expressions.integertoken method)": [[9, "graphtage.expressions.IntegerToken.__init__"]], "__init__() (graphtage.expressions.numerictoken method)": [[9, "graphtage.expressions.NumericToken.__init__"]], "__init__() (graphtage.expressions.openbracket method)": [[9, "graphtage.expressions.OpenBracket.__init__"]], "__init__() (graphtage.expressions.openparen method)": [[9, "graphtage.expressions.OpenParen.__init__"]], "__init__() (graphtage.expressions.operator method)": [[9, "graphtage.expressions.Operator.__init__"]], "__init__() (graphtage.expressions.operatortoken method)": [[9, "graphtage.expressions.OperatorToken.__init__"]], "__init__() (graphtage.expressions.pairedendtoken method)": [[9, "graphtage.expressions.PairedEndToken.__init__"]], "__init__() (graphtage.expressions.pairedstarttoken method)": [[9, "graphtage.expressions.PairedStartToken.__init__"]], "__init__() (graphtage.expressions.pairedtoken method)": [[9, "graphtage.expressions.PairedToken.__init__"]], "__init__() (graphtage.expressions.parenthesis method)": [[9, "graphtage.expressions.Parenthesis.__init__"]], "__init__() (graphtage.expressions.parseerror method)": [[9, "graphtage.expressions.ParseError.__init__"]], "__init__() (graphtage.expressions.stringtoken method)": [[9, "graphtage.expressions.StringToken.__init__"]], "__init__() (graphtage.expressions.token method)": [[9, "graphtage.expressions.Token.__init__"]], "__init__() (graphtage.expressions.tokenizer method)": [[9, "graphtage.expressions.Tokenizer.__init__"]], "__iter__() (graphtage.expressions.tokenizer method)": [[9, "graphtage.expressions.Tokenizer.__iter__"]], "args (graphtage.expressions.parseerror attribute)": [[9, "graphtage.expressions.ParseError.args"]], "arity (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.arity"]], "container_type (graphtage.expressions.fixedsizecollection attribute)": [[9, "graphtage.expressions.FixedSizeCollection.container_type"]], "discard (graphtage.expressions.openbracket attribute)": [[9, "graphtage.expressions.OpenBracket.discard"]], "discard (graphtage.expressions.openparen attribute)": [[9, "graphtage.expressions.OpenParen.discard"]], "discard (graphtage.expressions.pairedstarttoken attribute)": [[9, "graphtage.expressions.PairedStartToken.discard"]], "eval() (graphtage.expressions.expression method)": [[9, "graphtage.expressions.Expression.eval"]], "execute (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.execute"]], "expand (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.expand"]], "get_member() (in module graphtage.expressions)": [[9, "graphtage.expressions.get_member"]], "get_value() (graphtage.expressions.expression static method)": [[9, "graphtage.expressions.Expression.get_value"]], "graphtage.expressions": [[9, "module-graphtage.expressions"]], "has_next() (graphtage.expressions.tokenizer method)": [[9, "graphtage.expressions.Tokenizer.has_next"]], "infix_to_rpn() (in module graphtage.expressions)": [[9, "graphtage.expressions.infix_to_rpn"]], "is_list (graphtage.expressions.openbracket attribute)": [[9, "graphtage.expressions.OpenBracket.is_list"]], "left_associative (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.left_associative"]], "name (graphtage.expressions.closebracket attribute)": [[9, "graphtage.expressions.CloseBracket.name"]], "name (graphtage.expressions.closeparen attribute)": [[9, "graphtage.expressions.CloseParen.name"]], "name (graphtage.expressions.identifiertoken attribute)": [[9, "graphtage.expressions.IdentifierToken.name"]], "name (graphtage.expressions.openbracket attribute)": [[9, "graphtage.expressions.OpenBracket.name"]], "name (graphtage.expressions.openparen attribute)": [[9, "graphtage.expressions.OpenParen.name"]], "name (graphtage.expressions.pairedendtoken attribute)": [[9, "graphtage.expressions.PairedEndToken.name"]], "name (graphtage.expressions.pairedstarttoken attribute)": [[9, "graphtage.expressions.PairedStartToken.name"]], "name (graphtage.expressions.pairedtoken attribute)": [[9, "graphtage.expressions.PairedToken.name"]], "next() (graphtage.expressions.tokenizer method)": [[9, "graphtage.expressions.Tokenizer.next"]], "offset (graphtage.expressions.closebracket attribute)": [[9, "graphtage.expressions.CloseBracket.offset"]], "offset (graphtage.expressions.closeparen attribute)": [[9, "graphtage.expressions.CloseParen.offset"]], "offset (graphtage.expressions.comma attribute)": [[9, "graphtage.expressions.Comma.offset"]], "offset (graphtage.expressions.fixedsizecollection attribute)": [[9, "graphtage.expressions.FixedSizeCollection.offset"]], "offset (graphtage.expressions.floattoken attribute)": [[9, "graphtage.expressions.FloatToken.offset"]], "offset (graphtage.expressions.functioncall attribute)": [[9, "graphtage.expressions.FunctionCall.offset"]], "offset (graphtage.expressions.identifiertoken attribute)": [[9, "graphtage.expressions.IdentifierToken.offset"]], "offset (graphtage.expressions.integertoken attribute)": [[9, "graphtage.expressions.IntegerToken.offset"]], "offset (graphtage.expressions.numerictoken attribute)": [[9, "graphtage.expressions.NumericToken.offset"]], "offset (graphtage.expressions.openbracket attribute)": [[9, "graphtage.expressions.OpenBracket.offset"]], "offset (graphtage.expressions.openparen attribute)": [[9, "graphtage.expressions.OpenParen.offset"]], "offset (graphtage.expressions.operatortoken attribute)": [[9, "graphtage.expressions.OperatorToken.offset"]], "offset (graphtage.expressions.parenthesis attribute)": [[9, "graphtage.expressions.Parenthesis.offset"]], "offset (graphtage.expressions.stringtoken attribute)": [[9, "graphtage.expressions.StringToken.offset"]], "offset (graphtage.expressions.token attribute)": [[9, "graphtage.expressions.Token.offset"]], "op (graphtage.expressions.functioncall attribute)": [[9, "graphtage.expressions.FunctionCall.op"]], "op (graphtage.expressions.openbracket attribute)": [[9, "graphtage.expressions.OpenBracket.op"]], "op (graphtage.expressions.operatortoken attribute)": [[9, "graphtage.expressions.OperatorToken.op"]], "parse() (in module graphtage.expressions)": [[9, "graphtage.expressions.parse"]], "peek() (graphtage.expressions.tokenizer method)": [[9, "graphtage.expressions.Tokenizer.peek"]], "prev_token (graphtage.expressions.tokenizer attribute)": [[9, "graphtage.expressions.Tokenizer.prev_token"]], "priority (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.priority"]], "raw_token (graphtage.expressions.closebracket property)": [[9, "graphtage.expressions.CloseBracket.raw_token"]], "raw_token (graphtage.expressions.closeparen property)": [[9, "graphtage.expressions.CloseParen.raw_token"]], "raw_token (graphtage.expressions.comma property)": [[9, "graphtage.expressions.Comma.raw_token"]], "raw_token (graphtage.expressions.fixedsizecollection property)": [[9, "graphtage.expressions.FixedSizeCollection.raw_token"]], "raw_token (graphtage.expressions.floattoken property)": [[9, "graphtage.expressions.FloatToken.raw_token"]], "raw_token (graphtage.expressions.functioncall property)": [[9, "graphtage.expressions.FunctionCall.raw_token"]], "raw_token (graphtage.expressions.identifiertoken property)": [[9, "graphtage.expressions.IdentifierToken.raw_token"]], "raw_token (graphtage.expressions.integertoken property)": [[9, "graphtage.expressions.IntegerToken.raw_token"]], "raw_token (graphtage.expressions.numerictoken property)": [[9, "graphtage.expressions.NumericToken.raw_token"]], "raw_token (graphtage.expressions.openbracket property)": [[9, "graphtage.expressions.OpenBracket.raw_token"]], "raw_token (graphtage.expressions.openparen property)": [[9, "graphtage.expressions.OpenParen.raw_token"]], "raw_token (graphtage.expressions.operatortoken property)": [[9, "graphtage.expressions.OperatorToken.raw_token"]], "raw_token (graphtage.expressions.parenthesis property)": [[9, "graphtage.expressions.Parenthesis.raw_token"]], "raw_token (graphtage.expressions.stringtoken property)": [[9, "graphtage.expressions.StringToken.raw_token"]], "raw_token (graphtage.expressions.token property)": [[9, "graphtage.expressions.Token.raw_token"]], "size (graphtage.expressions.fixedsizecollection attribute)": [[9, "graphtage.expressions.FixedSizeCollection.size"]], "start_token_type (graphtage.expressions.closebracket attribute)": [[9, "graphtage.expressions.CloseBracket.start_token_type"]], "start_token_type (graphtage.expressions.closeparen attribute)": [[9, "graphtage.expressions.CloseParen.start_token_type"]], "start_token_type (graphtage.expressions.pairedendtoken attribute)": [[9, "graphtage.expressions.PairedEndToken.start_token_type"]], "token (graphtage.expressions.operator attribute)": [[9, "graphtage.expressions.Operator.token"]], "tokenize() (in module graphtage.expressions)": [[9, "graphtage.expressions.tokenize"]], "value (graphtage.expressions.floattoken attribute)": [[9, "graphtage.expressions.FloatToken.value"]], "value (graphtage.expressions.integertoken attribute)": [[9, "graphtage.expressions.IntegerToken.value"]], "value (graphtage.expressions.numerictoken attribute)": [[9, "graphtage.expressions.NumericToken.value"]], "with_traceback() (graphtage.expressions.parseerror method)": [[9, "graphtage.expressions.ParseError.with_traceback"]], "fibonacciheap (class in graphtage.fibonacci)": [[10, "graphtage.fibonacci.FibonacciHeap"]], "heapnode (class in graphtage.fibonacci)": [[10, "graphtage.fibonacci.HeapNode"]], "maxfibonacciheap (class in graphtage.fibonacci)": [[10, "graphtage.fibonacci.MaxFibonacciHeap"]], "reversedcomparator (class in graphtage.fibonacci)": [[10, "graphtage.fibonacci.ReversedComparator"]], "__init__() (graphtage.fibonacci.fibonacciheap method)": [[10, "graphtage.fibonacci.FibonacciHeap.__init__"]], "__init__() (graphtage.fibonacci.heapnode method)": [[10, "graphtage.fibonacci.HeapNode.__init__"]], "__init__() (graphtage.fibonacci.maxfibonacciheap method)": [[10, "graphtage.fibonacci.MaxFibonacciHeap.__init__"]], "__init__() (graphtage.fibonacci.reversedcomparator method)": [[10, "graphtage.fibonacci.ReversedComparator.__init__"]], "__iter__() (graphtage.fibonacci.heapnode method)": [[10, "graphtage.fibonacci.HeapNode.__iter__"]], "add_child() (graphtage.fibonacci.heapnode method)": [[10, "graphtage.fibonacci.HeapNode.add_child"]], "child (graphtage.fibonacci.heapnode attribute)": [[10, "graphtage.fibonacci.HeapNode.child"]], "children (graphtage.fibonacci.heapnode property)": [[10, "graphtage.fibonacci.HeapNode.children"]], "clear() (graphtage.fibonacci.fibonacciheap method)": [[10, "graphtage.fibonacci.FibonacciHeap.clear"]], "clear() (graphtage.fibonacci.maxfibonacciheap method)": [[10, "graphtage.fibonacci.MaxFibonacciHeap.clear"]], "decrease_key() (graphtage.fibonacci.fibonacciheap method)": [[10, "graphtage.fibonacci.FibonacciHeap.decrease_key"]], "decrease_key() (graphtage.fibonacci.maxfibonacciheap method)": [[10, "graphtage.fibonacci.MaxFibonacciHeap.decrease_key"]], "degree (graphtage.fibonacci.heapnode attribute)": [[10, "graphtage.fibonacci.HeapNode.degree"]], "deleted (graphtage.fibonacci.heapnode attribute)": [[10, "graphtage.fibonacci.HeapNode.deleted"]], "graphtage.fibonacci": [[10, "module-graphtage.fibonacci"]], "item (graphtage.fibonacci.heapnode attribute)": [[10, "graphtage.fibonacci.HeapNode.item"]], "key (graphtage.fibonacci.fibonacciheap attribute)": [[10, "graphtage.fibonacci.FibonacciHeap.key"]], "key (graphtage.fibonacci.heapnode attribute)": [[10, "graphtage.fibonacci.HeapNode.key"]], "key (graphtage.fibonacci.maxfibonacciheap attribute)": [[10, "graphtage.fibonacci.MaxFibonacciHeap.key"]], "left (graphtage.fibonacci.heapnode attribute)": [[10, "graphtage.fibonacci.HeapNode.left"]], "mark (graphtage.fibonacci.heapnode attribute)": [[10, "graphtage.fibonacci.HeapNode.mark"]], "min_node (graphtage.fibonacci.fibonacciheap property)": [[10, "graphtage.fibonacci.FibonacciHeap.min_node"]], "min_node (graphtage.fibonacci.maxfibonacciheap property)": [[10, "graphtage.fibonacci.MaxFibonacciHeap.min_node"]], "nodes() (graphtage.fibonacci.fibonacciheap method)": [[10, "graphtage.fibonacci.FibonacciHeap.nodes"]], "nodes() (graphtage.fibonacci.maxfibonacciheap method)": [[10, "graphtage.fibonacci.MaxFibonacciHeap.nodes"]], "parent (graphtage.fibonacci.heapnode attribute)": [[10, "graphtage.fibonacci.HeapNode.parent"]], "peek() (graphtage.fibonacci.fibonacciheap method)": [[10, "graphtage.fibonacci.FibonacciHeap.peek"]], "peek() (graphtage.fibonacci.maxfibonacciheap method)": [[10, "graphtage.fibonacci.MaxFibonacciHeap.peek"]], "pop() (graphtage.fibonacci.fibonacciheap method)": [[10, "graphtage.fibonacci.FibonacciHeap.pop"]], "pop() (graphtage.fibonacci.maxfibonacciheap method)": [[10, "graphtage.fibonacci.MaxFibonacciHeap.pop"]], "push() (graphtage.fibonacci.fibonacciheap method)": [[10, "graphtage.fibonacci.FibonacciHeap.push"]], "push() (graphtage.fibonacci.maxfibonacciheap method)": [[10, "graphtage.fibonacci.MaxFibonacciHeap.push"]], "remove() (graphtage.fibonacci.fibonacciheap method)": [[10, "graphtage.fibonacci.FibonacciHeap.remove"]], "remove() (graphtage.fibonacci.maxfibonacciheap method)": [[10, "graphtage.fibonacci.MaxFibonacciHeap.remove"]], "remove_child() (graphtage.fibonacci.heapnode method)": [[10, "graphtage.fibonacci.HeapNode.remove_child"]], "right (graphtage.fibonacci.heapnode attribute)": [[10, "graphtage.fibonacci.HeapNode.right"]], "siblings (graphtage.fibonacci.heapnode property)": [[10, "graphtage.fibonacci.HeapNode.siblings"]], "basicformatter (class in graphtage.formatter)": [[11, "graphtage.formatter.BasicFormatter"]], "default_instance (graphtage.formatter.basicformatter attribute)": [[11, "graphtage.formatter.BasicFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.formatter.formatter attribute)": [[11, "graphtage.formatter.Formatter.DEFAULT_INSTANCE"]], "formatter (class in graphtage.formatter)": [[11, "graphtage.formatter.Formatter"]], "formatterchecker (class in graphtage.formatter)": [[11, "graphtage.formatter.FormatterChecker"]], "__init__() (graphtage.formatter.basicformatter method)": [[11, "graphtage.formatter.BasicFormatter.__init__"]], "__init__() (graphtage.formatter.formatter method)": [[11, "graphtage.formatter.Formatter.__init__"]], "__init__() (graphtage.formatter.formatterchecker method)": [[11, "graphtage.formatter.FormatterChecker.__init__"]], "__instancecheck__() (graphtage.formatter.formatterchecker method)": [[11, "graphtage.formatter.FormatterChecker.__instancecheck__"]], "__new__() (graphtage.formatter.basicformatter static method)": [[11, "graphtage.formatter.BasicFormatter.__new__"]], "__new__() (graphtage.formatter.formatter static method)": [[11, "graphtage.formatter.Formatter.__new__"]], "__subclasscheck__() (graphtage.formatter.formatterchecker method)": [[11, "graphtage.formatter.FormatterChecker.__subclasscheck__"]], "_abc_caches_clear() (graphtage.formatter.formatterchecker method)": [[11, "graphtage.formatter.FormatterChecker._abc_caches_clear"]], "_abc_registry_clear() (graphtage.formatter.formatterchecker method)": [[11, "graphtage.formatter.FormatterChecker._abc_registry_clear"]], "_dump_registry() (graphtage.formatter.formatterchecker method)": [[11, "graphtage.formatter.FormatterChecker._dump_registry"]], "get_formatter() (graphtage.formatter.basicformatter method)": [[11, "graphtage.formatter.BasicFormatter.get_formatter"]], "get_formatter() (graphtage.formatter.formatter method)": [[11, "graphtage.formatter.Formatter.get_formatter"]], "get_formatter() (in module graphtage.formatter)": [[11, "graphtage.formatter.get_formatter"]], "graphtage.formatter": [[11, "module-graphtage.formatter"]], "is_partial (graphtage.formatter.basicformatter attribute)": [[11, "graphtage.formatter.BasicFormatter.is_partial"]], "is_partial (graphtage.formatter.formatter attribute)": [[11, "graphtage.formatter.Formatter.is_partial"]], "mro() (graphtage.formatter.formatterchecker method)": [[11, "graphtage.formatter.FormatterChecker.mro"]], "parent (graphtage.formatter.basicformatter attribute)": [[11, "graphtage.formatter.BasicFormatter.parent"]], "parent (graphtage.formatter.formatter attribute)": [[11, "graphtage.formatter.Formatter.parent"]], "print() (graphtage.formatter.basicformatter method)": [[11, "graphtage.formatter.BasicFormatter.print"]], "print() (graphtage.formatter.formatter method)": [[11, "graphtage.formatter.Formatter.print"]], "register() (graphtage.formatter.formatterchecker method)": [[11, "graphtage.formatter.FormatterChecker.register"]], "root (graphtage.formatter.basicformatter property)": [[11, "graphtage.formatter.BasicFormatter.root"]], "root (graphtage.formatter.formatter property)": [[11, "graphtage.formatter.Formatter.root"]], "sub_format_types (graphtage.formatter.basicformatter attribute)": [[11, "graphtage.formatter.BasicFormatter.sub_format_types"]], "sub_format_types (graphtage.formatter.formatter attribute)": [[11, "graphtage.formatter.Formatter.sub_format_types"]], "sub_formatters (graphtage.formatter.basicformatter attribute)": [[11, "graphtage.formatter.BasicFormatter.sub_formatters"]], "sub_formatters (graphtage.formatter.formatter attribute)": [[11, "graphtage.formatter.Formatter.sub_formatters"]], "default_instance (graphtage.json.jsondictformatter attribute)": [[12, "graphtage.json.JSONDictFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.json.jsonformatter attribute)": [[12, "graphtage.json.JSONFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.json.jsonlistformatter attribute)": [[12, "graphtage.json.JSONListFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.json.jsonstringformatter attribute)": [[12, "graphtage.json.JSONStringFormatter.DEFAULT_INSTANCE"]], "json (class in graphtage.json)": [[12, "graphtage.json.JSON"]], "json5 (class in graphtage.json)": [[12, "graphtage.json.JSON5"]], "jsondictformatter (class in graphtage.json)": [[12, "graphtage.json.JSONDictFormatter"]], "jsonformatter (class in graphtage.json)": [[12, "graphtage.json.JSONFormatter"]], "jsonlistformatter (class in graphtage.json)": [[12, "graphtage.json.JSONListFormatter"]], "jsonstringformatter (class in graphtage.json)": [[12, "graphtage.json.JSONStringFormatter"]], "__init__() (graphtage.json.json method)": [[12, "graphtage.json.JSON.__init__"]], "__init__() (graphtage.json.json5 method)": [[12, "graphtage.json.JSON5.__init__"]], "__init__() (graphtage.json.jsondictformatter method)": [[12, "graphtage.json.JSONDictFormatter.__init__"]], "__init__() (graphtage.json.jsonformatter method)": [[12, "graphtage.json.JSONFormatter.__init__"]], "__init__() (graphtage.json.jsonlistformatter method)": [[12, "graphtage.json.JSONListFormatter.__init__"]], "__init__() (graphtage.json.jsonstringformatter method)": [[12, "graphtage.json.JSONStringFormatter.__init__"]], "__new__() (graphtage.json.jsondictformatter static method)": [[12, "graphtage.json.JSONDictFormatter.__new__"]], "__new__() (graphtage.json.jsonformatter static method)": [[12, "graphtage.json.JSONFormatter.__new__"]], "__new__() (graphtage.json.jsonlistformatter static method)": [[12, "graphtage.json.JSONListFormatter.__new__"]], "__new__() (graphtage.json.jsonstringformatter static method)": [[12, "graphtage.json.JSONStringFormatter.__new__"]], "build_tree() (graphtage.json.json method)": [[12, "graphtage.json.JSON.build_tree"]], "build_tree() (graphtage.json.json5 method)": [[12, "graphtage.json.JSON5.build_tree"]], "build_tree() (in module graphtage.json)": [[12, "graphtage.json.build_tree"]], "build_tree_handling_errors() (graphtage.json.json method)": [[12, "graphtage.json.JSON.build_tree_handling_errors"]], "build_tree_handling_errors() (graphtage.json.json5 method)": [[12, "graphtage.json.JSON5.build_tree_handling_errors"]], "context() (graphtage.json.jsonstringformatter method)": [[12, "graphtage.json.JSONStringFormatter.context"]], "default_instance (graphtage.json.json attribute)": [[12, "graphtage.json.JSON.default_instance"]], "default_instance (graphtage.json.json5 attribute)": [[12, "graphtage.json.JSON5.default_instance"]], "edit_print() (graphtage.json.jsondictformatter method)": [[12, "graphtage.json.JSONDictFormatter.edit_print"]], "edit_print() (graphtage.json.jsonlistformatter method)": [[12, "graphtage.json.JSONListFormatter.edit_print"]], "escape() (graphtage.json.jsonstringformatter method)": [[12, "graphtage.json.JSONStringFormatter.escape"]], "get_default_formatter() (graphtage.json.json method)": [[12, "graphtage.json.JSON.get_default_formatter"]], "get_default_formatter() (graphtage.json.json5 method)": [[12, "graphtage.json.JSON5.get_default_formatter"]], "get_formatter() (graphtage.json.jsondictformatter method)": [[12, "graphtage.json.JSONDictFormatter.get_formatter"]], "get_formatter() (graphtage.json.jsonformatter method)": [[12, "graphtage.json.JSONFormatter.get_formatter"]], "get_formatter() (graphtage.json.jsonlistformatter method)": [[12, "graphtage.json.JSONListFormatter.get_formatter"]], "get_formatter() (graphtage.json.jsonstringformatter method)": [[12, "graphtage.json.JSONStringFormatter.get_formatter"]], "graphtage.json": [[12, "module-graphtage.json"]], "is_partial (graphtage.json.jsondictformatter attribute)": [[12, "graphtage.json.JSONDictFormatter.is_partial"]], "is_partial (graphtage.json.jsonformatter attribute)": [[12, "graphtage.json.JSONFormatter.is_partial"]], "is_partial (graphtage.json.jsonlistformatter attribute)": [[12, "graphtage.json.JSONListFormatter.is_partial"]], "is_partial (graphtage.json.jsonstringformatter attribute)": [[12, "graphtage.json.JSONStringFormatter.is_partial"]], "is_quoted (graphtage.json.jsonstringformatter attribute)": [[12, "graphtage.json.JSONStringFormatter.is_quoted"]], "item_newline() (graphtage.json.jsondictformatter method)": [[12, "graphtage.json.JSONDictFormatter.item_newline"]], "item_newline() (graphtage.json.jsonlistformatter method)": [[12, "graphtage.json.JSONListFormatter.item_newline"]], "items_indent() (graphtage.json.jsondictformatter method)": [[12, "graphtage.json.JSONDictFormatter.items_indent"]], "items_indent() (graphtage.json.jsonlistformatter method)": [[12, "graphtage.json.JSONListFormatter.items_indent"]], "parent (graphtage.json.jsondictformatter attribute)": [[12, "graphtage.json.JSONDictFormatter.parent"]], "parent (graphtage.json.jsonformatter attribute)": [[12, "graphtage.json.JSONFormatter.parent"]], "parent (graphtage.json.jsonlistformatter attribute)": [[12, "graphtage.json.JSONListFormatter.parent"]], "parent (graphtage.json.jsonstringformatter attribute)": [[12, "graphtage.json.JSONStringFormatter.parent"]], "print() (graphtage.json.jsondictformatter method)": [[12, "graphtage.json.JSONDictFormatter.print"]], "print() (graphtage.json.jsonformatter method)": [[12, "graphtage.json.JSONFormatter.print"]], "print() (graphtage.json.jsonlistformatter method)": [[12, "graphtage.json.JSONListFormatter.print"]], "print() (graphtage.json.jsonstringformatter method)": [[12, "graphtage.json.JSONStringFormatter.print"]], "print_containernode() (graphtage.json.jsonformatter method)": [[12, "graphtage.json.JSONFormatter.print_ContainerNode"]], "print_keyvaluepairnode() (graphtage.json.jsonformatter method)": [[12, "graphtage.json.JSONFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.json.jsonformatter method)": [[12, "graphtage.json.JSONFormatter.print_LeafNode"]], "print_listnode() (graphtage.json.jsonlistformatter method)": [[12, "graphtage.json.JSONListFormatter.print_ListNode"]], "print_mappingnode() (graphtage.json.jsondictformatter method)": [[12, "graphtage.json.JSONDictFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.json.jsondictformatter method)": [[12, "graphtage.json.JSONDictFormatter.print_MultiSetNode"]], "print_sequencenode() (graphtage.json.jsondictformatter method)": [[12, "graphtage.json.JSONDictFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.json.jsonlistformatter method)": [[12, "graphtage.json.JSONListFormatter.print_SequenceNode"]], "print_stringedit() (graphtage.json.jsonstringformatter method)": [[12, "graphtage.json.JSONStringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.json.jsonstringformatter method)": [[12, "graphtage.json.JSONStringFormatter.print_StringNode"]], "print_xmlelement() (graphtage.json.jsonformatter method)": [[12, "graphtage.json.JSONFormatter.print_XMLElement"]], "root (graphtage.json.jsondictformatter property)": [[12, "graphtage.json.JSONDictFormatter.root"]], "root (graphtage.json.jsonformatter property)": [[12, "graphtage.json.JSONFormatter.root"]], "root (graphtage.json.jsonlistformatter property)": [[12, "graphtage.json.JSONListFormatter.root"]], "root (graphtage.json.jsonstringformatter property)": [[12, "graphtage.json.JSONStringFormatter.root"]], "sub_format_types (graphtage.json.jsondictformatter attribute)": [[12, "graphtage.json.JSONDictFormatter.sub_format_types"]], "sub_format_types (graphtage.json.jsonformatter attribute)": [[12, "graphtage.json.JSONFormatter.sub_format_types"]], "sub_format_types (graphtage.json.jsonlistformatter attribute)": [[12, "graphtage.json.JSONListFormatter.sub_format_types"]], "sub_format_types (graphtage.json.jsonstringformatter attribute)": [[12, "graphtage.json.JSONStringFormatter.sub_format_types"]], "sub_formatters (graphtage.json.jsondictformatter attribute)": [[12, "graphtage.json.JSONDictFormatter.sub_formatters"]], "sub_formatters (graphtage.json.jsonformatter attribute)": [[12, "graphtage.json.JSONFormatter.sub_formatters"]], "sub_formatters (graphtage.json.jsonlistformatter attribute)": [[12, "graphtage.json.JSONListFormatter.sub_formatters"]], "sub_formatters (graphtage.json.jsonstringformatter attribute)": [[12, "graphtage.json.JSONStringFormatter.sub_formatters"]], "write_char() (graphtage.json.jsonstringformatter method)": [[12, "graphtage.json.JSONStringFormatter.write_char"]], "write_end_quote() (graphtage.json.jsonstringformatter method)": [[12, "graphtage.json.JSONStringFormatter.write_end_quote"]], "write_start_quote() (graphtage.json.jsonstringformatter method)": [[12, "graphtage.json.JSONStringFormatter.write_start_quote"]], "editdistance (class in graphtage.levenshtein)": [[13, "graphtage.levenshtein.EditDistance"]], "__init__() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance.__init__"]], "__iter__() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance.__iter__"]], "__lt__() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance.__lt__"]], "_debug_tighten_bounds() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance._debug_tighten_bounds"]], "bounds() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance.bounds"]], "edits() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance.edits"]], "from_node (graphtage.levenshtein.editdistance attribute)": [[13, "graphtage.levenshtein.EditDistance.from_node"]], "graphtage.levenshtein": [[13, "module-graphtage.levenshtein"]], "has_non_zero_cost() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance.has_non_zero_cost"]], "initial_bounds (graphtage.levenshtein.editdistance attribute)": [[13, "graphtage.levenshtein.EditDistance.initial_bounds"]], "is_complete() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance.is_complete"]], "levenshtein_distance() (in module graphtage.levenshtein)": [[13, "graphtage.levenshtein.levenshtein_distance"]], "on_diff() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance.on_diff"]], "print() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance.print"]], "sequence (graphtage.levenshtein.editdistance property)": [[13, "graphtage.levenshtein.EditDistance.sequence"]], "tighten_bounds() (graphtage.levenshtein.editdistance method)": [[13, "graphtage.levenshtein.EditDistance.tighten_bounds"]], "valid (graphtage.levenshtein.editdistance property)": [[13, "graphtage.levenshtein.EditDistance.valid"]], "edge (class in graphtage.matching)": [[14, "graphtage.matching.Edge"]], "matching (class in graphtage.matching)": [[14, "graphtage.matching.Matching"]], "matchingfromnode (class in graphtage.matching)": [[14, "graphtage.matching.MatchingFromNode"]], "matchingnode (class in graphtage.matching)": [[14, "graphtage.matching.MatchingNode"]], "matchingtonode (class in graphtage.matching)": [[14, "graphtage.matching.MatchingToNode"]], "pathset (class in graphtage.matching)": [[14, "graphtage.matching.PathSet"]], "queueelement (class in graphtage.matching)": [[14, "graphtage.matching.QueueElement"]], "sortededges (class in graphtage.matching)": [[14, "graphtage.matching.SortedEdges"]], "weightedbipartitematcher (class in graphtage.matching)": [[14, "graphtage.matching.WeightedBipartiteMatcher"]], "weightedbipartitematcherpartial_implementation (class in graphtage.matching)": [[14, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION"]], "__init__() (graphtage.matching.edge method)": [[14, "graphtage.matching.Edge.__init__"]], "__init__() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.__init__"]], "__init__() (graphtage.matching.matchingfromnode method)": [[14, "graphtage.matching.MatchingFromNode.__init__"]], "__init__() (graphtage.matching.matchingnode method)": [[14, "graphtage.matching.MatchingNode.__init__"]], "__init__() (graphtage.matching.matchingtonode method)": [[14, "graphtage.matching.MatchingToNode.__init__"]], "__init__() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.__init__"]], "__init__() (graphtage.matching.queueelement method)": [[14, "graphtage.matching.QueueElement.__init__"]], "__init__() (graphtage.matching.sortededges method)": [[14, "graphtage.matching.SortedEdges.__init__"]], "__init__() (graphtage.matching.weightedbipartitematcher method)": [[14, "graphtage.matching.WeightedBipartiteMatcher.__init__"]], "__init__() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[14, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.__init__"]], "_from_iterable() (graphtage.matching.matching class method)": [[14, "graphtage.matching.Matching._from_iterable"]], "_from_iterable() (graphtage.matching.pathset class method)": [[14, "graphtage.matching.PathSet._from_iterable"]], "_hash() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching._hash"]], "_hash() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet._hash"]], "add() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.add"]], "add() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.add"]], "bounds() (graphtage.matching.edge method)": [[14, "graphtage.matching.Edge.bounds"]], "bounds() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.bounds"]], "bounds() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.bounds"]], "bounds() (graphtage.matching.weightedbipartitematcher method)": [[14, "graphtage.matching.WeightedBipartiteMatcher.bounds"]], "bounds() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[14, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.bounds"]], "clear() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.clear"]], "clear() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.clear"]], "construct_edges() (graphtage.matching.matchingfromnode method)": [[14, "graphtage.matching.MatchingFromNode.construct_edges"]], "construct_edges() (graphtage.matching.matchingnode method)": [[14, "graphtage.matching.MatchingNode.construct_edges"]], "construct_edges() (graphtage.matching.matchingtonode method)": [[14, "graphtage.matching.MatchingToNode.construct_edges"]], "copy() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.copy"]], "copy() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.copy"]], "cost_bar (graphtage.matching.edge property)": [[14, "graphtage.matching.Edge.cost_bar"]], "cost_star (graphtage.matching.edge property)": [[14, "graphtage.matching.Edge.cost_star"]], "difference() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.difference"]], "difference() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.difference"]], "difference_update() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.difference_update"]], "difference_update() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.difference_update"]], "discard() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.discard"]], "discard() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.discard"]], "edges (graphtage.matching.weightedbipartitematcher property)": [[14, "graphtage.matching.WeightedBipartiteMatcher.edges"]], "edges() (graphtage.matching.matchingfromnode method)": [[14, "graphtage.matching.MatchingFromNode.edges"]], "edges() (graphtage.matching.matchingnode method)": [[14, "graphtage.matching.MatchingNode.edges"]], "edges() (graphtage.matching.matchingtonode method)": [[14, "graphtage.matching.MatchingToNode.edges"]], "free_destinations() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[14, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.free_destinations"]], "free_sources() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[14, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.free_sources"]], "get_dtype() (in module graphtage.matching)": [[14, "graphtage.matching.get_dtype"]], "graphtage.matching": [[14, "module-graphtage.matching"]], "head() (graphtage.matching.sortededges method)": [[14, "graphtage.matching.SortedEdges.head"]], "intersection() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.intersection"]], "intersection() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.intersection"]], "intersection_update() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.intersection_update"]], "intersection_update() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.intersection_update"]], "is_complete() (graphtage.matching.weightedbipartitematcher method)": [[14, "graphtage.matching.WeightedBipartiteMatcher.is_complete"]], "isdisjoint() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.isdisjoint"]], "isdisjoint() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.isdisjoint"]], "issubset() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.issubset"]], "issubset() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.issubset"]], "issuperset() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.issuperset"]], "issuperset() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.issuperset"]], "matching (graphtage.matching.weightedbipartitematcher property)": [[14, "graphtage.matching.WeightedBipartiteMatcher.matching"]], "min_weight_bipartite_matching() (in module graphtage.matching)": [[14, "graphtage.matching.min_weight_bipartite_matching"]], "path_to() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.path_to"]], "pop() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.pop"]], "pop() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.pop"]], "remove() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.remove"]], "remove() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.remove"]], "sorted_neighbors (graphtage.matching.matchingfromnode property)": [[14, "graphtage.matching.MatchingFromNode.sorted_neighbors"]], "symmetric_difference() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.symmetric_difference"]], "symmetric_difference() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.symmetric_difference"]], "symmetric_difference_update() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.symmetric_difference_update"]], "symmetric_difference_update() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.symmetric_difference_update"]], "tail() (graphtage.matching.sortededges method)": [[14, "graphtage.matching.SortedEdges.tail"]], "tighten_bounds() (graphtage.matching.edge method)": [[14, "graphtage.matching.Edge.tighten_bounds"]], "tighten_bounds() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.tighten_bounds"]], "tighten_bounds() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.tighten_bounds"]], "tighten_bounds() (graphtage.matching.weightedbipartitematcher method)": [[14, "graphtage.matching.WeightedBipartiteMatcher.tighten_bounds"]], "tighten_bounds() (graphtage.matching.weightedbipartitematcherpartial_implementation method)": [[14, "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION.tighten_bounds"]], "union() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.union"]], "union() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.union"]], "update() (graphtage.matching.matching method)": [[14, "graphtage.matching.Matching.update"]], "update() (graphtage.matching.pathset method)": [[14, "graphtage.matching.PathSet.update"]], "multisetedit (class in graphtage.multiset)": [[15, "graphtage.multiset.MultiSetEdit"]], "__init__() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit.__init__"]], "__iter__() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit.__iter__"]], "__lt__() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit.__lt__"]], "_debug_tighten_bounds() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit._debug_tighten_bounds"]], "bounds() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit.bounds"]], "edits() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit.edits"]], "from_node (graphtage.multiset.multisetedit attribute)": [[15, "graphtage.multiset.MultiSetEdit.from_node"]], "graphtage.multiset": [[15, "module-graphtage.multiset"]], "has_non_zero_cost() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit.has_non_zero_cost"]], "initial_bounds (graphtage.multiset.multisetedit attribute)": [[15, "graphtage.multiset.MultiSetEdit.initial_bounds"]], "is_complete() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit.is_complete"]], "on_diff() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit.on_diff"]], "print() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit.print"]], "sequence (graphtage.multiset.multisetedit property)": [[15, "graphtage.multiset.MultiSetEdit.sequence"]], "tighten_bounds() (graphtage.multiset.multisetedit method)": [[15, "graphtage.multiset.MultiSetEdit.tighten_bounds"]], "to_insert (graphtage.multiset.multisetedit attribute)": [[15, "graphtage.multiset.MultiSetEdit.to_insert"]], "to_remove (graphtage.multiset.multisetedit attribute)": [[15, "graphtage.multiset.MultiSetEdit.to_remove"]], "valid (graphtage.multiset.multisetedit property)": [[15, "graphtage.multiset.MultiSetEdit.valid"]], "identityhash (class in graphtage.object_set)": [[16, "graphtage.object_set.IdentityHash"]], "objectset (class in graphtage.object_set)": [[16, "graphtage.object_set.ObjectSet"]], "__init__() (graphtage.object_set.identityhash method)": [[16, "graphtage.object_set.IdentityHash.__init__"]], "__init__() (graphtage.object_set.objectset method)": [[16, "graphtage.object_set.ObjectSet.__init__"]], "_from_iterable() (graphtage.object_set.objectset class method)": [[16, "graphtage.object_set.ObjectSet._from_iterable"]], "_hash() (graphtage.object_set.objectset method)": [[16, "graphtage.object_set.ObjectSet._hash"]], "add() (graphtage.object_set.objectset method)": [[16, "graphtage.object_set.ObjectSet.add"]], "clear() (graphtage.object_set.objectset method)": [[16, "graphtage.object_set.ObjectSet.clear"]], "discard() (graphtage.object_set.objectset method)": [[16, "graphtage.object_set.ObjectSet.discard"]], "graphtage.object_set": [[16, "module-graphtage.object_set"]], "isdisjoint() (graphtage.object_set.objectset method)": [[16, "graphtage.object_set.ObjectSet.isdisjoint"]], "pop() (graphtage.object_set.objectset method)": [[16, "graphtage.object_set.ObjectSet.pop"]], "remove() (graphtage.object_set.objectset method)": [[16, "graphtage.object_set.ObjectSet.remove"]], "pickle (class in graphtage.pickle)": [[17, "graphtage.pickle.Pickle"]], "__init__() (graphtage.pickle.pickle method)": [[17, "graphtage.pickle.Pickle.__init__"]], "build_tree() (graphtage.pickle.pickle method)": [[17, "graphtage.pickle.Pickle.build_tree"]], "build_tree_handling_errors() (graphtage.pickle.pickle method)": [[17, "graphtage.pickle.Pickle.build_tree_handling_errors"]], "default_instance (graphtage.pickle.pickle attribute)": [[17, "graphtage.pickle.Pickle.default_instance"]], "get_default_formatter() (graphtage.pickle.pickle method)": [[17, "graphtage.pickle.Pickle.get_default_formatter"]], "graphtage.pickle": [[17, "module-graphtage.pickle"]], "default_instance (graphtage.plist.plistformatter attribute)": [[18, "graphtage.plist.PLISTFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.plist.plistsequenceformatter attribute)": [[18, "graphtage.plist.PLISTSequenceFormatter.DEFAULT_INSTANCE"]], "plist (class in graphtage.plist)": [[18, "graphtage.plist.PLIST"]], "plistformatter (class in graphtage.plist)": [[18, "graphtage.plist.PLISTFormatter"]], "plistnode (class in graphtage.plist)": [[18, "graphtage.plist.PLISTNode"]], "plistsequenceformatter (class in graphtage.plist)": [[18, "graphtage.plist.PLISTSequenceFormatter"]], "__init__() (graphtage.plist.plist method)": [[18, "graphtage.plist.PLIST.__init__"]], "__init__() (graphtage.plist.plistformatter method)": [[18, "graphtage.plist.PLISTFormatter.__init__"]], "__init__() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.__init__"]], "__init__() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.__init__"]], "__new__() (graphtage.plist.plistformatter static method)": [[18, "graphtage.plist.PLISTFormatter.__new__"]], "__new__() (graphtage.plist.plistsequenceformatter static method)": [[18, "graphtage.plist.PLISTSequenceFormatter.__new__"]], "add_edit_modifier() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.add_edit_modifier"]], "all_children_are_leaves() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.all_children_are_leaves"]], "build_tree() (graphtage.plist.plist method)": [[18, "graphtage.plist.PLIST.build_tree"]], "build_tree() (in module graphtage.plist)": [[18, "graphtage.plist.build_tree"]], "build_tree_handling_errors() (graphtage.plist.plist method)": [[18, "graphtage.plist.PLIST.build_tree_handling_errors"]], "calculate_total_size() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.calculate_total_size"]], "children() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.children"]], "copy() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.copy"]], "copy_from() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.copy_from"]], "default_instance (graphtage.plist.plist attribute)": [[18, "graphtage.plist.PLIST.default_instance"]], "dfs() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.dfs"]], "diff() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.diff"]], "edit_print() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.edit_print"]], "editable_dict() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.editable_dict"]], "edited (graphtage.plist.plistnode property)": [[18, "graphtage.plist.PLISTNode.edited"]], "edits() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.edits"]], "get_all_edit_contexts() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.get_all_edits"]], "get_default_formatter() (graphtage.plist.plist method)": [[18, "graphtage.plist.PLIST.get_default_formatter"]], "get_formatter() (graphtage.plist.plistformatter method)": [[18, "graphtage.plist.PLISTFormatter.get_formatter"]], "get_formatter() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.get_formatter"]], "graphtage.plist": [[18, "module-graphtage.plist"]], "is_leaf (graphtage.plist.plistnode property)": [[18, "graphtage.plist.PLISTNode.is_leaf"]], "is_partial (graphtage.plist.plistformatter attribute)": [[18, "graphtage.plist.PLISTFormatter.is_partial"]], "is_partial (graphtage.plist.plistsequenceformatter attribute)": [[18, "graphtage.plist.PLISTSequenceFormatter.is_partial"]], "item_newline() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.item_newline"]], "items_indent() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.items_indent"]], "make_edited() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.make_edited"]], "parent (graphtage.plist.plistformatter attribute)": [[18, "graphtage.plist.PLISTFormatter.parent"]], "parent (graphtage.plist.plistnode property)": [[18, "graphtage.plist.PLISTNode.parent"]], "parent (graphtage.plist.plistsequenceformatter attribute)": [[18, "graphtage.plist.PLISTSequenceFormatter.parent"]], "print() (graphtage.plist.plistformatter method)": [[18, "graphtage.plist.PLISTFormatter.print"]], "print() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.print"]], "print() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.print"]], "print_boolnode() (graphtage.plist.plistformatter method)": [[18, "graphtage.plist.PLISTFormatter.print_BoolNode"]], "print_floatnode() (graphtage.plist.plistformatter method)": [[18, "graphtage.plist.PLISTFormatter.print_FloatNode"]], "print_integernode() (graphtage.plist.plistformatter method)": [[18, "graphtage.plist.PLISTFormatter.print_IntegerNode"]], "print_keyvaluepairnode() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.plist.plistformatter method)": [[18, "graphtage.plist.PLISTFormatter.print_LeafNode"]], "print_listnode() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.print_ListNode"]], "print_mappingnode() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.print_MultiSetNode"]], "print_plistnode() (graphtage.plist.plistformatter method)": [[18, "graphtage.plist.PLISTFormatter.print_PLISTNode"]], "print_sequencenode() (graphtage.plist.plistsequenceformatter method)": [[18, "graphtage.plist.PLISTSequenceFormatter.print_SequenceNode"]], "print_stringnode() (graphtage.plist.plistformatter method)": [[18, "graphtage.plist.PLISTFormatter.print_StringNode"]], "print_parent_context() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.print_parent_context"]], "root (graphtage.plist.plistformatter property)": [[18, "graphtage.plist.PLISTFormatter.root"]], "root (graphtage.plist.plistsequenceformatter property)": [[18, "graphtage.plist.PLISTSequenceFormatter.root"]], "sub_format_types (graphtage.plist.plistformatter attribute)": [[18, "graphtage.plist.PLISTFormatter.sub_format_types"]], "sub_format_types (graphtage.plist.plistsequenceformatter attribute)": [[18, "graphtage.plist.PLISTSequenceFormatter.sub_format_types"]], "sub_formatters (graphtage.plist.plistformatter attribute)": [[18, "graphtage.plist.PLISTFormatter.sub_formatters"]], "sub_formatters (graphtage.plist.plistsequenceformatter attribute)": [[18, "graphtage.plist.PLISTSequenceFormatter.sub_formatters"]], "to_obj() (graphtage.plist.plistnode method)": [[18, "graphtage.plist.PLISTNode.to_obj"]], "total_size (graphtage.plist.plistnode property)": [[18, "graphtage.plist.PLISTNode.total_size"]], "write_obj() (graphtage.plist.plistformatter static method)": [[18, "graphtage.plist.PLISTFormatter.write_obj"]], "ansicontext (class in graphtage.printer)": [[19, "graphtage.printer.ANSIContext"]], "combiningmarkcontext (class in graphtage.printer)": [[19, "graphtage.printer.CombiningMarkContext"]], "combiningmarkwriter (class in graphtage.printer)": [[19, "graphtage.printer.CombiningMarkWriter"]], "default_printer (in module graphtage.printer)": [[19, "graphtage.printer.DEFAULT_PRINTER"]], "htmlansicontext (class in graphtage.printer)": [[19, "graphtage.printer.HTMLANSIContext"]], "htmlprinter (class in graphtage.printer)": [[19, "graphtage.printer.HTMLPrinter"]], "nullansicontext (class in graphtage.printer)": [[19, "graphtage.printer.NullANSIContext"]], "nullwriter (class in graphtage.printer)": [[19, "graphtage.printer.NullWriter"]], "printer (class in graphtage.printer)": [[19, "graphtage.printer.Printer"]], "rawwriter (class in graphtage.printer)": [[19, "graphtage.printer.RawWriter"]], "writer (class in graphtage.printer)": [[19, "graphtage.printer.Writer"]], "__init__() (graphtage.printer.ansicontext method)": [[19, "graphtage.printer.ANSIContext.__init__"]], "__init__() (graphtage.printer.combiningmarkcontext method)": [[19, "graphtage.printer.CombiningMarkContext.__init__"]], "__init__() (graphtage.printer.combiningmarkwriter method)": [[19, "graphtage.printer.CombiningMarkWriter.__init__"]], "__init__() (graphtage.printer.htmlansicontext method)": [[19, "graphtage.printer.HTMLANSIContext.__init__"]], "__init__() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.__init__"]], "__init__() (graphtage.printer.nullansicontext method)": [[19, "graphtage.printer.NullANSIContext.__init__"]], "__init__() (graphtage.printer.nullwriter method)": [[19, "graphtage.printer.NullWriter.__init__"]], "__init__() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.__init__"]], "__init__() (graphtage.printer.rawwriter method)": [[19, "graphtage.printer.RawWriter.__init__"]], "__init__() (graphtage.printer.writer method)": [[19, "graphtage.printer.Writer.__init__"]], "add() (graphtage.printer.combiningmarkwriter method)": [[19, "graphtage.printer.CombiningMarkWriter.add"]], "ansi_color (graphtage.printer.htmlprinter property)": [[19, "graphtage.printer.HTMLPrinter.ansi_color"]], "ansi_color (graphtage.printer.printer property)": [[19, "graphtage.printer.Printer.ansi_color"]], "back (graphtage.printer.ansicontext property)": [[19, "graphtage.printer.ANSIContext.back"]], "back (graphtage.printer.htmlansicontext property)": [[19, "graphtage.printer.HTMLANSIContext.back"]], "background() (graphtage.printer.ansicontext method)": [[19, "graphtage.printer.ANSIContext.background"]], "background() (graphtage.printer.htmlansicontext method)": [[19, "graphtage.printer.HTMLANSIContext.background"]], "background() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.background"]], "background() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.background"]], "bright() (graphtage.printer.ansicontext method)": [[19, "graphtage.printer.ANSIContext.bright"]], "bright() (graphtage.printer.htmlansicontext method)": [[19, "graphtage.printer.HTMLANSIContext.bright"]], "bright() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.bright"]], "bright() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.bright"]], "close() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.close"]], "close() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.close"]], "closed (graphtage.printer.htmlprinter property)": [[19, "graphtage.printer.HTMLPrinter.closed"]], "closed (graphtage.printer.printer property)": [[19, "graphtage.printer.Printer.closed"]], "color() (graphtage.printer.ansicontext method)": [[19, "graphtage.printer.ANSIContext.color"]], "color() (graphtage.printer.htmlansicontext method)": [[19, "graphtage.printer.HTMLANSIContext.color"]], "color() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.color"]], "color() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.color"]], "context() (graphtage.printer.combiningmarkwriter method)": [[19, "graphtage.printer.CombiningMarkWriter.context"]], "context() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.context"]], "context() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.context"]], "dim() (graphtage.printer.ansicontext method)": [[19, "graphtage.printer.ANSIContext.dim"]], "dim() (graphtage.printer.htmlansicontext method)": [[19, "graphtage.printer.HTMLANSIContext.dim"]], "dim() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.dim"]], "dim() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.dim"]], "enabled (graphtage.printer.combiningmarkwriter attribute)": [[19, "graphtage.printer.CombiningMarkWriter.enabled"]], "end_code (graphtage.printer.ansicontext property)": [[19, "graphtage.printer.ANSIContext.end_code"]], "end_code (graphtage.printer.htmlansicontext property)": [[19, "graphtage.printer.HTMLANSIContext.end_code"]], "fileno() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.fileno"]], "fileno() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.fileno"]], "flush() (graphtage.printer.combiningmarkwriter method)": [[19, "graphtage.printer.CombiningMarkWriter.flush"]], "flush() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.flush"]], "flush() (graphtage.printer.nullwriter method)": [[19, "graphtage.printer.NullWriter.flush"]], "flush() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.flush"]], "flush() (graphtage.printer.rawwriter method)": [[19, "graphtage.printer.RawWriter.flush"]], "flush() (graphtage.printer.writer method)": [[19, "graphtage.printer.Writer.flush"]], "fore (graphtage.printer.ansicontext property)": [[19, "graphtage.printer.ANSIContext.fore"]], "fore (graphtage.printer.htmlansicontext property)": [[19, "graphtage.printer.HTMLANSIContext.fore"]], "get_back() (graphtage.printer.htmlansicontext static method)": [[19, "graphtage.printer.HTMLANSIContext.get_back"]], "get_fore() (graphtage.printer.htmlansicontext static method)": [[19, "graphtage.printer.HTMLANSIContext.get_fore"]], "graphtage.printer": [[19, "module-graphtage.printer"]], "html_element() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.html_element"]], "indent() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.indent"]], "indent() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.indent"]], "indent_str (graphtage.printer.htmlprinter attribute)": [[19, "graphtage.printer.HTMLPrinter.indent_str"]], "indent_str (graphtage.printer.printer attribute)": [[19, "graphtage.printer.Printer.indent_str"]], "indents (graphtage.printer.htmlprinter attribute)": [[19, "graphtage.printer.HTMLPrinter.indents"]], "indents (graphtage.printer.printer attribute)": [[19, "graphtage.printer.Printer.indents"]], "is_applied (graphtage.printer.ansicontext attribute)": [[19, "graphtage.printer.ANSIContext.is_applied"]], "is_applied (graphtage.printer.htmlansicontext attribute)": [[19, "graphtage.printer.HTMLANSIContext.is_applied"]], "isatty() (graphtage.printer.combiningmarkwriter method)": [[19, "graphtage.printer.CombiningMarkWriter.isatty"]], "isatty() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.isatty"]], "isatty() (graphtage.printer.nullwriter method)": [[19, "graphtage.printer.NullWriter.isatty"]], "isatty() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.isatty"]], "isatty() (graphtage.printer.rawwriter method)": [[19, "graphtage.printer.RawWriter.isatty"]], "isatty() (graphtage.printer.writer method)": [[19, "graphtage.printer.Writer.isatty"]], "marks (graphtage.printer.combiningmarkwriter property)": [[19, "graphtage.printer.CombiningMarkWriter.marks"]], "marks_str (graphtage.printer.combiningmarkwriter property)": [[19, "graphtage.printer.CombiningMarkWriter.marks_str"]], "mode (graphtage.printer.htmlprinter property)": [[19, "graphtage.printer.HTMLPrinter.mode"]], "mode (graphtage.printer.printer property)": [[19, "graphtage.printer.Printer.mode"]], "name (graphtage.printer.htmlprinter property)": [[19, "graphtage.printer.HTMLPrinter.name"]], "name (graphtage.printer.printer property)": [[19, "graphtage.printer.Printer.name"]], "newline() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.newline"]], "newline() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.newline"]], "only_ansi() (in module graphtage.printer)": [[19, "graphtage.printer.only_ansi"]], "out_stream (graphtage.printer.htmlprinter attribute)": [[19, "graphtage.printer.HTMLPrinter.out_stream"]], "out_stream (graphtage.printer.printer attribute)": [[19, "graphtage.printer.Printer.out_stream"]], "parent (graphtage.printer.ansicontext property)": [[19, "graphtage.printer.ANSIContext.parent"]], "parent (graphtage.printer.combiningmarkwriter attribute)": [[19, "graphtage.printer.CombiningMarkWriter.parent"]], "parent (graphtage.printer.htmlansicontext property)": [[19, "graphtage.printer.HTMLANSIContext.parent"]], "quiet (graphtage.printer.htmlprinter attribute)": [[19, "graphtage.printer.HTMLPrinter.quiet"]], "quiet (graphtage.printer.printer attribute)": [[19, "graphtage.printer.Printer.quiet"]], "raw_write() (graphtage.printer.combiningmarkwriter method)": [[19, "graphtage.printer.CombiningMarkWriter.raw_write"]], "raw_write() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.raw_write"]], "raw_write() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.raw_write"]], "raw_write() (graphtage.printer.rawwriter method)": [[19, "graphtage.printer.RawWriter.raw_write"]], "read() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.read"]], "read() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.read"]], "readable() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.readable"]], "readable() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.readable"]], "readline() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.readline"]], "readline() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.readline"]], "readlines() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.readlines"]], "readlines() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.readlines"]], "remove() (graphtage.printer.combiningmarkwriter method)": [[19, "graphtage.printer.CombiningMarkWriter.remove"]], "root (graphtage.printer.ansicontext property)": [[19, "graphtage.printer.ANSIContext.root"]], "root (graphtage.printer.htmlansicontext property)": [[19, "graphtage.printer.HTMLANSIContext.root"]], "seek() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.seek"]], "seek() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.seek"]], "seekable() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.seekable"]], "seekable() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.seekable"]], "start_code (graphtage.printer.ansicontext property)": [[19, "graphtage.printer.ANSIContext.start_code"]], "start_code (graphtage.printer.htmlansicontext property)": [[19, "graphtage.printer.HTMLANSIContext.start_code"]], "status_stream (graphtage.printer.htmlprinter attribute)": [[19, "graphtage.printer.HTMLPrinter.status_stream"]], "status_stream (graphtage.printer.printer attribute)": [[19, "graphtage.printer.Printer.status_stream"]], "stream (graphtage.printer.htmlansicontext attribute)": [[19, "graphtage.printer.HTMLANSIContext.stream"]], "strike() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.strike"]], "strike() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.strike"]], "style (graphtage.printer.ansicontext property)": [[19, "graphtage.printer.ANSIContext.style"]], "style (graphtage.printer.htmlansicontext property)": [[19, "graphtage.printer.HTMLANSIContext.style"]], "tell() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.tell"]], "tell() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.tell"]], "tqdm() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.tqdm"]], "tqdm() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.tqdm"]], "trange() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.trange"]], "trange() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.trange"]], "truncate() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.truncate"]], "truncate() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.truncate"]], "under_plus() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.under_plus"]], "under_plus() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.under_plus"]], "writable() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.writable"]], "writable() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.writable"]], "write() (graphtage.printer.combiningmarkwriter method)": [[19, "graphtage.printer.CombiningMarkWriter.write"]], "write() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.write"]], "write() (graphtage.printer.nullwriter method)": [[19, "graphtage.printer.NullWriter.write"]], "write() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.write"]], "write() (graphtage.printer.rawwriter method)": [[19, "graphtage.printer.RawWriter.write"]], "write() (graphtage.printer.writer method)": [[19, "graphtage.printer.Writer.write"]], "write_raw (graphtage.printer.htmlprinter attribute)": [[19, "graphtage.printer.HTMLPrinter.write_raw"]], "write_raw (graphtage.printer.printer attribute)": [[19, "graphtage.printer.Printer.write_raw"]], "writelines() (graphtage.printer.htmlprinter method)": [[19, "graphtage.printer.HTMLPrinter.writelines"]], "writelines() (graphtage.printer.printer method)": [[19, "graphtage.printer.Printer.writelines"]], "statuswriter (class in graphtage.progress)": [[20, "graphtage.progress.StatusWriter"]], "__init__() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.__init__"]], "close() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.close"]], "closed (graphtage.progress.statuswriter property)": [[20, "graphtage.progress.StatusWriter.closed"]], "fileno() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.fileno"]], "flush() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.flush"]], "graphtage.progress": [[20, "module-graphtage.progress"]], "isatty() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.isatty"]], "mode (graphtage.progress.statuswriter property)": [[20, "graphtage.progress.StatusWriter.mode"]], "name (graphtage.progress.statuswriter property)": [[20, "graphtage.progress.StatusWriter.name"]], "quiet (graphtage.progress.statuswriter attribute)": [[20, "graphtage.progress.StatusWriter.quiet"]], "read() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.read"]], "readable() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.readable"]], "readline() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.readline"]], "readlines() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.readlines"]], "seek() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.seek"]], "seekable() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.seekable"]], "status_stream (graphtage.progress.statuswriter attribute)": [[20, "graphtage.progress.StatusWriter.status_stream"]], "tell() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.tell"]], "tqdm() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.tqdm"]], "trange() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.trange"]], "truncate() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.truncate"]], "writable() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.writable"]], "write() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.write"]], "write_raw (graphtage.progress.statuswriter attribute)": [[20, "graphtage.progress.StatusWriter.write_raw"]], "writelines() (graphtage.progress.statuswriter method)": [[20, "graphtage.progress.StatusWriter.writelines"]], "astbuilder (class in graphtage.pydiff)": [[21, "graphtage.pydiff.ASTBuilder"]], "builders (graphtage.pydiff.astbuilder attribute)": [[21, "graphtage.pydiff.ASTBuilder.BUILDERS"]], "builders (graphtage.pydiff.pyobjbuilder attribute)": [[21, "graphtage.pydiff.PyObjBuilder.BUILDERS"]], "default_instance (graphtage.pydiff.pydictformatter attribute)": [[21, "graphtage.pydiff.PyDictFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pydiffformatter attribute)": [[21, "graphtage.pydiff.PyDiffFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pyimportformatter attribute)": [[21, "graphtage.pydiff.PyImportFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pylistformatter attribute)": [[21, "graphtage.pydiff.PyListFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pymoduleformatter attribute)": [[21, "graphtage.pydiff.PyModuleFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.pydiff.pyobjformatter attribute)": [[21, "graphtage.pydiff.PyObjFormatter.DEFAULT_INSTANCE"]], "expanders (graphtage.pydiff.astbuilder attribute)": [[21, "graphtage.pydiff.ASTBuilder.EXPANDERS"]], "expanders (graphtage.pydiff.pyobjbuilder attribute)": [[21, "graphtage.pydiff.PyObjBuilder.EXPANDERS"]], "pyalias (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyAlias"]], "pydictformatter (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyDictFormatter"]], "pydiffformatter (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyDiffFormatter"]], "pyimportformatter (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyImportFormatter"]], "pylistformatter (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyListFormatter"]], "pymoduleformatter (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyModuleFormatter"]], "pyobj (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyObj"]], "pyobjattribute (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyObjAttribute"]], "pyobjattributes (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyObjAttributes"]], "pyobjbuilder (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyObjBuilder"]], "pyobjedit (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyObjEdit"]], "pyobjfixedattributes (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyObjFixedAttributes"]], "pyobjformatter (class in graphtage.pydiff)": [[21, "graphtage.pydiff.PyObjFormatter"]], "__contains__() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.__contains__"]], "__getitem__() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.__getitem__"]], "__init__() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.__init__"]], "__init__() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.__init__"]], "__init__() (graphtage.pydiff.pydictformatter method)": [[21, "graphtage.pydiff.PyDictFormatter.__init__"]], "__init__() (graphtage.pydiff.pydiffformatter method)": [[21, "graphtage.pydiff.PyDiffFormatter.__init__"]], "__init__() (graphtage.pydiff.pyimportformatter method)": [[21, "graphtage.pydiff.PyImportFormatter.__init__"]], "__init__() (graphtage.pydiff.pylistformatter method)": [[21, "graphtage.pydiff.PyListFormatter.__init__"]], "__init__() (graphtage.pydiff.pymoduleformatter method)": [[21, "graphtage.pydiff.PyModuleFormatter.__init__"]], "__init__() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.__init__"]], "__init__() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.__init__"]], "__init__() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.__init__"]], "__init__() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.__init__"]], "__init__() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit.__init__"]], "__init__() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.__init__"]], "__init__() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.__init__"]], "__iter__() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit.__iter__"]], "__len__() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.__len__"]], "__lt__() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit.__lt__"]], "__new__() (graphtage.pydiff.pydictformatter static method)": [[21, "graphtage.pydiff.PyDictFormatter.__new__"]], "__new__() (graphtage.pydiff.pydiffformatter static method)": [[21, "graphtage.pydiff.PyDiffFormatter.__new__"]], "__new__() (graphtage.pydiff.pyimportformatter static method)": [[21, "graphtage.pydiff.PyImportFormatter.__new__"]], "__new__() (graphtage.pydiff.pylistformatter static method)": [[21, "graphtage.pydiff.PyListFormatter.__new__"]], "__new__() (graphtage.pydiff.pymoduleformatter static method)": [[21, "graphtage.pydiff.PyModuleFormatter.__new__"]], "__new__() (graphtage.pydiff.pyobjformatter static method)": [[21, "graphtage.pydiff.PyObjFormatter.__new__"]], "_debug_tighten_bounds() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit._debug_tighten_bounds"]], "_resolve() (graphtage.pydiff.astbuilder class method)": [[21, "graphtage.pydiff.ASTBuilder._resolve"]], "_resolve() (graphtage.pydiff.pyobjbuilder class method)": [[21, "graphtage.pydiff.PyObjBuilder._resolve"]], "add_edit_modifier() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.add_edit_modifier"]], "add_edit_modifier() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.add_edit_modifier"]], "add_edit_modifier() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.add_edit_modifier"]], "add_edit_modifier() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.add_edit_modifier"]], "add_edit_modifier() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.add_edit_modifier"]], "all_children_are_leaves() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.all_children_are_leaves"]], "as_name (graphtage.pydiff.pyalias attribute)": [[21, "graphtage.pydiff.PyAlias.as_name"]], "ast_to_tree() (in module graphtage.pydiff)": [[21, "graphtage.pydiff.ast_to_tree"]], "attr (graphtage.pydiff.pyobjattribute attribute)": [[21, "graphtage.pydiff.PyObjAttribute.attr"]], "bounds() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit.bounds"]], "build() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build"]], "build() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.build"]], "build_alias() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_alias"]], "build_assign() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_assign"]], "build_ast_dict() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_ast_dict"]], "build_ast_list() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_ast_list"]], "build_attribute() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_attribute"]], "build_bool() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_bool"]], "build_bool() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.build_bool"]], "build_call() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_call"]], "build_constant() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_constant"]], "build_dict() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_dict"]], "build_dict() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.build_dict"]], "build_float() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_float"]], "build_float() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.build_float"]], "build_import_from() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_import_from"]], "build_int() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_int"]], "build_int() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.build_int"]], "build_list() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_list"]], "build_list() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.build_list"]], "build_module() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_module"]], "build_name() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_name"]], "build_none() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_none"]], "build_none() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.build_none"]], "build_set() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_set"]], "build_set() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.build_set"]], "build_str() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_str"]], "build_str() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.build_str"]], "build_subscript() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_subscript"]], "build_tree() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.build_tree"]], "build_tree() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.build_tree"]], "build_tree() (in module graphtage.pydiff)": [[21, "graphtage.pydiff.build_tree"]], "builder() (graphtage.pydiff.astbuilder static method)": [[21, "graphtage.pydiff.ASTBuilder.builder"]], "builder() (graphtage.pydiff.pyobjbuilder static method)": [[21, "graphtage.pydiff.PyObjBuilder.builder"]], "calculate_total_size() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.calculate_total_size"]], "calculate_total_size() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.calculate_total_size"]], "children() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.children"]], "children() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.children"]], "children() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.children"]], "children() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.children"]], "children() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.children"]], "container_type (graphtage.pydiff.pyobjattributes property)": [[21, "graphtage.pydiff.PyObjAttributes.container_type"]], "container_type (graphtage.pydiff.pyobjfixedattributes property)": [[21, "graphtage.pydiff.PyObjFixedAttributes.container_type"]], "copy() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.copy"]], "copy() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.copy"]], "copy() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.copy"]], "copy() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.copy"]], "copy() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.copy"]], "copy_from() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.copy_from"]], "copy_from() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.copy_from"]], "copy_from() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.copy_from"]], "copy_from() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.copy_from"]], "copy_from() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.copy_from"]], "default_builder() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.default_builder"]], "default_builder() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.default_builder"]], "default_expander() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.default_expander"]], "default_expander() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.default_expander"]], "delimiter_callback (graphtage.pydiff.pydictformatter attribute)": [[21, "graphtage.pydiff.PyDictFormatter.delimiter_callback"]], "delimiter_callback (graphtage.pydiff.pylistformatter attribute)": [[21, "graphtage.pydiff.PyListFormatter.delimiter_callback"]], "dfs() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.dfs"]], "dfs() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.dfs"]], "dfs() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.dfs"]], "dfs() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.dfs"]], "dfs() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.dfs"]], "diff() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.diff"]], "diff() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.diff"]], "diff() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.diff"]], "diff() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.diff"]], "diff() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.diff"]], "diff() (in module graphtage.pydiff)": [[21, "graphtage.pydiff.diff"]], "edit_print() (graphtage.pydiff.pydictformatter method)": [[21, "graphtage.pydiff.PyDictFormatter.edit_print"]], "edit_print() (graphtage.pydiff.pyimportformatter method)": [[21, "graphtage.pydiff.PyImportFormatter.edit_print"]], "edit_print() (graphtage.pydiff.pylistformatter method)": [[21, "graphtage.pydiff.PyListFormatter.edit_print"]], "edit_print() (graphtage.pydiff.pymoduleformatter method)": [[21, "graphtage.pydiff.PyModuleFormatter.edit_print"]], "edit_print() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.edit_print"]], "editable_dict() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.editable_dict"]], "editable_dict() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.editable_dict"]], "edited (graphtage.pydiff.pyalias property)": [[21, "graphtage.pydiff.PyAlias.edited"]], "edited (graphtage.pydiff.pyobj property)": [[21, "graphtage.pydiff.PyObj.edited"]], "edited (graphtage.pydiff.pyobjattribute property)": [[21, "graphtage.pydiff.PyObjAttribute.edited"]], "edited (graphtage.pydiff.pyobjattributes property)": [[21, "graphtage.pydiff.PyObjAttributes.edited"]], "edited (graphtage.pydiff.pyobjfixedattributes property)": [[21, "graphtage.pydiff.PyObjFixedAttributes.edited"]], "edits() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.edits"]], "edits() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.edits"]], "edits() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.edits"]], "edits() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.edits"]], "edits() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit.edits"]], "edits() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.edits"]], "expand() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand"]], "expand() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.expand"]], "expand_assign() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand_assign"]], "expand_ast_dict() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand_ast_dict"]], "expand_call() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand_call"]], "expand_collection() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand_collection"]], "expand_constant() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand_constant"]], "expand_dict() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand_dict"]], "expand_dict() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.expand_dict"]], "expand_import_from() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand_import_from"]], "expand_list() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand_list"]], "expand_list() (graphtage.pydiff.pyobjbuilder method)": [[21, "graphtage.pydiff.PyObjBuilder.expand_list"]], "expand_module() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand_module"]], "expand_subscript() (graphtage.pydiff.astbuilder method)": [[21, "graphtage.pydiff.ASTBuilder.expand_subscript"]], "expander() (graphtage.pydiff.astbuilder static method)": [[21, "graphtage.pydiff.ASTBuilder.expander"]], "expander() (graphtage.pydiff.pyobjbuilder static method)": [[21, "graphtage.pydiff.PyObjBuilder.expander"]], "from_dict() (graphtage.pydiff.pyobjattributes class method)": [[21, "graphtage.pydiff.PyObjAttributes.from_dict"]], "from_dict() (graphtage.pydiff.pyobjfixedattributes class method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.from_dict"]], "from_node (graphtage.pydiff.pyobjedit attribute)": [[21, "graphtage.pydiff.PyObjEdit.from_node"]], "get_all_edit_contexts() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.get_all_edit_contexts"]], "get_all_edits() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.get_all_edits"]], "get_all_edits() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.get_all_edits"]], "get_formatter() (graphtage.pydiff.pydictformatter method)": [[21, "graphtage.pydiff.PyDictFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pydiffformatter method)": [[21, "graphtage.pydiff.PyDiffFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pyimportformatter method)": [[21, "graphtage.pydiff.PyImportFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pylistformatter method)": [[21, "graphtage.pydiff.PyListFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pymoduleformatter method)": [[21, "graphtage.pydiff.PyModuleFormatter.get_formatter"]], "get_formatter() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.get_formatter"]], "graphtage.pydiff": [[21, "module-graphtage.pydiff"]], "has_non_zero_cost() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit.has_non_zero_cost"]], "initial_bounds (graphtage.pydiff.pyobjedit attribute)": [[21, "graphtage.pydiff.PyObjEdit.initial_bounds"]], "is_complete() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit.is_complete"]], "is_leaf (graphtage.pydiff.pyalias property)": [[21, "graphtage.pydiff.PyAlias.is_leaf"]], "is_leaf (graphtage.pydiff.pyobj property)": [[21, "graphtage.pydiff.PyObj.is_leaf"]], "is_leaf (graphtage.pydiff.pyobjattribute property)": [[21, "graphtage.pydiff.PyObjAttribute.is_leaf"]], "is_leaf (graphtage.pydiff.pyobjattributes property)": [[21, "graphtage.pydiff.PyObjAttributes.is_leaf"]], "is_leaf (graphtage.pydiff.pyobjfixedattributes property)": [[21, "graphtage.pydiff.PyObjFixedAttributes.is_leaf"]], "is_partial (graphtage.pydiff.pydictformatter attribute)": [[21, "graphtage.pydiff.PyDictFormatter.is_partial"]], "is_partial (graphtage.pydiff.pydiffformatter attribute)": [[21, "graphtage.pydiff.PyDiffFormatter.is_partial"]], "is_partial (graphtage.pydiff.pyimportformatter attribute)": [[21, "graphtage.pydiff.PyImportFormatter.is_partial"]], "is_partial (graphtage.pydiff.pylistformatter attribute)": [[21, "graphtage.pydiff.PyListFormatter.is_partial"]], "is_partial (graphtage.pydiff.pymoduleformatter attribute)": [[21, "graphtage.pydiff.PyModuleFormatter.is_partial"]], "is_partial (graphtage.pydiff.pyobjformatter attribute)": [[21, "graphtage.pydiff.PyObjFormatter.is_partial"]], "item_newline() (graphtage.pydiff.pydictformatter method)": [[21, "graphtage.pydiff.PyDictFormatter.item_newline"]], "item_newline() (graphtage.pydiff.pyimportformatter method)": [[21, "graphtage.pydiff.PyImportFormatter.item_newline"]], "item_newline() (graphtage.pydiff.pylistformatter method)": [[21, "graphtage.pydiff.PyListFormatter.item_newline"]], "item_newline() (graphtage.pydiff.pymoduleformatter method)": [[21, "graphtage.pydiff.PyModuleFormatter.item_newline"]], "item_newline() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.item_newline"]], "items() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.items"]], "items() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.items"]], "items() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.items"]], "items() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.items"]], "items_indent() (graphtage.pydiff.pydictformatter method)": [[21, "graphtage.pydiff.PyDictFormatter.items_indent"]], "items_indent() (graphtage.pydiff.pyimportformatter method)": [[21, "graphtage.pydiff.PyImportFormatter.items_indent"]], "items_indent() (graphtage.pydiff.pylistformatter method)": [[21, "graphtage.pydiff.PyListFormatter.items_indent"]], "items_indent() (graphtage.pydiff.pymoduleformatter method)": [[21, "graphtage.pydiff.PyModuleFormatter.items_indent"]], "items_indent() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.items_indent"]], "make_edited() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.make_edited"]], "make_edited() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.make_edited"]], "make_edited() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.make_edited"]], "make_edited() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.make_edited"]], "make_edited() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.make_edited"]], "make_key_value_pair_node() (graphtage.pydiff.pyobjattributes class method)": [[21, "graphtage.pydiff.PyObjAttributes.make_key_value_pair_node"]], "make_key_value_pair_node() (graphtage.pydiff.pyobjfixedattributes class method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.make_key_value_pair_node"]], "name (graphtage.pydiff.pyalias attribute)": [[21, "graphtage.pydiff.PyAlias.name"]], "object (graphtage.pydiff.pyobjattribute attribute)": [[21, "graphtage.pydiff.PyObjAttribute.object"]], "on_diff() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit.on_diff"]], "options (graphtage.pydiff.astbuilder attribute)": [[21, "graphtage.pydiff.ASTBuilder.options"]], "options (graphtage.pydiff.pyobjbuilder attribute)": [[21, "graphtage.pydiff.PyObjBuilder.options"]], "parent (graphtage.pydiff.pyalias property)": [[21, "graphtage.pydiff.PyAlias.parent"]], "parent (graphtage.pydiff.pydictformatter attribute)": [[21, "graphtage.pydiff.PyDictFormatter.parent"]], "parent (graphtage.pydiff.pydiffformatter attribute)": [[21, "graphtage.pydiff.PyDiffFormatter.parent"]], "parent (graphtage.pydiff.pyimportformatter attribute)": [[21, "graphtage.pydiff.PyImportFormatter.parent"]], "parent (graphtage.pydiff.pylistformatter attribute)": [[21, "graphtage.pydiff.PyListFormatter.parent"]], "parent (graphtage.pydiff.pymoduleformatter attribute)": [[21, "graphtage.pydiff.PyModuleFormatter.parent"]], "parent (graphtage.pydiff.pyobj property)": [[21, "graphtage.pydiff.PyObj.parent"]], "parent (graphtage.pydiff.pyobjattribute property)": [[21, "graphtage.pydiff.PyObjAttribute.parent"]], "parent (graphtage.pydiff.pyobjattributes property)": [[21, "graphtage.pydiff.PyObjAttributes.parent"]], "parent (graphtage.pydiff.pyobjfixedattributes property)": [[21, "graphtage.pydiff.PyObjFixedAttributes.parent"]], "parent (graphtage.pydiff.pyobjformatter attribute)": [[21, "graphtage.pydiff.PyObjFormatter.parent"]], "post_init() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.post_init"]], "post_init() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.post_init"]], "print() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.print"]], "print() (graphtage.pydiff.pydictformatter method)": [[21, "graphtage.pydiff.PyDictFormatter.print"]], "print() (graphtage.pydiff.pydiffformatter method)": [[21, "graphtage.pydiff.PyDiffFormatter.print"]], "print() (graphtage.pydiff.pyimportformatter method)": [[21, "graphtage.pydiff.PyImportFormatter.print"]], "print() (graphtage.pydiff.pylistformatter method)": [[21, "graphtage.pydiff.PyListFormatter.print"]], "print() (graphtage.pydiff.pymoduleformatter method)": [[21, "graphtage.pydiff.PyModuleFormatter.print"]], "print() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.print"]], "print() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.print"]], "print() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.print"]], "print() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit.print"]], "print() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.print"]], "print() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.print"]], "print_assignment() (graphtage.pydiff.pyimportformatter method)": [[21, "graphtage.pydiff.PyImportFormatter.print_Assignment"]], "print_call() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.print_Call"]], "print_callarguments() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.print_CallArguments"]], "print_import() (graphtage.pydiff.pyimportformatter method)": [[21, "graphtage.pydiff.PyImportFormatter.print_Import"]], "print_keywordargument() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.print_KeywordArgument"]], "print_listnode() (graphtage.pydiff.pylistformatter method)": [[21, "graphtage.pydiff.PyListFormatter.print_ListNode"]], "print_mappingnode() (graphtage.pydiff.pydictformatter method)": [[21, "graphtage.pydiff.PyDictFormatter.print_MappingNode"]], "print_module() (graphtage.pydiff.pymoduleformatter method)": [[21, "graphtage.pydiff.PyModuleFormatter.print_Module"]], "print_multisetnode() (graphtage.pydiff.pydictformatter method)": [[21, "graphtage.pydiff.PyDictFormatter.print_MultiSetNode"]], "print_pyalias() (graphtage.pydiff.pydiffformatter method)": [[21, "graphtage.pydiff.PyDiffFormatter.print_PyAlias"]], "print_pyobj() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.print_PyObj"]], "print_pyobjattribute() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.print_PyObjAttribute"]], "print_pyobjattributes() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.print_PyObjAttributes"]], "print_pyobjfixedattributes() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.print_PyObjFixedAttributes"]], "print_sequencenode() (graphtage.pydiff.pydictformatter method)": [[21, "graphtage.pydiff.PyDictFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.pydiff.pyimportformatter method)": [[21, "graphtage.pydiff.PyImportFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.pydiff.pylistformatter method)": [[21, "graphtage.pydiff.PyListFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.pydiff.pymoduleformatter method)": [[21, "graphtage.pydiff.PyModuleFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.pydiff.pyobjformatter method)": [[21, "graphtage.pydiff.PyObjFormatter.print_SequenceNode"]], "print_subscript() (graphtage.pydiff.pydiffformatter method)": [[21, "graphtage.pydiff.PyDiffFormatter.print_Subscript"]], "print_diff() (in module graphtage.pydiff)": [[21, "graphtage.pydiff.print_diff"]], "print_parent_context() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.print_parent_context"]], "print_parent_context() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.print_parent_context"]], "resolve_builder() (graphtage.pydiff.astbuilder class method)": [[21, "graphtage.pydiff.ASTBuilder.resolve_builder"]], "resolve_builder() (graphtage.pydiff.pyobjbuilder class method)": [[21, "graphtage.pydiff.PyObjBuilder.resolve_builder"]], "resolve_expander() (graphtage.pydiff.astbuilder class method)": [[21, "graphtage.pydiff.ASTBuilder.resolve_expander"]], "resolve_expander() (graphtage.pydiff.pyobjbuilder class method)": [[21, "graphtage.pydiff.PyObjBuilder.resolve_expander"]], "root (graphtage.pydiff.pydictformatter property)": [[21, "graphtage.pydiff.PyDictFormatter.root"]], "root (graphtage.pydiff.pydiffformatter property)": [[21, "graphtage.pydiff.PyDiffFormatter.root"]], "root (graphtage.pydiff.pyimportformatter property)": [[21, "graphtage.pydiff.PyImportFormatter.root"]], "root (graphtage.pydiff.pylistformatter property)": [[21, "graphtage.pydiff.PyListFormatter.root"]], "root (graphtage.pydiff.pymoduleformatter property)": [[21, "graphtage.pydiff.PyModuleFormatter.root"]], "root (graphtage.pydiff.pyobjformatter property)": [[21, "graphtage.pydiff.PyObjFormatter.root"]], "sub_format_types (graphtage.pydiff.pydictformatter attribute)": [[21, "graphtage.pydiff.PyDictFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pydiffformatter attribute)": [[21, "graphtage.pydiff.PyDiffFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pyimportformatter attribute)": [[21, "graphtage.pydiff.PyImportFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pylistformatter attribute)": [[21, "graphtage.pydiff.PyListFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pymoduleformatter attribute)": [[21, "graphtage.pydiff.PyModuleFormatter.sub_format_types"]], "sub_format_types (graphtage.pydiff.pyobjformatter attribute)": [[21, "graphtage.pydiff.PyObjFormatter.sub_format_types"]], "sub_formatters (graphtage.pydiff.pydictformatter attribute)": [[21, "graphtage.pydiff.PyDictFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pydiffformatter attribute)": [[21, "graphtage.pydiff.PyDiffFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pyimportformatter attribute)": [[21, "graphtage.pydiff.PyImportFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pylistformatter attribute)": [[21, "graphtage.pydiff.PyListFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pymoduleformatter attribute)": [[21, "graphtage.pydiff.PyModuleFormatter.sub_formatters"]], "sub_formatters (graphtage.pydiff.pyobjformatter attribute)": [[21, "graphtage.pydiff.PyObjFormatter.sub_formatters"]], "tighten_bounds() (graphtage.pydiff.pyobjedit method)": [[21, "graphtage.pydiff.PyObjEdit.tighten_bounds"]], "to_obj() (graphtage.pydiff.pyalias method)": [[21, "graphtage.pydiff.PyAlias.to_obj"]], "to_obj() (graphtage.pydiff.pyobj method)": [[21, "graphtage.pydiff.PyObj.to_obj"]], "to_obj() (graphtage.pydiff.pyobjattribute method)": [[21, "graphtage.pydiff.PyObjAttribute.to_obj"]], "to_obj() (graphtage.pydiff.pyobjattributes method)": [[21, "graphtage.pydiff.PyObjAttributes.to_obj"]], "to_obj() (graphtage.pydiff.pyobjfixedattributes method)": [[21, "graphtage.pydiff.PyObjFixedAttributes.to_obj"]], "total_size (graphtage.pydiff.pyalias property)": [[21, "graphtage.pydiff.PyAlias.total_size"]], "total_size (graphtage.pydiff.pyobj property)": [[21, "graphtage.pydiff.PyObj.total_size"]], "total_size (graphtage.pydiff.pyobjattribute property)": [[21, "graphtage.pydiff.PyObjAttribute.total_size"]], "total_size (graphtage.pydiff.pyobjattributes property)": [[21, "graphtage.pydiff.PyObjAttributes.total_size"]], "total_size (graphtage.pydiff.pyobjfixedattributes property)": [[21, "graphtage.pydiff.PyObjFixedAttributes.total_size"]], "valid (graphtage.pydiff.pyobjedit property)": [[21, "graphtage.pydiff.PyObjEdit.valid"]], "iterativetighteningsearch (class in graphtage.search)": [[22, "graphtage.search.IterativeTighteningSearch"]], "__bool__() (graphtage.search.iterativetighteningsearch method)": [[22, "graphtage.search.IterativeTighteningSearch.__bool__"]], "__init__() (graphtage.search.iterativetighteningsearch method)": [[22, "graphtage.search.IterativeTighteningSearch.__init__"]], "best_match (graphtage.search.iterativetighteningsearch property)": [[22, "graphtage.search.IterativeTighteningSearch.best_match"]], "bounds() (graphtage.search.iterativetighteningsearch method)": [[22, "graphtage.search.IterativeTighteningSearch.bounds"]], "goal_test() (graphtage.search.iterativetighteningsearch method)": [[22, "graphtage.search.IterativeTighteningSearch.goal_test"]], "graphtage.search": [[22, "module-graphtage.search"]], "remove_best() (graphtage.search.iterativetighteningsearch method)": [[22, "graphtage.search.IterativeTighteningSearch.remove_best"]], "search() (graphtage.search.iterativetighteningsearch method)": [[22, "graphtage.search.IterativeTighteningSearch.search"]], "tighten_bounds() (graphtage.search.iterativetighteningsearch method)": [[22, "graphtage.search.IterativeTighteningSearch.tighten_bounds"]], "default_instance (graphtage.sequences.sequenceformatter attribute)": [[23, "graphtage.sequences.SequenceFormatter.DEFAULT_INSTANCE"]], "fixedlengthsequenceedit (class in graphtage.sequences)": [[23, "graphtage.sequences.FixedLengthSequenceEdit"]], "sequenceedit (class in graphtage.sequences)": [[23, "graphtage.sequences.SequenceEdit"]], "sequenceformatter (class in graphtage.sequences)": [[23, "graphtage.sequences.SequenceFormatter"]], "sequencenode (class in graphtage.sequences)": [[23, "graphtage.sequences.SequenceNode"]], "__init__() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.__init__"]], "__init__() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit.__init__"]], "__init__() (graphtage.sequences.sequenceformatter method)": [[23, "graphtage.sequences.SequenceFormatter.__init__"]], "__init__() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.__init__"]], "__iter__() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.__iter__"]], "__iter__() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit.__iter__"]], "__iter__() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.__iter__"]], "__len__() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.__len__"]], "__lt__() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.__lt__"]], "__lt__() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit.__lt__"]], "__new__() (graphtage.sequences.sequenceformatter static method)": [[23, "graphtage.sequences.SequenceFormatter.__new__"]], "_debug_tighten_bounds() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit._debug_tighten_bounds"]], "_debug_tighten_bounds() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit._debug_tighten_bounds"]], "add_edit_modifier() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.add_edit_modifier"]], "all_children_are_leaves() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.all_children_are_leaves"]], "bounds() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.bounds"]], "bounds() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit.bounds"]], "calculate_total_size() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.calculate_total_size"]], "children() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.children"]], "container_type (graphtage.sequences.sequencenode property)": [[23, "graphtage.sequences.SequenceNode.container_type"]], "copy() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.copy"]], "copy_from() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.copy_from"]], "dfs() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.dfs"]], "diff() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.diff"]], "edit_print() (graphtage.sequences.sequenceformatter method)": [[23, "graphtage.sequences.SequenceFormatter.edit_print"]], "editable_dict() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.editable_dict"]], "edited (graphtage.sequences.sequencenode property)": [[23, "graphtage.sequences.SequenceNode.edited"]], "edits() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.edits"]], "edits() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit.edits"]], "edits() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.edits"]], "from_node (graphtage.sequences.fixedlengthsequenceedit attribute)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.from_node"]], "from_node (graphtage.sequences.sequenceedit attribute)": [[23, "graphtage.sequences.SequenceEdit.from_node"]], "get_all_edit_contexts() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.get_all_edit_contexts"]], "get_all_edits() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.get_all_edits"]], "get_formatter() (graphtage.sequences.sequenceformatter method)": [[23, "graphtage.sequences.SequenceFormatter.get_formatter"]], "graphtage.sequences": [[23, "module-graphtage.sequences"]], "has_non_zero_cost() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.has_non_zero_cost"]], "has_non_zero_cost() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit.has_non_zero_cost"]], "initial_bounds (graphtage.sequences.fixedlengthsequenceedit attribute)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.initial_bounds"]], "initial_bounds (graphtage.sequences.sequenceedit attribute)": [[23, "graphtage.sequences.SequenceEdit.initial_bounds"]], "is_complete() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.is_complete"]], "is_complete() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit.is_complete"]], "is_leaf (graphtage.sequences.sequencenode property)": [[23, "graphtage.sequences.SequenceNode.is_leaf"]], "is_partial (graphtage.sequences.sequenceformatter attribute)": [[23, "graphtage.sequences.SequenceFormatter.is_partial"]], "item_newline() (graphtage.sequences.sequenceformatter method)": [[23, "graphtage.sequences.SequenceFormatter.item_newline"]], "items_indent() (graphtage.sequences.sequenceformatter method)": [[23, "graphtage.sequences.SequenceFormatter.items_indent"]], "make_edited() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.make_edited"]], "on_diff() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.on_diff"]], "on_diff() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit.on_diff"]], "parent (graphtage.sequences.sequenceformatter attribute)": [[23, "graphtage.sequences.SequenceFormatter.parent"]], "parent (graphtage.sequences.sequencenode property)": [[23, "graphtage.sequences.SequenceNode.parent"]], "print() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.print"]], "print() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit.print"]], "print() (graphtage.sequences.sequenceformatter method)": [[23, "graphtage.sequences.SequenceFormatter.print"]], "print() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.print"]], "print_sequencenode() (graphtage.sequences.sequenceformatter method)": [[23, "graphtage.sequences.SequenceFormatter.print_SequenceNode"]], "print_parent_context() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.print_parent_context"]], "root (graphtage.sequences.sequenceformatter property)": [[23, "graphtage.sequences.SequenceFormatter.root"]], "sequence (graphtage.sequences.fixedlengthsequenceedit property)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.sequence"]], "sequence (graphtage.sequences.sequenceedit property)": [[23, "graphtage.sequences.SequenceEdit.sequence"]], "sub_format_types (graphtage.sequences.sequenceformatter attribute)": [[23, "graphtage.sequences.SequenceFormatter.sub_format_types"]], "sub_formatters (graphtage.sequences.sequenceformatter attribute)": [[23, "graphtage.sequences.SequenceFormatter.sub_formatters"]], "tighten_bounds() (graphtage.sequences.fixedlengthsequenceedit method)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.tighten_bounds"]], "tighten_bounds() (graphtage.sequences.sequenceedit method)": [[23, "graphtage.sequences.SequenceEdit.tighten_bounds"]], "to_obj() (graphtage.sequences.sequencenode method)": [[23, "graphtage.sequences.SequenceNode.to_obj"]], "total_size (graphtage.sequences.sequencenode property)": [[23, "graphtage.sequences.SequenceNode.total_size"]], "valid (graphtage.sequences.fixedlengthsequenceedit property)": [[23, "graphtage.sequences.FixedLengthSequenceEdit.valid"]], "valid (graphtage.sequences.sequenceedit property)": [[23, "graphtage.sequences.SequenceEdit.valid"]], "hashablecounter (class in graphtage.utils)": [[24, "graphtage.utils.HashableCounter"]], "orderedcounter (class in graphtage.utils)": [[24, "graphtage.utils.OrderedCounter"]], "sized (class in graphtage.utils)": [[24, "graphtage.utils.Sized"]], "sparsematrix (class in graphtage.utils)": [[24, "graphtage.utils.SparseMatrix"]], "sparsematrix.sparsematrixrow (class in graphtage.utils)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow"]], "tempfile (class in graphtage.utils)": [[24, "graphtage.utils.Tempfile"]], "__add__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__add__"]], "__add__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__add__"]], "__and__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__and__"]], "__and__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__and__"]], "__delitem__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__delitem__"]], "__delitem__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__delitem__"]], "__enter__() (graphtage.utils.tempfile method)": [[24, "graphtage.utils.Tempfile.__enter__"]], "__exit__() (graphtage.utils.tempfile method)": [[24, "graphtage.utils.Tempfile.__exit__"]], "__getitem__() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.__getitem__"]], "__getitem__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.__getitem__"]], "__iadd__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__iadd__"]], "__iadd__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__iadd__"]], "__iand__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__iand__"]], "__iand__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__iand__"]], "__init__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__init__"]], "__init__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__init__"]], "__init__() (graphtage.utils.sized method)": [[24, "graphtage.utils.Sized.__init__"]], "__init__() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.__init__"]], "__init__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.__init__"]], "__init__() (graphtage.utils.tempfile method)": [[24, "graphtage.utils.Tempfile.__init__"]], "__ior__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__ior__"]], "__ior__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__ior__"]], "__isub__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__isub__"]], "__isub__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__isub__"]], "__iter__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.__iter__"]], "__len__() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.__len__"]], "__len__() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.__len__"]], "__missing__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__missing__"]], "__missing__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__missing__"]], "__neg__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__neg__"]], "__neg__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__neg__"]], "__or__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__or__"]], "__or__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__or__"]], "__pos__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__pos__"]], "__pos__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__pos__"]], "__sub__() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.__sub__"]], "__sub__() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.__sub__"]], "_keep_positive() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter._keep_positive"]], "_keep_positive() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter._keep_positive"]], "clear() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.clear"]], "clear() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.clear"]], "clear() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.clear"]], "clear() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.clear"]], "copy() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.copy"]], "copy() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.copy"]], "default_value (graphtage.utils.sparsematrix attribute)": [[24, "graphtage.utils.SparseMatrix.default_value"]], "default_value (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.default_value"]], "elements() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.elements"]], "elements() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.elements"]], "fromkeys() (graphtage.utils.hashablecounter class method)": [[24, "graphtage.utils.HashableCounter.fromkeys"]], "fromkeys() (graphtage.utils.orderedcounter class method)": [[24, "graphtage.utils.OrderedCounter.fromkeys"]], "get() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.get"]], "get() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.get"]], "get() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.get"]], "get() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.get"]], "getsizeof (graphtage.utils.sized attribute)": [[24, "graphtage.utils.Sized.getsizeof"]], "getsizeof() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.getsizeof"]], "getsizeof() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.getsizeof"]], "getsizeof() (in module graphtage.utils)": [[24, "graphtage.utils.getsizeof"]], "graphtage.utils": [[24, "module-graphtage.utils"]], "items() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.items"]], "items() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.items"]], "items() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.items"]], "items() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.items"]], "keys() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.keys"]], "keys() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.keys"]], "keys() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.keys"]], "keys() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.keys"]], "largest() (in module graphtage.utils)": [[24, "graphtage.utils.largest"]], "most_common() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.most_common"]], "most_common() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.most_common"]], "move_to_end() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.move_to_end"]], "num_cols (graphtage.utils.sparsematrix attribute)": [[24, "graphtage.utils.SparseMatrix.num_cols"]], "num_cols (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.num_cols"]], "num_filled_elements() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.num_filled_elements"]], "num_rows (graphtage.utils.sparsematrix attribute)": [[24, "graphtage.utils.SparseMatrix.num_rows"]], "pop() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.pop"]], "pop() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.pop"]], "pop() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.pop"]], "popitem() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.popitem"]], "popitem() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.popitem"]], "popitem() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.popitem"]], "row (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.row"]], "row_num (graphtage.utils.sparsematrix.sparsematrixrow attribute)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.row_num"]], "rows (graphtage.utils.sparsematrix attribute)": [[24, "graphtage.utils.SparseMatrix.rows"]], "setdefault() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.setdefault"]], "setdefault() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.setdefault"]], "setdefault() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.setdefault"]], "shape() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.shape"]], "shape() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.shape"]], "smallest() (in module graphtage.utils)": [[24, "graphtage.utils.smallest"]], "subtract() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.subtract"]], "subtract() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.subtract"]], "update() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.update"]], "update() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.update"]], "update() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.update"]], "values() (graphtage.utils.hashablecounter method)": [[24, "graphtage.utils.HashableCounter.values"]], "values() (graphtage.utils.orderedcounter method)": [[24, "graphtage.utils.OrderedCounter.values"]], "values() (graphtage.utils.sparsematrix method)": [[24, "graphtage.utils.SparseMatrix.values"]], "values() (graphtage.utils.sparsematrix.sparsematrixrow method)": [[24, "graphtage.utils.SparseMatrix.SparseMatrixRow.values"]], "dev_build (in module graphtage.version)": [[25, "graphtage.version.DEV_BUILD"]], "version_string (in module graphtage.version)": [[25, "graphtage.version.VERSION_STRING"]], "__version__ (in module graphtage.version)": [[25, "graphtage.version.__version__"]], "git_branch() (in module graphtage.version)": [[25, "graphtage.version.git_branch"]], "graphtage.version": [[25, "module-graphtage.version"]], "default_instance (graphtage.xml.xmlchildformatter attribute)": [[26, "graphtage.xml.XMLChildFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.xml.xmlelementattribformatter attribute)": [[26, "graphtage.xml.XMLElementAttribFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.xml.xmlformatter attribute)": [[26, "graphtage.xml.XMLFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.xml.xmlstringformatter attribute)": [[26, "graphtage.xml.XMLStringFormatter.DEFAULT_INSTANCE"]], "html (class in graphtage.xml)": [[26, "graphtage.xml.HTML"]], "xml (class in graphtage.xml)": [[26, "graphtage.xml.XML"]], "xmlchildformatter (class in graphtage.xml)": [[26, "graphtage.xml.XMLChildFormatter"]], "xmlelement (class in graphtage.xml)": [[26, "graphtage.xml.XMLElement"]], "xmlelementattribformatter (class in graphtage.xml)": [[26, "graphtage.xml.XMLElementAttribFormatter"]], "xmlelementchildren (class in graphtage.xml)": [[26, "graphtage.xml.XMLElementChildren"]], "xmlelementedit (class in graphtage.xml)": [[26, "graphtage.xml.XMLElementEdit"]], "xmlelementobj (class in graphtage.xml)": [[26, "graphtage.xml.XMLElementObj"]], "xmlformatter (class in graphtage.xml)": [[26, "graphtage.xml.XMLFormatter"]], "xmlstringformatter (class in graphtage.xml)": [[26, "graphtage.xml.XMLStringFormatter"]], "__init__() (graphtage.xml.html method)": [[26, "graphtage.xml.HTML.__init__"]], "__init__() (graphtage.xml.xml method)": [[26, "graphtage.xml.XML.__init__"]], "__init__() (graphtage.xml.xmlchildformatter method)": [[26, "graphtage.xml.XMLChildFormatter.__init__"]], "__init__() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.__init__"]], "__init__() (graphtage.xml.xmlelementattribformatter method)": [[26, "graphtage.xml.XMLElementAttribFormatter.__init__"]], "__init__() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.__init__"]], "__init__() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit.__init__"]], "__init__() (graphtage.xml.xmlelementobj method)": [[26, "graphtage.xml.XMLElementObj.__init__"]], "__init__() (graphtage.xml.xmlformatter method)": [[26, "graphtage.xml.XMLFormatter.__init__"]], "__init__() (graphtage.xml.xmlstringformatter method)": [[26, "graphtage.xml.XMLStringFormatter.__init__"]], "__iter__() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.__iter__"]], "__iter__() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit.__iter__"]], "__len__() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.__len__"]], "__lt__() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit.__lt__"]], "__new__() (graphtage.xml.xmlchildformatter static method)": [[26, "graphtage.xml.XMLChildFormatter.__new__"]], "__new__() (graphtage.xml.xmlelementattribformatter static method)": [[26, "graphtage.xml.XMLElementAttribFormatter.__new__"]], "__new__() (graphtage.xml.xmlformatter static method)": [[26, "graphtage.xml.XMLFormatter.__new__"]], "__new__() (graphtage.xml.xmlstringformatter static method)": [[26, "graphtage.xml.XMLStringFormatter.__new__"]], "_debug_tighten_bounds() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit._debug_tighten_bounds"]], "add_edit_modifier() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.add_edit_modifier"]], "add_edit_modifier() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.add_edit_modifier"]], "all_children_are_leaves() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.all_children_are_leaves"]], "all_children_are_leaves() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.all_children_are_leaves"]], "attrib (graphtage.xml.xmlelementobj attribute)": [[26, "graphtage.xml.XMLElementObj.attrib"]], "attrib_edit (graphtage.xml.xmlelementedit attribute)": [[26, "graphtage.xml.XMLElementEdit.attrib_edit"]], "bounds() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit.bounds"]], "build_tree() (graphtage.xml.html method)": [[26, "graphtage.xml.HTML.build_tree"]], "build_tree() (graphtage.xml.xml method)": [[26, "graphtage.xml.XML.build_tree"]], "build_tree() (in module graphtage.xml)": [[26, "graphtage.xml.build_tree"]], "build_tree_handling_errors() (graphtage.xml.html method)": [[26, "graphtage.xml.HTML.build_tree_handling_errors"]], "build_tree_handling_errors() (graphtage.xml.xml method)": [[26, "graphtage.xml.XML.build_tree_handling_errors"]], "calculate_total_size() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.calculate_total_size"]], "calculate_total_size() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.calculate_total_size"]], "child_edit (graphtage.xml.xmlelementedit attribute)": [[26, "graphtage.xml.XMLElementEdit.child_edit"]], "children (graphtage.xml.xmlelementobj attribute)": [[26, "graphtage.xml.XMLElementObj.children"]], "children() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.children"]], "children() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.children"]], "container_type (graphtage.xml.xmlelementchildren property)": [[26, "graphtage.xml.XMLElementChildren.container_type"]], "context() (graphtage.xml.xmlstringformatter method)": [[26, "graphtage.xml.XMLStringFormatter.context"]], "copy() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.copy"]], "copy() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.copy"]], "copy_from() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.copy_from"]], "copy_from() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.copy_from"]], "default_instance (graphtage.xml.html attribute)": [[26, "graphtage.xml.HTML.default_instance"]], "default_instance (graphtage.xml.xml attribute)": [[26, "graphtage.xml.XML.default_instance"]], "delimiter_callback (graphtage.xml.xmlchildformatter attribute)": [[26, "graphtage.xml.XMLChildFormatter.delimiter_callback"]], "delimiter_callback (graphtage.xml.xmlelementattribformatter attribute)": [[26, "graphtage.xml.XMLElementAttribFormatter.delimiter_callback"]], "dfs() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.dfs"]], "dfs() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.dfs"]], "diff() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.diff"]], "diff() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.diff"]], "edit_print() (graphtage.xml.xmlchildformatter method)": [[26, "graphtage.xml.XMLChildFormatter.edit_print"]], "edit_print() (graphtage.xml.xmlelementattribformatter method)": [[26, "graphtage.xml.XMLElementAttribFormatter.edit_print"]], "editable_dict() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.editable_dict"]], "editable_dict() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.editable_dict"]], "edited (graphtage.xml.xmlelement property)": [[26, "graphtage.xml.XMLElement.edited"]], "edited (graphtage.xml.xmlelementchildren property)": [[26, "graphtage.xml.XMLElementChildren.edited"]], "edits() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.edits"]], "edits() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.edits"]], "edits() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit.edits"]], "escape() (graphtage.xml.xmlstringformatter method)": [[26, "graphtage.xml.XMLStringFormatter.escape"]], "from_node (graphtage.xml.xmlelementedit attribute)": [[26, "graphtage.xml.XMLElementEdit.from_node"]], "get_all_edit_contexts() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.get_all_edit_contexts"]], "get_all_edit_contexts() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.get_all_edit_contexts"]], "get_all_edits() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.get_all_edits"]], "get_all_edits() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.get_all_edits"]], "get_default_formatter() (graphtage.xml.html method)": [[26, "graphtage.xml.HTML.get_default_formatter"]], "get_default_formatter() (graphtage.xml.xml method)": [[26, "graphtage.xml.XML.get_default_formatter"]], "get_formatter() (graphtage.xml.xmlchildformatter method)": [[26, "graphtage.xml.XMLChildFormatter.get_formatter"]], "get_formatter() (graphtage.xml.xmlelementattribformatter method)": [[26, "graphtage.xml.XMLElementAttribFormatter.get_formatter"]], "get_formatter() (graphtage.xml.xmlformatter method)": [[26, "graphtage.xml.XMLFormatter.get_formatter"]], "get_formatter() (graphtage.xml.xmlstringformatter method)": [[26, "graphtage.xml.XMLStringFormatter.get_formatter"]], "graphtage.xml": [[26, "module-graphtage.xml"]], "has_non_zero_cost() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit.has_non_zero_cost"]], "initial_bounds (graphtage.xml.xmlelementedit attribute)": [[26, "graphtage.xml.XMLElementEdit.initial_bounds"]], "is_complete() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit.is_complete"]], "is_leaf (graphtage.xml.xmlelement property)": [[26, "graphtage.xml.XMLElement.is_leaf"]], "is_leaf (graphtage.xml.xmlelementchildren property)": [[26, "graphtage.xml.XMLElementChildren.is_leaf"]], "is_partial (graphtage.xml.xmlchildformatter attribute)": [[26, "graphtage.xml.XMLChildFormatter.is_partial"]], "is_partial (graphtage.xml.xmlelementattribformatter attribute)": [[26, "graphtage.xml.XMLElementAttribFormatter.is_partial"]], "is_partial (graphtage.xml.xmlformatter attribute)": [[26, "graphtage.xml.XMLFormatter.is_partial"]], "is_partial (graphtage.xml.xmlstringformatter attribute)": [[26, "graphtage.xml.XMLStringFormatter.is_partial"]], "is_quoted (graphtage.xml.xmlstringformatter attribute)": [[26, "graphtage.xml.XMLStringFormatter.is_quoted"]], "item_newline() (graphtage.xml.xmlchildformatter method)": [[26, "graphtage.xml.XMLChildFormatter.item_newline"]], "item_newline() (graphtage.xml.xmlelementattribformatter method)": [[26, "graphtage.xml.XMLElementAttribFormatter.item_newline"]], "items_indent() (graphtage.xml.xmlchildformatter method)": [[26, "graphtage.xml.XMLChildFormatter.items_indent"]], "items_indent() (graphtage.xml.xmlelementattribformatter method)": [[26, "graphtage.xml.XMLElementAttribFormatter.items_indent"]], "make_edited() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.make_edited"]], "make_edited() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.make_edited"]], "on_diff() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit.on_diff"]], "parent (graphtage.xml.xmlchildformatter attribute)": [[26, "graphtage.xml.XMLChildFormatter.parent"]], "parent (graphtage.xml.xmlelement property)": [[26, "graphtage.xml.XMLElement.parent"]], "parent (graphtage.xml.xmlelementattribformatter attribute)": [[26, "graphtage.xml.XMLElementAttribFormatter.parent"]], "parent (graphtage.xml.xmlelementchildren property)": [[26, "graphtage.xml.XMLElementChildren.parent"]], "parent (graphtage.xml.xmlformatter attribute)": [[26, "graphtage.xml.XMLFormatter.parent"]], "parent (graphtage.xml.xmlstringformatter attribute)": [[26, "graphtage.xml.XMLStringFormatter.parent"]], "print() (graphtage.xml.xmlchildformatter method)": [[26, "graphtage.xml.XMLChildFormatter.print"]], "print() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.print"]], "print() (graphtage.xml.xmlelementattribformatter method)": [[26, "graphtage.xml.XMLElementAttribFormatter.print"]], "print() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.print"]], "print() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit.print"]], "print() (graphtage.xml.xmlformatter method)": [[26, "graphtage.xml.XMLFormatter.print"]], "print() (graphtage.xml.xmlstringformatter method)": [[26, "graphtage.xml.XMLStringFormatter.print"]], "print_keyvaluepairnode() (graphtage.xml.xmlelementattribformatter method)": [[26, "graphtage.xml.XMLElementAttribFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.xml.xmlformatter method)": [[26, "graphtage.xml.XMLFormatter.print_LeafNode"]], "print_listnode() (graphtage.xml.xmlchildformatter method)": [[26, "graphtage.xml.XMLChildFormatter.print_ListNode"]], "print_mappingnode() (graphtage.xml.xmlelementattribformatter method)": [[26, "graphtage.xml.XMLElementAttribFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.xml.xmlelementattribformatter method)": [[26, "graphtage.xml.XMLElementAttribFormatter.print_MultiSetNode"]], "print_sequencenode() (graphtage.xml.xmlchildformatter method)": [[26, "graphtage.xml.XMLChildFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.xml.xmlelementattribformatter method)": [[26, "graphtage.xml.XMLElementAttribFormatter.print_SequenceNode"]], "print_stringedit() (graphtage.xml.xmlstringformatter method)": [[26, "graphtage.xml.XMLStringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.xml.xmlstringformatter method)": [[26, "graphtage.xml.XMLStringFormatter.print_StringNode"]], "print_xmlelement() (graphtage.xml.xmlformatter method)": [[26, "graphtage.xml.XMLFormatter.print_XMLElement"]], "print_parent_context() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.print_parent_context"]], "print_parent_context() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.print_parent_context"]], "root (graphtage.xml.xmlchildformatter property)": [[26, "graphtage.xml.XMLChildFormatter.root"]], "root (graphtage.xml.xmlelementattribformatter property)": [[26, "graphtage.xml.XMLElementAttribFormatter.root"]], "root (graphtage.xml.xmlformatter property)": [[26, "graphtage.xml.XMLFormatter.root"]], "root (graphtage.xml.xmlstringformatter property)": [[26, "graphtage.xml.XMLStringFormatter.root"]], "sub_format_types (graphtage.xml.xmlchildformatter attribute)": [[26, "graphtage.xml.XMLChildFormatter.sub_format_types"]], "sub_format_types (graphtage.xml.xmlelementattribformatter attribute)": [[26, "graphtage.xml.XMLElementAttribFormatter.sub_format_types"]], "sub_format_types (graphtage.xml.xmlformatter attribute)": [[26, "graphtage.xml.XMLFormatter.sub_format_types"]], "sub_format_types (graphtage.xml.xmlstringformatter attribute)": [[26, "graphtage.xml.XMLStringFormatter.sub_format_types"]], "sub_formatters (graphtage.xml.xmlchildformatter attribute)": [[26, "graphtage.xml.XMLChildFormatter.sub_formatters"]], "sub_formatters (graphtage.xml.xmlelementattribformatter attribute)": [[26, "graphtage.xml.XMLElementAttribFormatter.sub_formatters"]], "sub_formatters (graphtage.xml.xmlformatter attribute)": [[26, "graphtage.xml.XMLFormatter.sub_formatters"]], "sub_formatters (graphtage.xml.xmlstringformatter attribute)": [[26, "graphtage.xml.XMLStringFormatter.sub_formatters"]], "tag (graphtage.xml.xmlelement attribute)": [[26, "graphtage.xml.XMLElement.tag"]], "tag (graphtage.xml.xmlelementobj attribute)": [[26, "graphtage.xml.XMLElementObj.tag"]], "tag_edit (graphtage.xml.xmlelementedit attribute)": [[26, "graphtage.xml.XMLElementEdit.tag_edit"]], "text (graphtage.xml.xmlelement attribute)": [[26, "graphtage.xml.XMLElement.text"]], "text (graphtage.xml.xmlelementobj attribute)": [[26, "graphtage.xml.XMLElementObj.text"]], "text_edit (graphtage.xml.xmlelementedit attribute)": [[26, "graphtage.xml.XMLElementEdit.text_edit"]], "tighten_bounds() (graphtage.xml.xmlelementedit method)": [[26, "graphtage.xml.XMLElementEdit.tighten_bounds"]], "to_obj() (graphtage.xml.xmlelement method)": [[26, "graphtage.xml.XMLElement.to_obj"]], "to_obj() (graphtage.xml.xmlelementchildren method)": [[26, "graphtage.xml.XMLElementChildren.to_obj"]], "total_size (graphtage.xml.xmlelement property)": [[26, "graphtage.xml.XMLElement.total_size"]], "total_size (graphtage.xml.xmlelementchildren property)": [[26, "graphtage.xml.XMLElementChildren.total_size"]], "valid (graphtage.xml.xmlelementedit property)": [[26, "graphtage.xml.XMLElementEdit.valid"]], "write_char() (graphtage.xml.xmlstringformatter method)": [[26, "graphtage.xml.XMLStringFormatter.write_char"]], "write_end_quote() (graphtage.xml.xmlstringformatter method)": [[26, "graphtage.xml.XMLStringFormatter.write_end_quote"]], "write_start_quote() (graphtage.xml.xmlstringformatter method)": [[26, "graphtage.xml.XMLStringFormatter.write_start_quote"]], "default_instance (graphtage.yaml.yamldictformatter attribute)": [[27, "graphtage.yaml.YAMLDictFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamlformatter attribute)": [[27, "graphtage.yaml.YAMLFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamllistformatter attribute)": [[27, "graphtage.yaml.YAMLListFormatter.DEFAULT_INSTANCE"]], "default_instance (graphtage.yaml.yamlstringformatter attribute)": [[27, "graphtage.yaml.YAMLStringFormatter.DEFAULT_INSTANCE"]], "yaml (class in graphtage.yaml)": [[27, "graphtage.yaml.YAML"]], "yamldictformatter (class in graphtage.yaml)": [[27, "graphtage.yaml.YAMLDictFormatter"]], "yamlformatter (class in graphtage.yaml)": [[27, "graphtage.yaml.YAMLFormatter"]], "yamlkeyvaluepairformatter (class in graphtage.yaml)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter"]], "yamllistformatter (class in graphtage.yaml)": [[27, "graphtage.yaml.YAMLListFormatter"]], "yamlstringformatter (class in graphtage.yaml)": [[27, "graphtage.yaml.YAMLStringFormatter"]], "__init__() (graphtage.yaml.yaml method)": [[27, "graphtage.yaml.YAML.__init__"]], "__init__() (graphtage.yaml.yamldictformatter method)": [[27, "graphtage.yaml.YAMLDictFormatter.__init__"]], "__init__() (graphtage.yaml.yamlformatter method)": [[27, "graphtage.yaml.YAMLFormatter.__init__"]], "__init__() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.__init__"]], "__init__() (graphtage.yaml.yamllistformatter method)": [[27, "graphtage.yaml.YAMLListFormatter.__init__"]], "__init__() (graphtage.yaml.yamlstringformatter method)": [[27, "graphtage.yaml.YAMLStringFormatter.__init__"]], "__new__() (graphtage.yaml.yamldictformatter static method)": [[27, "graphtage.yaml.YAMLDictFormatter.__new__"]], "__new__() (graphtage.yaml.yamlformatter static method)": [[27, "graphtage.yaml.YAMLFormatter.__new__"]], "__new__() (graphtage.yaml.yamlkeyvaluepairformatter static method)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.__new__"]], "__new__() (graphtage.yaml.yamllistformatter static method)": [[27, "graphtage.yaml.YAMLListFormatter.__new__"]], "__new__() (graphtage.yaml.yamlstringformatter static method)": [[27, "graphtage.yaml.YAMLStringFormatter.__new__"]], "build_tree() (graphtage.yaml.yaml method)": [[27, "graphtage.yaml.YAML.build_tree"]], "build_tree() (in module graphtage.yaml)": [[27, "graphtage.yaml.build_tree"]], "build_tree_handling_errors() (graphtage.yaml.yaml method)": [[27, "graphtage.yaml.YAML.build_tree_handling_errors"]], "context() (graphtage.yaml.yamlstringformatter method)": [[27, "graphtage.yaml.YAMLStringFormatter.context"]], "default_instance (graphtage.yaml.yaml attribute)": [[27, "graphtage.yaml.YAML.default_instance"]], "delimiter_callback (graphtage.yaml.yamldictformatter attribute)": [[27, "graphtage.yaml.YAMLDictFormatter.delimiter_callback"]], "delimiter_callback (graphtage.yaml.yamllistformatter attribute)": [[27, "graphtage.yaml.YAMLListFormatter.delimiter_callback"]], "edit_print() (graphtage.yaml.yamldictformatter method)": [[27, "graphtage.yaml.YAMLDictFormatter.edit_print"]], "edit_print() (graphtage.yaml.yamllistformatter method)": [[27, "graphtage.yaml.YAMLListFormatter.edit_print"]], "escape() (graphtage.yaml.yamlstringformatter method)": [[27, "graphtage.yaml.YAMLStringFormatter.escape"]], "get_default_formatter() (graphtage.yaml.yaml method)": [[27, "graphtage.yaml.YAML.get_default_formatter"]], "get_formatter() (graphtage.yaml.yamldictformatter method)": [[27, "graphtage.yaml.YAMLDictFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamlformatter method)": [[27, "graphtage.yaml.YAMLFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamllistformatter method)": [[27, "graphtage.yaml.YAMLListFormatter.get_formatter"]], "get_formatter() (graphtage.yaml.yamlstringformatter method)": [[27, "graphtage.yaml.YAMLStringFormatter.get_formatter"]], "graphtage.yaml": [[27, "module-graphtage.yaml"]], "has_newline (graphtage.yaml.yamlstringformatter attribute)": [[27, "graphtage.yaml.YAMLStringFormatter.has_newline"]], "is_partial (graphtage.yaml.yamldictformatter attribute)": [[27, "graphtage.yaml.YAMLDictFormatter.is_partial"]], "is_partial (graphtage.yaml.yamlformatter attribute)": [[27, "graphtage.yaml.YAMLFormatter.is_partial"]], "is_partial (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.is_partial"]], "is_partial (graphtage.yaml.yamllistformatter attribute)": [[27, "graphtage.yaml.YAMLListFormatter.is_partial"]], "is_partial (graphtage.yaml.yamlstringformatter attribute)": [[27, "graphtage.yaml.YAMLStringFormatter.is_partial"]], "is_quoted (graphtage.yaml.yamlstringformatter attribute)": [[27, "graphtage.yaml.YAMLStringFormatter.is_quoted"]], "item_newline() (graphtage.yaml.yamldictformatter method)": [[27, "graphtage.yaml.YAMLDictFormatter.item_newline"]], "item_newline() (graphtage.yaml.yamllistformatter method)": [[27, "graphtage.yaml.YAMLListFormatter.item_newline"]], "items_indent() (graphtage.yaml.yamldictformatter method)": [[27, "graphtage.yaml.YAMLDictFormatter.items_indent"]], "items_indent() (graphtage.yaml.yamllistformatter method)": [[27, "graphtage.yaml.YAMLListFormatter.items_indent"]], "parent (graphtage.yaml.yamldictformatter attribute)": [[27, "graphtage.yaml.YAMLDictFormatter.parent"]], "parent (graphtage.yaml.yamlformatter attribute)": [[27, "graphtage.yaml.YAMLFormatter.parent"]], "parent (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.parent"]], "parent (graphtage.yaml.yamllistformatter attribute)": [[27, "graphtage.yaml.YAMLListFormatter.parent"]], "parent (graphtage.yaml.yamlstringformatter attribute)": [[27, "graphtage.yaml.YAMLStringFormatter.parent"]], "print() (graphtage.yaml.yamldictformatter method)": [[27, "graphtage.yaml.YAMLDictFormatter.print"]], "print() (graphtage.yaml.yamlformatter method)": [[27, "graphtage.yaml.YAMLFormatter.print"]], "print() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.print"]], "print() (graphtage.yaml.yamllistformatter method)": [[27, "graphtage.yaml.YAMLListFormatter.print"]], "print() (graphtage.yaml.yamlstringformatter method)": [[27, "graphtage.yaml.YAMLStringFormatter.print"]], "print_containernode() (graphtage.yaml.yamlformatter method)": [[27, "graphtage.yaml.YAMLFormatter.print_ContainerNode"]], "print_keyvaluepairnode() (graphtage.yaml.yamlkeyvaluepairformatter method)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.print_KeyValuePairNode"]], "print_leafnode() (graphtage.yaml.yamlformatter method)": [[27, "graphtage.yaml.YAMLFormatter.print_LeafNode"]], "print_listnode() (graphtage.yaml.yamllistformatter method)": [[27, "graphtage.yaml.YAMLListFormatter.print_ListNode"]], "print_mappingnode() (graphtage.yaml.yamldictformatter method)": [[27, "graphtage.yaml.YAMLDictFormatter.print_MappingNode"]], "print_multisetnode() (graphtage.yaml.yamldictformatter method)": [[27, "graphtage.yaml.YAMLDictFormatter.print_MultiSetNode"]], "print_sequencenode() (graphtage.yaml.yamldictformatter method)": [[27, "graphtage.yaml.YAMLDictFormatter.print_SequenceNode"]], "print_sequencenode() (graphtage.yaml.yamllistformatter method)": [[27, "graphtage.yaml.YAMLListFormatter.print_SequenceNode"]], "print_stringedit() (graphtage.yaml.yamlstringformatter method)": [[27, "graphtage.yaml.YAMLStringFormatter.print_StringEdit"]], "print_stringnode() (graphtage.yaml.yamlstringformatter method)": [[27, "graphtage.yaml.YAMLStringFormatter.print_StringNode"]], "root (graphtage.yaml.yamldictformatter property)": [[27, "graphtage.yaml.YAMLDictFormatter.root"]], "root (graphtage.yaml.yamlformatter property)": [[27, "graphtage.yaml.YAMLFormatter.root"]], "root (graphtage.yaml.yamlkeyvaluepairformatter property)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.root"]], "root (graphtage.yaml.yamllistformatter property)": [[27, "graphtage.yaml.YAMLListFormatter.root"]], "root (graphtage.yaml.yamlstringformatter property)": [[27, "graphtage.yaml.YAMLStringFormatter.root"]], "sub_format_types (graphtage.yaml.yamldictformatter attribute)": [[27, "graphtage.yaml.YAMLDictFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamlformatter attribute)": [[27, "graphtage.yaml.YAMLFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamllistformatter attribute)": [[27, "graphtage.yaml.YAMLListFormatter.sub_format_types"]], "sub_format_types (graphtage.yaml.yamlstringformatter attribute)": [[27, "graphtage.yaml.YAMLStringFormatter.sub_format_types"]], "sub_formatters (graphtage.yaml.yamldictformatter attribute)": [[27, "graphtage.yaml.YAMLDictFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamlformatter attribute)": [[27, "graphtage.yaml.YAMLFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamlkeyvaluepairformatter attribute)": [[27, "graphtage.yaml.YAMLKeyValuePairFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamllistformatter attribute)": [[27, "graphtage.yaml.YAMLListFormatter.sub_formatters"]], "sub_formatters (graphtage.yaml.yamlstringformatter attribute)": [[27, "graphtage.yaml.YAMLStringFormatter.sub_formatters"]], "write_char() (graphtage.yaml.yamlstringformatter method)": [[27, "graphtage.yaml.YAMLStringFormatter.write_char"]], "write_end_quote() (graphtage.yaml.yamlstringformatter method)": [[27, "graphtage.yaml.YAMLStringFormatter.write_end_quote"]], "write_obj() (graphtage.yaml.yamlformatter static method)": [[27, "graphtage.yaml.YAMLFormatter.write_obj"]], "write_start_quote() (graphtage.yaml.yamlstringformatter method)": [[27, "graphtage.yaml.YAMLStringFormatter.write_start_quote"]]}})